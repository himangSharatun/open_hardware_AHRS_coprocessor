; ModuleID = '/home/toni/Documents/vivado_projects/MadgwickAHRSoriginal/MadgwickAHRSoriginal/solution1/.autopilot/db/a.o.2.bc'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@q3 = global float 0.000000e+00, align 4
@q2 = global float 0.000000e+00, align 4
@q1 = global float 0.000000e+00, align 4
@q0 = global float 1.000000e+00, align 4
@llvm_global_ctors_1 = appending global [1 x void ()*] [void ()* @_GLOBAL__I_a]
@llvm_global_ctors_0 = appending global [1 x i32] [i32 65535]
@beta = global float 0x3FB99999A0000000, align 4
@MadgwickAHRSupdate_s = internal unnamed_addr constant [19 x i8] c"MadgwickAHRSupdate\00"

declare float @llvm.sqrt.f32(float) nounwind readonly

declare i32 @llvm.part.select.i32(i32, i32, i32) nounwind readnone

declare void @llvm.dbg.value(metadata, i64, metadata) nounwind readnone

define weak void @_ssdm_op_SpecTopModule(...) {
entry:
  ret void
}

define weak void @_ssdm_op_SpecBitsMap(...) {
entry:
  ret void
}

define weak float @_ssdm_op_Read.ap_auto.float(float) {
entry:
  ret float %0
}

define weak i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32, i32, i32) nounwind readnone {
entry:
  %empty = call i32 @llvm.part.select.i32(i32 %0, i32 %1, i32 %2)
  %empty_4 = trunc i32 %empty to i8
  ret i8 %empty_4
}

define weak i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32, i32, i32) nounwind readnone {
entry:
  %empty = call i32 @llvm.part.select.i32(i32 %0, i32 %1, i32 %2)
  %empty_5 = trunc i32 %empty to i31
  ret i31 %empty_5
}

declare i23 @_ssdm_op_PartSelect.i23.i32.i32.i32(i32, i32, i32) nounwind readnone

declare void @_GLOBAL__I_a() nounwind section ".text.startup"

define internal fastcc void @MadgwickAHRSupdateIM(float %gx, float %gy, float %gz, float %ax, float %ay, float %az) nounwind uwtable {
  %az_read = call float @_ssdm_op_Read.ap_auto.float(float %az) nounwind
  %ay_read = call float @_ssdm_op_Read.ap_auto.float(float %ay) nounwind
  %ax_read = call float @_ssdm_op_Read.ap_auto.float(float %ax) nounwind
  %gz_read = call float @_ssdm_op_Read.ap_auto.float(float %gz) nounwind
  %gy_read = call float @_ssdm_op_Read.ap_auto.float(float %gy) nounwind
  %gx_read = call float @_ssdm_op_Read.ap_auto.float(float %gx) nounwind
  %q1_load = load volatile float* @q1, align 4
  %tmp_to_int = bitcast float %q1_load to i32
  %tmp_neg = xor i32 %tmp_to_int, -2147483648
  %tmp = bitcast i32 %tmp_neg to float
  %tmp_6 = fmul float %tmp, %gx_read
  %q2_load = load volatile float* @q2, align 4
  %tmp_7 = fmul float %q2_load, %gy_read
  %tmp_8 = fsub float %tmp_6, %tmp_7
  %q3_load = load volatile float* @q3, align 4
  %tmp_9 = fmul float %q3_load, %gz_read
  %tmp_s = fsub float %tmp_8, %tmp_9
  %qDot1 = fmul float %tmp_s, 5.000000e-01
  %q0_load = load volatile float* @q0, align 4
  %tmp_1 = fmul float %q0_load, %gx_read
  %q2_load_1 = load volatile float* @q2, align 4
  %tmp_2 = fmul float %q2_load_1, %gz_read
  %tmp_3 = fadd float %tmp_1, %tmp_2
  %q3_load_1 = load volatile float* @q3, align 4
  %tmp_4 = fmul float %q3_load_1, %gy_read
  %tmp_5 = fsub float %tmp_3, %tmp_4
  %qDot2 = fmul float %tmp_5, 5.000000e-01
  %q0_load_1 = load volatile float* @q0, align 4
  %tmp_10 = fmul float %q0_load_1, %gy_read
  %q1_load_1 = load volatile float* @q1, align 4
  %tmp_11 = fmul float %q1_load_1, %gz_read
  %tmp_12 = fsub float %tmp_10, %tmp_11
  %q3_load_2 = load volatile float* @q3, align 4
  %tmp_13 = fmul float %q3_load_2, %gx_read
  %tmp_14 = fadd float %tmp_12, %tmp_13
  %qDot3 = fmul float %tmp_14, 5.000000e-01
  %q0_load_2 = load volatile float* @q0, align 4
  %tmp_15 = fmul float %q0_load_2, %gz_read
  %q1_load_2 = load volatile float* @q1, align 4
  %tmp_16 = fmul float %q1_load_2, %gy_read
  %tmp_17 = fadd float %tmp_15, %tmp_16
  %q2_load_2 = load volatile float* @q2, align 4
  %tmp_18 = fmul float %q2_load_2, %gx_read
  %tmp_19 = fsub float %tmp_17, %tmp_18
  %qDot4 = fmul float %tmp_19, 5.000000e-01
  %ax_to_int = bitcast float %ax_read to i32
  %tmp_20 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %ax_to_int, i32 23, i32 30)
  %tmp_21 = trunc i32 %ax_to_int to i23
  %notlhs = icmp ne i8 %tmp_20, -1
  %notrhs = icmp eq i23 %tmp_21, 0
  %tmp_22 = or i1 %notrhs, %notlhs
  %tmp_27 = fcmp oeq float %ax_read, 0.000000e+00
  %tmp_75 = and i1 %tmp_22, %tmp_27
  %ay_to_int = bitcast float %ay_read to i32
  %tmp_94 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %ay_to_int, i32 23, i32 30)
  %tmp_99 = trunc i32 %ay_to_int to i23
  %notlhs4 = icmp ne i8 %tmp_94, -1
  %notrhs5 = icmp eq i23 %tmp_99, 0
  %tmp_100 = or i1 %notrhs5, %notlhs4
  %tmp_101 = fcmp oeq float %ay_read, 0.000000e+00
  %tmp_102 = and i1 %tmp_100, %tmp_101
  %az_to_int = bitcast float %az_read to i32
  %tmp_103 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %az_to_int, i32 23, i32 30)
  %tmp_104 = trunc i32 %az_to_int to i23
  %notlhs6 = icmp ne i8 %tmp_103, -1
  %notrhs7 = icmp eq i23 %tmp_104, 0
  %tmp_105 = or i1 %notrhs7, %notlhs6
  %tmp_106 = fcmp oeq float %az_read, 0.000000e+00
  %tmp_107 = and i1 %tmp_105, %tmp_106
  %tmp1 = and i1 %tmp_102, %tmp_107
  %or_cond1 = and i1 %tmp1, %tmp_75
  br i1 %or_cond1, label %._crit_edge, label %1

; <label>:1                                       ; preds = %0
  %tmp_23 = fmul float %ax_read, %ax_read
  %tmp_24 = fmul float %ay_read, %ay_read
  %tmp_25 = fadd float %tmp_23, %tmp_24
  %tmp_26 = fmul float %az_read, %az_read
  %x_assign = fadd float %tmp_25, %tmp_26
  %halfx = fmul float %x_assign, 5.000000e-01
  %y = bitcast float %x_assign to i32
  %tmp_i = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %y, i32 1, i32 31)
  %tmp_108 = zext i31 %tmp_i to i32
  %y_1 = sub i32 1597463007, %tmp_108
  %tmp_1_i = bitcast i32 %y_1 to float
  %tmp_2_i = fmul float %halfx, %tmp_1_i
  %tmp_3_i = fmul float %tmp_2_i, %tmp_1_i
  %tmp_4_i = fsub float 1.500000e+00, %tmp_3_i
  %recipNorm = fmul float %tmp_1_i, %tmp_4_i
  %ax_assign = fmul float %recipNorm, %ax_read
  %ay_assign = fmul float %recipNorm, %ay_read
  %az_assign = fmul float %recipNorm, %az_read
  %q0_load_3 = load volatile float* @q0, align 4
  %p_2q0 = fmul float %q0_load_3, 2.000000e+00
  %q1_load_3 = load volatile float* @q1, align 4
  %p_2q1 = fmul float %q1_load_3, 2.000000e+00
  %q2_load_3 = load volatile float* @q2, align 4
  %p_2q2 = fmul float %q2_load_3, 2.000000e+00
  %q3_load_3 = load volatile float* @q3, align 4
  %p_2q3 = fmul float %q3_load_3, 2.000000e+00
  %q0_load_4 = load volatile float* @q0, align 4
  %p_4q0 = fmul float %q0_load_4, 4.000000e+00
  %q1_load_4 = load volatile float* @q1, align 4
  %p_4q1 = fmul float %q1_load_4, 4.000000e+00
  %q2_load_4 = load volatile float* @q2, align 4
  %p_4q2 = fmul float %q2_load_4, 4.000000e+00
  %q1_load_5 = load volatile float* @q1, align 4
  %p_8q1 = fmul float %q1_load_5, 8.000000e+00
  %q2_load_5 = load volatile float* @q2, align 4
  %p_8q2 = fmul float %q2_load_5, 8.000000e+00
  %q0_load_5 = load volatile float* @q0, align 4
  %q0_load_6 = load volatile float* @q0, align 4
  %q0q0 = fmul float %q0_load_5, %q0_load_6
  %q1_load_6 = load volatile float* @q1, align 4
  %q1_load_7 = load volatile float* @q1, align 4
  %q1q1 = fmul float %q1_load_6, %q1_load_7
  %q2_load_6 = load volatile float* @q2, align 4
  %q2_load_7 = load volatile float* @q2, align 4
  %q2q2 = fmul float %q2_load_6, %q2_load_7
  %q3_load_4 = load volatile float* @q3, align 4
  %q3_load_5 = load volatile float* @q3, align 4
  %q3q3 = fmul float %q3_load_4, %q3_load_5
  %tmp_28 = fmul float %p_4q0, %q2q2
  %tmp_29 = fmul float %p_2q2, %ax_assign
  %tmp_30 = fadd float %tmp_28, %tmp_29
  %tmp_31 = fmul float %p_4q0, %q1q1
  %tmp_32 = fadd float %tmp_30, %tmp_31
  %tmp_33 = fmul float %p_2q1, %ay_assign
  %s0 = fsub float %tmp_32, %tmp_33
  %tmp_34 = fmul float %p_4q1, %q3q3
  %tmp_35 = fmul float %p_2q3, %ax_assign
  %tmp_36 = fsub float %tmp_34, %tmp_35
  %tmp_37 = fmul float %q0q0, 4.000000e+00
  %q1_load_8 = load volatile float* @q1, align 4
  %tmp_38 = fmul float %tmp_37, %q1_load_8
  %tmp_39 = fadd float %tmp_36, %tmp_38
  %tmp_40 = fmul float %p_2q0, %ay_assign
  %tmp_41 = fsub float %tmp_39, %tmp_40
  %tmp_42 = fsub float %tmp_41, %p_4q1
  %tmp_43 = fmul float %p_8q1, %q1q1
  %tmp_44 = fadd float %tmp_42, %tmp_43
  %tmp_45 = fmul float %p_8q1, %q2q2
  %tmp_46 = fadd float %tmp_44, %tmp_45
  %tmp_47 = fmul float %p_4q1, %az_assign
  %s1 = fadd float %tmp_46, %tmp_47
  %q2_load_8 = load volatile float* @q2, align 4
  %tmp_48 = fmul float %tmp_37, %q2_load_8
  %tmp_49 = fmul float %p_2q0, %ax_assign
  %tmp_50 = fadd float %tmp_48, %tmp_49
  %tmp_51 = fmul float %p_4q2, %q3q3
  %tmp_52 = fadd float %tmp_50, %tmp_51
  %tmp_53 = fmul float %p_2q3, %ay_assign
  %tmp_54 = fsub float %tmp_52, %tmp_53
  %tmp_55 = fsub float %tmp_54, %p_4q2
  %tmp_56 = fmul float %p_8q2, %q1q1
  %tmp_57 = fadd float %tmp_55, %tmp_56
  %tmp_58 = fmul float %p_8q2, %q2q2
  %tmp_59 = fadd float %tmp_57, %tmp_58
  %tmp_60 = fmul float %p_4q2, %az_assign
  %s2 = fadd float %tmp_59, %tmp_60
  %tmp_61 = fmul float %q1q1, 4.000000e+00
  %q3_load_6 = load volatile float* @q3, align 4
  %tmp_62 = fmul float %tmp_61, %q3_load_6
  %tmp_63 = fmul float %p_2q1, %ax_assign
  %tmp_64 = fsub float %tmp_62, %tmp_63
  %tmp_65 = fmul float %q2q2, 4.000000e+00
  %q3_load_7 = load volatile float* @q3, align 4
  %tmp_66 = fmul float %tmp_65, %q3_load_7
  %tmp_67 = fadd float %tmp_64, %tmp_66
  %tmp_68 = fmul float %p_2q2, %ay_assign
  %s3 = fsub float %tmp_67, %tmp_68
  %tmp_69 = fmul float %s0, %s0
  %tmp_70 = fmul float %s1, %s1
  %tmp_71 = fadd float %tmp_69, %tmp_70
  %tmp_72 = fmul float %s2, %s2
  %tmp_73 = fadd float %tmp_71, %tmp_72
  %tmp_74 = fmul float %s3, %s3
  %x_assign_1 = fadd float %tmp_73, %tmp_74
  %halfx_1 = fmul float %x_assign_1, 5.000000e-01
  %y_2 = bitcast float %x_assign_1 to i32
  %tmp_i3 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %y_2, i32 1, i32 31)
  %tmp_109 = zext i31 %tmp_i3 to i32
  %y_3 = sub i32 1597463007, %tmp_109
  %tmp_1_i5 = bitcast i32 %y_3 to float
  %tmp_2_i6 = fmul float %halfx_1, %tmp_1_i5
  %tmp_3_i7 = fmul float %tmp_2_i6, %tmp_1_i5
  %tmp_4_i8 = fsub float 1.500000e+00, %tmp_3_i7
  %recipNorm_1 = fmul float %tmp_1_i5, %tmp_4_i8
  %s0_1 = fmul float %s0, %recipNorm_1
  %s1_1 = fmul float %s1, %recipNorm_1
  %s2_1 = fmul float %s2, %recipNorm_1
  %s3_1 = fmul float %s3, %recipNorm_1
  %beta_load = load volatile float* @beta, align 4
  %tmp_76 = fmul float %beta_load, %s0_1
  %qDot1_1 = fsub float %qDot1, %tmp_76
  %beta_load_1 = load volatile float* @beta, align 4
  %tmp_77 = fmul float %beta_load_1, %s1_1
  %qDot2_1 = fsub float %qDot2, %tmp_77
  %beta_load_2 = load volatile float* @beta, align 4
  %tmp_78 = fmul float %beta_load_2, %s2_1
  %qDot3_1 = fsub float %qDot3, %tmp_78
  %beta_load_3 = load volatile float* @beta, align 4
  %tmp_79 = fmul float %beta_load_3, %s3_1
  %qDot4_1 = fsub float %qDot4, %tmp_79
  br label %._crit_edge

._crit_edge:                                      ; preds = %1, %0
  %qDot = phi float [ %qDot1_1, %1 ], [ %qDot1, %0 ]
  %qDot5 = phi float [ %qDot2_1, %1 ], [ %qDot2, %0 ]
  %qDot6 = phi float [ %qDot3_1, %1 ], [ %qDot3, %0 ]
  %qDot7 = phi float [ %qDot4_1, %1 ], [ %qDot4, %0 ]
  %tmp_80 = fmul float %qDot, 1.953125e-03
  %q0_load_7 = load volatile float* @q0, align 4
  %tmp_81 = fadd float %q0_load_7, %tmp_80
  store volatile float %tmp_81, float* @q0, align 4
  %tmp_82 = fmul float %qDot5, 1.953125e-03
  %q1_load_9 = load volatile float* @q1, align 4
  %tmp_83 = fadd float %q1_load_9, %tmp_82
  store volatile float %tmp_83, float* @q1, align 4
  %tmp_84 = fmul float %qDot6, 1.953125e-03
  %q2_load_9 = load volatile float* @q2, align 4
  %tmp_85 = fadd float %q2_load_9, %tmp_84
  store volatile float %tmp_85, float* @q2, align 4
  %tmp_86 = fmul float %qDot7, 1.953125e-03
  %q3_load_8 = load volatile float* @q3, align 4
  %tmp_87 = fadd float %q3_load_8, %tmp_86
  store volatile float %tmp_87, float* @q3, align 4
  %q0_load_8 = load volatile float* @q0, align 4
  %q0_load_9 = load volatile float* @q0, align 4
  %tmp_88 = fmul float %q0_load_8, %q0_load_9
  %q1_load_10 = load volatile float* @q1, align 4
  %q1_load_11 = load volatile float* @q1, align 4
  %tmp_89 = fmul float %q1_load_10, %q1_load_11
  %tmp_90 = fadd float %tmp_88, %tmp_89
  %q2_load_10 = load volatile float* @q2, align 4
  %q2_load_11 = load volatile float* @q2, align 4
  %tmp_91 = fmul float %q2_load_10, %q2_load_11
  %tmp_92 = fadd float %tmp_90, %tmp_91
  %q3_load_9 = load volatile float* @q3, align 4
  %q3_load_10 = load volatile float* @q3, align 4
  %tmp_93 = fmul float %q3_load_9, %q3_load_10
  %x_assign_2 = fadd float %tmp_92, %tmp_93
  %halfx_2 = fmul float %x_assign_2, 5.000000e-01
  %y_4 = bitcast float %x_assign_2 to i32
  %tmp_i1 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %y_4, i32 1, i32 31)
  %tmp_110 = zext i31 %tmp_i1 to i32
  %y_5 = sub i32 1597463007, %tmp_110
  %tmp_1_i1 = bitcast i32 %y_5 to float
  %tmp_2_i1 = fmul float %halfx_2, %tmp_1_i1
  %tmp_3_i1 = fmul float %tmp_2_i1, %tmp_1_i1
  %tmp_4_i1 = fsub float 1.500000e+00, %tmp_3_i1
  %recipNorm_2 = fmul float %tmp_1_i1, %tmp_4_i1
  %q0_load_10 = load volatile float* @q0, align 4
  %tmp_95 = fmul float %q0_load_10, %recipNorm_2
  store volatile float %tmp_95, float* @q0, align 4
  %q1_load_12 = load volatile float* @q1, align 4
  %tmp_96 = fmul float %q1_load_12, %recipNorm_2
  store volatile float %tmp_96, float* @q1, align 4
  %q2_load_12 = load volatile float* @q2, align 4
  %tmp_97 = fmul float %q2_load_12, %recipNorm_2
  store volatile float %tmp_97, float* @q2, align 4
  %q3_load_11 = load volatile float* @q3, align 4
  %tmp_98 = fmul float %q3_load_11, %recipNorm_2
  store volatile float %tmp_98, float* @q3, align 4
  ret void
}

define void @MadgwickAHRSupdate(float %gx, float %gy, float %gz, float %ax, float %ay, float %az, float %mx, float %my, float %mz) nounwind uwtable {
  call void (...)* @_ssdm_op_SpecBitsMap(float %gx) nounwind, !map !211
  call void (...)* @_ssdm_op_SpecBitsMap(float %gy) nounwind, !map !217
  call void (...)* @_ssdm_op_SpecBitsMap(float %gz) nounwind, !map !221
  call void (...)* @_ssdm_op_SpecBitsMap(float %ax) nounwind, !map !225
  call void (...)* @_ssdm_op_SpecBitsMap(float %ay) nounwind, !map !229
  call void (...)* @_ssdm_op_SpecBitsMap(float %az) nounwind, !map !233
  call void (...)* @_ssdm_op_SpecBitsMap(float %mx) nounwind, !map !237
  call void (...)* @_ssdm_op_SpecBitsMap(float %my) nounwind, !map !241
  call void (...)* @_ssdm_op_SpecBitsMap(float %mz) nounwind, !map !245
  call void (...)* @_ssdm_op_SpecTopModule([19 x i8]* @MadgwickAHRSupdate_s) nounwind
  %mz_read = call float @_ssdm_op_Read.ap_auto.float(float %mz) nounwind
  %my_read = call float @_ssdm_op_Read.ap_auto.float(float %my) nounwind
  %mx_read = call float @_ssdm_op_Read.ap_auto.float(float %mx) nounwind
  %az_read = call float @_ssdm_op_Read.ap_auto.float(float %az) nounwind
  %ay_read = call float @_ssdm_op_Read.ap_auto.float(float %ay) nounwind
  %ax_read = call float @_ssdm_op_Read.ap_auto.float(float %ax) nounwind
  %gz_read = call float @_ssdm_op_Read.ap_auto.float(float %gz) nounwind
  %gy_read = call float @_ssdm_op_Read.ap_auto.float(float %gy) nounwind
  %gx_read = call float @_ssdm_op_Read.ap_auto.float(float %gx) nounwind
  %mx_to_int = bitcast float %mx_read to i32
  %tmp = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %mx_to_int, i32 23, i32 30)
  %tmp_121 = trunc i32 %mx_to_int to i23
  %notlhs = icmp ne i8 %tmp, -1
  %notrhs = icmp eq i23 %tmp_121, 0
  %tmp_122 = or i1 %notrhs, %notlhs
  %tmp_123 = fcmp oeq float %mx_read, 0.000000e+00
  %tmp_128 = and i1 %tmp_122, %tmp_123
  %my_to_int = bitcast float %my_read to i32
  %tmp_133 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %my_to_int, i32 23, i32 30)
  %tmp_297 = trunc i32 %my_to_int to i23
  %notlhs8 = icmp ne i8 %tmp_133, -1
  %notrhs9 = icmp eq i23 %tmp_297, 0
  %tmp_316 = or i1 %notrhs9, %notlhs8
  %tmp_319 = fcmp oeq float %my_read, 0.000000e+00
  %tmp_320 = and i1 %tmp_316, %tmp_319
  %mz_to_int = bitcast float %mz_read to i32
  %tmp_321 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %mz_to_int, i32 23, i32 30)
  %tmp_322 = trunc i32 %mz_to_int to i23
  %notlhs1 = icmp ne i8 %tmp_321, -1
  %notrhs1 = icmp eq i23 %tmp_322, 0
  %tmp_323 = or i1 %notrhs1, %notlhs1
  %tmp_324 = fcmp oeq float %mz_read, 0.000000e+00
  %tmp_325 = and i1 %tmp_323, %tmp_324
  %tmp1 = and i1 %tmp_320, %tmp_325
  %or_cond1 = and i1 %tmp1, %tmp_128
  br i1 %or_cond1, label %1, label %2

; <label>:1                                       ; preds = %0
  call fastcc void @MadgwickAHRSupdateIM(float %gx_read, float %gy_read, float %gz_read, float %ax_read, float %ay_read, float %az_read)
  br label %4

; <label>:2                                       ; preds = %0
  %q1_load = load volatile float* @q1, align 4
  %tmp_100_to_int = bitcast float %q1_load to i32
  %tmp_100_neg = xor i32 %tmp_100_to_int, -2147483648
  %tmp_s = bitcast i32 %tmp_100_neg to float
  %tmp_99 = fmul float %tmp_s, %gx_read
  %q2_load = load volatile float* @q2, align 4
  %tmp_100 = fmul float %q2_load, %gy_read
  %tmp_101 = fsub float %tmp_99, %tmp_100
  %q3_load = load volatile float* @q3, align 4
  %tmp_102 = fmul float %q3_load, %gz_read
  %tmp_103 = fsub float %tmp_101, %tmp_102
  %qDot1 = fmul float %tmp_103, 5.000000e-01
  %q0_load = load volatile float* @q0, align 4
  %tmp_104 = fmul float %q0_load, %gx_read
  %q2_load_13 = load volatile float* @q2, align 4
  %tmp_105 = fmul float %q2_load_13, %gz_read
  %tmp_106 = fadd float %tmp_104, %tmp_105
  %q3_load_12 = load volatile float* @q3, align 4
  %tmp_107 = fmul float %q3_load_12, %gy_read
  %tmp_108 = fsub float %tmp_106, %tmp_107
  %qDot2 = fmul float %tmp_108, 5.000000e-01
  %q0_load_11 = load volatile float* @q0, align 4
  %tmp_109 = fmul float %q0_load_11, %gy_read
  %q1_load_13 = load volatile float* @q1, align 4
  %tmp_110 = fmul float %q1_load_13, %gz_read
  %tmp_111 = fsub float %tmp_109, %tmp_110
  %q3_load_13 = load volatile float* @q3, align 4
  %tmp_112 = fmul float %q3_load_13, %gx_read
  %tmp_113 = fadd float %tmp_111, %tmp_112
  %qDot3 = fmul float %tmp_113, 5.000000e-01
  %q0_load_12 = load volatile float* @q0, align 4
  %tmp_114 = fmul float %q0_load_12, %gz_read
  %q1_load_14 = load volatile float* @q1, align 4
  %tmp_115 = fmul float %q1_load_14, %gy_read
  %tmp_116 = fadd float %tmp_114, %tmp_115
  %q2_load_14 = load volatile float* @q2, align 4
  %tmp_117 = fmul float %q2_load_14, %gx_read
  %tmp_118 = fsub float %tmp_116, %tmp_117
  %qDot4 = fmul float %tmp_118, 5.000000e-01
  %ax_to_int = bitcast float %ax_read to i32
  %tmp_326 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %ax_to_int, i32 23, i32 30)
  %tmp_327 = trunc i32 %ax_to_int to i23
  %notlhs2 = icmp ne i8 %tmp_326, -1
  %notrhs2 = icmp eq i23 %tmp_327, 0
  %tmp_328 = or i1 %notrhs2, %notlhs2
  %tmp_329 = fcmp oeq float %ax_read, 0.000000e+00
  %tmp_330 = and i1 %tmp_328, %tmp_329
  %ay_to_int = bitcast float %ay_read to i32
  %tmp_331 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %ay_to_int, i32 23, i32 30)
  %tmp_332 = trunc i32 %ay_to_int to i23
  %notlhs3 = icmp ne i8 %tmp_331, -1
  %notrhs3 = icmp eq i23 %tmp_332, 0
  %tmp_333 = or i1 %notrhs3, %notlhs3
  %tmp_334 = fcmp oeq float %ay_read, 0.000000e+00
  %tmp_335 = and i1 %tmp_333, %tmp_334
  %az_to_int = bitcast float %az_read to i32
  %tmp_336 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %az_to_int, i32 23, i32 30)
  %tmp_337 = trunc i32 %az_to_int to i23
  %notlhs4 = icmp ne i8 %tmp_336, -1
  %notrhs4 = icmp eq i23 %tmp_337, 0
  %tmp_338 = or i1 %notrhs4, %notlhs4
  %tmp_339 = fcmp oeq float %az_read, 0.000000e+00
  %tmp_340 = and i1 %tmp_338, %tmp_339
  %tmp2 = and i1 %tmp_335, %tmp_340
  %or_cond3 = and i1 %tmp2, %tmp_330
  br i1 %or_cond3, label %._crit_edge, label %3

; <label>:3                                       ; preds = %2
  %tmp_119 = fmul float %ax_read, %ax_read
  %tmp_120 = fmul float %ay_read, %ay_read
  %tmp_124 = fadd float %tmp_119, %tmp_120
  %tmp_125 = fmul float %az_read, %az_read
  %x_assign = fadd float %tmp_124, %tmp_125
  %halfx = fmul float %x_assign, 5.000000e-01
  %y = bitcast float %x_assign to i32
  %tmp_i = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %y, i32 1, i32 31)
  %tmp_341 = zext i31 %tmp_i to i32
  %y_6 = sub i32 1597463007, %tmp_341
  %tmp_1_i = bitcast i32 %y_6 to float
  %tmp_2_i = fmul float %halfx, %tmp_1_i
  %tmp_3_i = fmul float %tmp_2_i, %tmp_1_i
  %tmp_4_i = fsub float 1.500000e+00, %tmp_3_i
  %recipNorm = fmul float %tmp_1_i, %tmp_4_i
  %ax_assign = fmul float %recipNorm, %ax_read
  %ay_assign = fmul float %recipNorm, %ay_read
  %az_assign = fmul float %recipNorm, %az_read
  %tmp_126 = fmul float %mx_read, %mx_read
  %tmp_127 = fmul float %my_read, %my_read
  %tmp_129 = fadd float %tmp_126, %tmp_127
  %tmp_130 = fmul float %mz_read, %mz_read
  %x_assign_3 = fadd float %tmp_129, %tmp_130
  %halfx_3 = fmul float %x_assign_3, 5.000000e-01
  %y_7 = bitcast float %x_assign_3 to i32
  %tmp_i3 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %y_7, i32 1, i32 31)
  %tmp_342 = zext i31 %tmp_i3 to i32
  %y_8 = sub i32 1597463007, %tmp_342
  %tmp_1_i5 = bitcast i32 %y_8 to float
  %tmp_2_i6 = fmul float %halfx_3, %tmp_1_i5
  %tmp_3_i7 = fmul float %tmp_2_i6, %tmp_1_i5
  %tmp_4_i8 = fsub float 1.500000e+00, %tmp_3_i7
  %recipNorm_3 = fmul float %tmp_1_i5, %tmp_4_i8
  %mx_assign = fmul float %recipNorm_3, %mx_read
  %my_assign = fmul float %recipNorm_3, %my_read
  %mz_assign = fmul float %recipNorm_3, %mz_read
  %q0_load_13 = load volatile float* @q0, align 4
  %tmp_131 = fmul float %q0_load_13, 2.000000e+00
  %p_2q0mx = fmul float %tmp_131, %mx_assign
  %q0_load_14 = load volatile float* @q0, align 4
  %tmp_132 = fmul float %q0_load_14, 2.000000e+00
  %p_2q0my = fmul float %tmp_132, %my_assign
  %q0_load_15 = load volatile float* @q0, align 4
  %tmp_134 = fmul float %q0_load_15, 2.000000e+00
  %p_2q0mz = fmul float %tmp_134, %mz_assign
  %q1_load_15 = load volatile float* @q1, align 4
  %tmp_135 = fmul float %q1_load_15, 2.000000e+00
  %p_2q1mx = fmul float %tmp_135, %mx_assign
  %q0_load_16 = load volatile float* @q0, align 4
  %p_2q0 = fmul float %q0_load_16, 2.000000e+00
  %q1_load_16 = load volatile float* @q1, align 4
  %p_2q1 = fmul float %q1_load_16, 2.000000e+00
  %q2_load_15 = load volatile float* @q2, align 4
  %p_2q2 = fmul float %q2_load_15, 2.000000e+00
  %q3_load_14 = load volatile float* @q3, align 4
  %p_2q3 = fmul float %q3_load_14, 2.000000e+00
  %q0_load_17 = load volatile float* @q0, align 4
  %tmp_136 = fmul float %q0_load_17, 2.000000e+00
  %q2_load_16 = load volatile float* @q2, align 4
  %p_2q0q2 = fmul float %tmp_136, %q2_load_16
  %q2_load_17 = load volatile float* @q2, align 4
  %tmp_137 = fmul float %q2_load_17, 2.000000e+00
  %q3_load_15 = load volatile float* @q3, align 4
  %p_2q2q3 = fmul float %tmp_137, %q3_load_15
  %q0_load_18 = load volatile float* @q0, align 4
  %q0_load_19 = load volatile float* @q0, align 4
  %q0q0 = fmul float %q0_load_18, %q0_load_19
  %q0_load_20 = load volatile float* @q0, align 4
  %q1_load_17 = load volatile float* @q1, align 4
  %q0q1 = fmul float %q0_load_20, %q1_load_17
  %q0_load_21 = load volatile float* @q0, align 4
  %q2_load_18 = load volatile float* @q2, align 4
  %q0q2 = fmul float %q0_load_21, %q2_load_18
  %q0_load_22 = load volatile float* @q0, align 4
  %q3_load_16 = load volatile float* @q3, align 4
  %q0q3 = fmul float %q0_load_22, %q3_load_16
  %q1_load_18 = load volatile float* @q1, align 4
  %q1_load_19 = load volatile float* @q1, align 4
  %q1q1 = fmul float %q1_load_18, %q1_load_19
  %q1_load_20 = load volatile float* @q1, align 4
  %q2_load_19 = load volatile float* @q2, align 4
  %q1q2 = fmul float %q1_load_20, %q2_load_19
  %q1_load_21 = load volatile float* @q1, align 4
  %q3_load_17 = load volatile float* @q3, align 4
  %q1q3 = fmul float %q1_load_21, %q3_load_17
  %q2_load_20 = load volatile float* @q2, align 4
  %q2_load_21 = load volatile float* @q2, align 4
  %q2q2 = fmul float %q2_load_20, %q2_load_21
  %q2_load_22 = load volatile float* @q2, align 4
  %q3_load_18 = load volatile float* @q3, align 4
  %q2q3 = fmul float %q2_load_22, %q3_load_18
  %q3_load_19 = load volatile float* @q3, align 4
  %q3_load_20 = load volatile float* @q3, align 4
  %q3q3 = fmul float %q3_load_19, %q3_load_20
  %tmp_138 = fmul float %mx_assign, %q0q0
  %q3_load_21 = load volatile float* @q3, align 4
  %tmp_139 = fmul float %p_2q0my, %q3_load_21
  %tmp_140 = fsub float %tmp_138, %tmp_139
  %q2_load_23 = load volatile float* @q2, align 4
  %tmp_141 = fmul float %p_2q0mz, %q2_load_23
  %tmp_142 = fadd float %tmp_140, %tmp_141
  %tmp_143 = fmul float %mx_assign, %q1q1
  %tmp_144 = fadd float %tmp_142, %tmp_143
  %tmp_145 = fmul float %p_2q1, %my_assign
  %q2_load_24 = load volatile float* @q2, align 4
  %tmp_146 = fmul float %tmp_145, %q2_load_24
  %tmp_147 = fadd float %tmp_144, %tmp_146
  %tmp_148 = fmul float %p_2q1, %mz_assign
  %q3_load_22 = load volatile float* @q3, align 4
  %tmp_149 = fmul float %tmp_148, %q3_load_22
  %tmp_150 = fadd float %tmp_147, %tmp_149
  %tmp_151 = fmul float %mx_assign, %q2q2
  %tmp_152 = fsub float %tmp_150, %tmp_151
  %tmp_153 = fmul float %mx_assign, %q3q3
  %hx = fsub float %tmp_152, %tmp_153
  %q3_load_23 = load volatile float* @q3, align 4
  %tmp_154 = fmul float %p_2q0mx, %q3_load_23
  %tmp_155 = fmul float %my_assign, %q0q0
  %tmp_156 = fadd float %tmp_154, %tmp_155
  %q1_load_22 = load volatile float* @q1, align 4
  %tmp_157 = fmul float %p_2q0mz, %q1_load_22
  %tmp_158 = fsub float %tmp_156, %tmp_157
  %q2_load_25 = load volatile float* @q2, align 4
  %tmp_159 = fmul float %p_2q1mx, %q2_load_25
  %tmp_160 = fadd float %tmp_158, %tmp_159
  %tmp_161 = fmul float %my_assign, %q1q1
  %tmp_162 = fsub float %tmp_160, %tmp_161
  %tmp_163 = fmul float %my_assign, %q2q2
  %tmp_164 = fadd float %tmp_162, %tmp_163
  %tmp_165 = fmul float %p_2q2, %mz_assign
  %q3_load_24 = load volatile float* @q3, align 4
  %tmp_166 = fmul float %tmp_165, %q3_load_24
  %tmp_167 = fadd float %tmp_164, %tmp_166
  %tmp_168 = fmul float %my_assign, %q3q3
  %hy = fsub float %tmp_167, %tmp_168
  %tmp_169 = fmul float %hx, %hx
  %tmp_170 = fmul float %hy, %hy
  %tmp_171 = fadd float %tmp_169, %tmp_170
  %p_2bx = call float @llvm.sqrt.f32(float %tmp_171)
  %tmp_174_to_int = bitcast float %p_2q0mx to i32
  %tmp_174_neg = xor i32 %tmp_174_to_int, -2147483648
  %tmp_172 = bitcast i32 %tmp_174_neg to float
  %q2_load_26 = load volatile float* @q2, align 4
  %tmp_173 = fmul float %q2_load_26, %tmp_172
  %q1_load_23 = load volatile float* @q1, align 4
  %tmp_174 = fmul float %p_2q0my, %q1_load_23
  %tmp_175 = fadd float %tmp_173, %tmp_174
  %tmp_176 = fmul float %mz_assign, %q0q0
  %tmp_177 = fadd float %tmp_175, %tmp_176
  %q3_load_25 = load volatile float* @q3, align 4
  %tmp_178 = fmul float %p_2q1mx, %q3_load_25
  %tmp_179 = fadd float %tmp_177, %tmp_178
  %tmp_180 = fmul float %mz_assign, %q1q1
  %tmp_181 = fsub float %tmp_179, %tmp_180
  %tmp_182 = fmul float %p_2q2, %my_assign
  %q3_load_26 = load volatile float* @q3, align 4
  %tmp_183 = fmul float %tmp_182, %q3_load_26
  %tmp_184 = fadd float %tmp_181, %tmp_183
  %tmp_185 = fmul float %mz_assign, %q2q2
  %tmp_186 = fsub float %tmp_184, %tmp_185
  %tmp_187 = fmul float %mz_assign, %q3q3
  %p_2bz = fadd float %tmp_186, %tmp_187
  %p_4bx = fmul float %p_2bx, 2.000000e+00
  %p_4bz = fmul float %p_2bz, 2.000000e+00
  %tmp_190_to_int = bitcast float %p_2q2 to i32
  %tmp_190_neg = xor i32 %tmp_190_to_int, -2147483648
  %tmp_188 = bitcast i32 %tmp_190_neg to float
  %tmp_189 = fmul float %q1q3, 2.000000e+00
  %tmp_190 = fsub float %tmp_189, %p_2q0q2
  %tmp_191 = fsub float %tmp_190, %ax_assign
  %tmp_192 = fmul float %tmp_191, %tmp_188
  %tmp_193 = fmul float %q0q1, 2.000000e+00
  %tmp_194 = fadd float %tmp_193, %p_2q2q3
  %tmp_195 = fsub float %tmp_194, %ay_assign
  %tmp_196 = fmul float %p_2q1, %tmp_195
  %tmp_197 = fadd float %tmp_192, %tmp_196
  %q2_load_27 = load volatile float* @q2, align 4
  %tmp_198 = fmul float %p_2bz, %q2_load_27
  %tmp_199 = fsub float 5.000000e-01, %q2q2
  %tmp_200 = fsub float %tmp_199, %q3q3
  %tmp_201 = fmul float %p_2bx, %tmp_200
  %tmp_202 = fsub float %q1q3, %q0q2
  %tmp_203 = fmul float %p_2bz, %tmp_202
  %tmp_204 = fadd float %tmp_201, %tmp_203
  %tmp_205 = fsub float %tmp_204, %mx_assign
  %tmp_206 = fmul float %tmp_198, %tmp_205
  %tmp_207 = fsub float %tmp_197, %tmp_206
  %tmp_210_to_int = bitcast float %p_2bx to i32
  %tmp_210_neg = xor i32 %tmp_210_to_int, -2147483648
  %tmp_208 = bitcast i32 %tmp_210_neg to float
  %q3_load_27 = load volatile float* @q3, align 4
  %tmp_209 = fmul float %q3_load_27, %tmp_208
  %q1_load_24 = load volatile float* @q1, align 4
  %tmp_210 = fmul float %p_2bz, %q1_load_24
  %tmp_211 = fadd float %tmp_209, %tmp_210
  %tmp_212 = fsub float %q1q2, %q0q3
  %tmp_213 = fmul float %p_2bx, %tmp_212
  %tmp_214 = fadd float %q0q1, %q2q3
  %tmp_215 = fmul float %p_2bz, %tmp_214
  %tmp_216 = fadd float %tmp_213, %tmp_215
  %tmp_217 = fsub float %tmp_216, %my_assign
  %tmp_218 = fmul float %tmp_211, %tmp_217
  %tmp_219 = fadd float %tmp_207, %tmp_218
  %q2_load_28 = load volatile float* @q2, align 4
  %tmp_220 = fmul float %p_2bx, %q2_load_28
  %tmp_221 = fadd float %q0q2, %q1q3
  %tmp_222 = fmul float %p_2bx, %tmp_221
  %tmp_223 = fsub float 5.000000e-01, %q1q1
  %tmp_224 = fsub float %tmp_223, %q2q2
  %tmp_225 = fmul float %p_2bz, %tmp_224
  %tmp_226 = fadd float %tmp_222, %tmp_225
  %tmp_227 = fsub float %tmp_226, %mz_assign
  %tmp_228 = fmul float %tmp_220, %tmp_227
  %s0 = fadd float %tmp_219, %tmp_228
  %tmp_229 = fmul float %p_2q3, %tmp_191
  %tmp_230 = fmul float %p_2q0, %tmp_195
  %tmp_231 = fadd float %tmp_229, %tmp_230
  %q1_load_25 = load volatile float* @q1, align 4
  %tmp_232 = fmul float %q1_load_25, 4.000000e+00
  %tmp_233 = fmul float %q1q1, 2.000000e+00
  %tmp_234 = fsub float 1.000000e+00, %tmp_233
  %tmp_235 = fmul float %q2q2, 2.000000e+00
  %tmp_236 = fsub float %tmp_234, %tmp_235
  %tmp_237 = fsub float %tmp_236, %az_assign
  %tmp_238 = fmul float %tmp_232, %tmp_237
  %tmp_239 = fsub float %tmp_231, %tmp_238
  %q3_load_28 = load volatile float* @q3, align 4
  %tmp_240 = fmul float %p_2bz, %q3_load_28
  %tmp_241 = fmul float %tmp_240, %tmp_205
  %tmp_242 = fadd float %tmp_239, %tmp_241
  %q2_load_29 = load volatile float* @q2, align 4
  %tmp_243 = fmul float %p_2bx, %q2_load_29
  %q0_load_23 = load volatile float* @q0, align 4
  %tmp_244 = fmul float %p_2bz, %q0_load_23
  %tmp_245 = fadd float %tmp_243, %tmp_244
  %tmp_246 = fmul float %tmp_245, %tmp_217
  %tmp_247 = fadd float %tmp_242, %tmp_246
  %q3_load_29 = load volatile float* @q3, align 4
  %tmp_248 = fmul float %p_2bx, %q3_load_29
  %q1_load_26 = load volatile float* @q1, align 4
  %tmp_249 = fmul float %p_4bz, %q1_load_26
  %tmp_250 = fsub float %tmp_248, %tmp_249
  %tmp_251 = fmul float %tmp_250, %tmp_227
  %s1 = fadd float %tmp_247, %tmp_251
  %tmp_254_to_int = bitcast float %p_2q0 to i32
  %tmp_254_neg = xor i32 %tmp_254_to_int, -2147483648
  %tmp_252 = bitcast i32 %tmp_254_neg to float
  %tmp_253 = fmul float %tmp_191, %tmp_252
  %tmp_254 = fmul float %p_2q3, %tmp_195
  %tmp_255 = fadd float %tmp_253, %tmp_254
  %q2_load_30 = load volatile float* @q2, align 4
  %tmp_256 = fmul float %q2_load_30, 4.000000e+00
  %tmp_257 = fmul float %tmp_256, %tmp_237
  %tmp_258 = fsub float %tmp_255, %tmp_257
  %tmp_261_to_int = bitcast float %p_4bx to i32
  %tmp_261_neg = xor i32 %tmp_261_to_int, -2147483648
  %tmp_259 = bitcast i32 %tmp_261_neg to float
  %q2_load_31 = load volatile float* @q2, align 4
  %tmp_260 = fmul float %q2_load_31, %tmp_259
  %q0_load_24 = load volatile float* @q0, align 4
  %tmp_261 = fmul float %p_2bz, %q0_load_24
  %tmp_262 = fsub float %tmp_260, %tmp_261
  %tmp_263 = fmul float %tmp_262, %tmp_205
  %tmp_264 = fadd float %tmp_258, %tmp_263
  %q1_load_27 = load volatile float* @q1, align 4
  %tmp_265 = fmul float %p_2bx, %q1_load_27
  %q3_load_30 = load volatile float* @q3, align 4
  %tmp_266 = fmul float %p_2bz, %q3_load_30
  %tmp_267 = fadd float %tmp_265, %tmp_266
  %tmp_268 = fmul float %tmp_267, %tmp_217
  %tmp_269 = fadd float %tmp_264, %tmp_268
  %q0_load_25 = load volatile float* @q0, align 4
  %tmp_270 = fmul float %p_2bx, %q0_load_25
  %q2_load_32 = load volatile float* @q2, align 4
  %tmp_271 = fmul float %p_4bz, %q2_load_32
  %tmp_272 = fsub float %tmp_270, %tmp_271
  %tmp_273 = fmul float %tmp_272, %tmp_227
  %s2 = fadd float %tmp_269, %tmp_273
  %tmp_274 = fmul float %p_2q1, %tmp_191
  %tmp_275 = fmul float %p_2q2, %tmp_195
  %tmp_276 = fadd float %tmp_274, %tmp_275
  %q3_load_31 = load volatile float* @q3, align 4
  %tmp_277 = fmul float %q3_load_31, %tmp_259
  %q1_load_28 = load volatile float* @q1, align 4
  %tmp_278 = fmul float %p_2bz, %q1_load_28
  %tmp_279 = fadd float %tmp_277, %tmp_278
  %tmp_280 = fmul float %tmp_279, %tmp_205
  %tmp_281 = fadd float %tmp_276, %tmp_280
  %q0_load_26 = load volatile float* @q0, align 4
  %tmp_282 = fmul float %q0_load_26, %tmp_208
  %q2_load_33 = load volatile float* @q2, align 4
  %tmp_283 = fmul float %p_2bz, %q2_load_33
  %tmp_284 = fadd float %tmp_282, %tmp_283
  %tmp_285 = fmul float %tmp_284, %tmp_217
  %tmp_286 = fadd float %tmp_281, %tmp_285
  %q1_load_29 = load volatile float* @q1, align 4
  %tmp_287 = fmul float %p_2bx, %q1_load_29
  %tmp_288 = fmul float %tmp_287, %tmp_227
  %s3 = fadd float %tmp_286, %tmp_288
  %tmp_289 = fmul float %s0, %s0
  %tmp_290 = fmul float %s1, %s1
  %tmp_291 = fadd float %tmp_289, %tmp_290
  %tmp_292 = fmul float %s2, %s2
  %tmp_293 = fadd float %tmp_291, %tmp_292
  %tmp_294 = fmul float %s3, %s3
  %x_assign_4 = fadd float %tmp_293, %tmp_294
  %halfx_4 = fmul float %x_assign_4, 5.000000e-01
  %y_9 = bitcast float %x_assign_4 to i32
  %tmp_i2 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %y_9, i32 1, i32 31)
  %tmp_343 = zext i31 %tmp_i2 to i32
  %y_10 = sub i32 1597463007, %tmp_343
  %tmp_1_i2 = bitcast i32 %y_10 to float
  %tmp_2_i2 = fmul float %halfx_4, %tmp_1_i2
  %tmp_3_i2 = fmul float %tmp_2_i2, %tmp_1_i2
  %tmp_4_i2 = fsub float 1.500000e+00, %tmp_3_i2
  %recipNorm_4 = fmul float %tmp_1_i2, %tmp_4_i2
  %s0_2 = fmul float %s0, %recipNorm_4
  %s1_2 = fmul float %s1, %recipNorm_4
  %s2_2 = fmul float %s2, %recipNorm_4
  %s3_2 = fmul float %s3, %recipNorm_4
  %beta_load = load volatile float* @beta, align 4
  %tmp_295 = fmul float %beta_load, %s0_2
  %qDot1_2 = fsub float %qDot1, %tmp_295
  %beta_load_4 = load volatile float* @beta, align 4
  %tmp_296 = fmul float %beta_load_4, %s1_2
  %qDot2_2 = fsub float %qDot2, %tmp_296
  %beta_load_5 = load volatile float* @beta, align 4
  %tmp_298 = fmul float %beta_load_5, %s2_2
  %qDot3_2 = fsub float %qDot3, %tmp_298
  %beta_load_6 = load volatile float* @beta, align 4
  %tmp_299 = fmul float %beta_load_6, %s3_2
  %qDot4_2 = fsub float %qDot4, %tmp_299
  br label %._crit_edge

._crit_edge:                                      ; preds = %3, %2
  %qDot = phi float [ %qDot1_2, %3 ], [ %qDot1, %2 ]
  %qDot8 = phi float [ %qDot2_2, %3 ], [ %qDot2, %2 ]
  %qDot9 = phi float [ %qDot3_2, %3 ], [ %qDot3, %2 ]
  %qDot5 = phi float [ %qDot4_2, %3 ], [ %qDot4, %2 ]
  %tmp_300 = fmul float %qDot, 1.953125e-03
  %q0_load_27 = load volatile float* @q0, align 4
  %tmp_301 = fadd float %q0_load_27, %tmp_300
  store volatile float %tmp_301, float* @q0, align 4
  %tmp_302 = fmul float %qDot8, 1.953125e-03
  %q1_load_30 = load volatile float* @q1, align 4
  %tmp_303 = fadd float %q1_load_30, %tmp_302
  store volatile float %tmp_303, float* @q1, align 4
  %tmp_304 = fmul float %qDot9, 1.953125e-03
  %q2_load_34 = load volatile float* @q2, align 4
  %tmp_305 = fadd float %q2_load_34, %tmp_304
  store volatile float %tmp_305, float* @q2, align 4
  %tmp_306 = fmul float %qDot5, 1.953125e-03
  %q3_load_32 = load volatile float* @q3, align 4
  %tmp_307 = fadd float %q3_load_32, %tmp_306
  store volatile float %tmp_307, float* @q3, align 4
  %q0_load_28 = load volatile float* @q0, align 4
  %q0_load_29 = load volatile float* @q0, align 4
  %tmp_308 = fmul float %q0_load_28, %q0_load_29
  %q1_load_31 = load volatile float* @q1, align 4
  %q1_load_32 = load volatile float* @q1, align 4
  %tmp_309 = fmul float %q1_load_31, %q1_load_32
  %tmp_310 = fadd float %tmp_308, %tmp_309
  %q2_load_35 = load volatile float* @q2, align 4
  %q2_load_36 = load volatile float* @q2, align 4
  %tmp_311 = fmul float %q2_load_35, %q2_load_36
  %tmp_312 = fadd float %tmp_310, %tmp_311
  %q3_load_33 = load volatile float* @q3, align 4
  %q3_load_34 = load volatile float* @q3, align 4
  %tmp_313 = fmul float %q3_load_33, %q3_load_34
  %x_assign_5 = fadd float %tmp_312, %tmp_313
  %halfx_5 = fmul float %x_assign_5, 5.000000e-01
  %y_11 = bitcast float %x_assign_5 to i32
  %tmp_i4 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %y_11, i32 1, i32 31)
  %tmp_344 = zext i31 %tmp_i4 to i32
  %y_12 = sub i32 1597463007, %tmp_344
  %tmp_1_i3 = bitcast i32 %y_12 to float
  %tmp_2_i3 = fmul float %halfx_5, %tmp_1_i3
  %tmp_3_i3 = fmul float %tmp_2_i3, %tmp_1_i3
  %tmp_4_i3 = fsub float 1.500000e+00, %tmp_3_i3
  %recipNorm_5 = fmul float %tmp_1_i3, %tmp_4_i3
  %q0_load_30 = load volatile float* @q0, align 4
  %tmp_314 = fmul float %q0_load_30, %recipNorm_5
  store volatile float %tmp_314, float* @q0, align 4
  %q1_load_33 = load volatile float* @q1, align 4
  %tmp_315 = fmul float %q1_load_33, %recipNorm_5
  store volatile float %tmp_315, float* @q1, align 4
  %q2_load_37 = load volatile float* @q2, align 4
  %tmp_317 = fmul float %q2_load_37, %recipNorm_5
  store volatile float %tmp_317, float* @q2, align 4
  %q3_load_35 = load volatile float* @q3, align 4
  %tmp_318 = fmul float %q3_load_35, %recipNorm_5
  store volatile float %tmp_318, float* @q3, align 4
  br label %4

; <label>:4                                       ; preds = %._crit_edge, %1
  ret void
}

!opencl.kernels = !{!0, !0, !7, !7, !0, !0, !13, !7, !0, !19, !21, !0, !21, !0, !24, !0, !27, !27, !30, !33, !37, !40, !46, !46, !50, !53, !0, !57, !63, !66, !66, !70, !73, !75, !0, !0, !80, !83, !86, !0, !0, !89, !91, !93, !93, !95, !97, !93, !99, !99, !93, !99, !93, !93, !0, !102, !102, !0, !104, !107, !107, !104, !109, !109, !0, !107, !107, !0, !111, !111, !113, !115, !115, !0, !0, !117, !118, !120, !122, !0, !124, !126, !126, !0, !128, !128, !0, !130, !133, !136, !136, !0, !0, !139, !73, !75, !0, !0, !0, !0, !66, !141, !141, !66, !141, !66, !66, !89, !89, !0, !142, !145, !145, !148, !150, !153, !24, !30, !155, !118, !83, !0, !93, !93, !93, !93, !157, !0, !158, !160, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !162, !164, !170, !176}
!hls.encrypted.func = !{}
!llvm.map.gv = !{!179, !186, !191, !196, !201, !206}

!0 = metadata !{null, metadata !1, metadata !2, metadata !3, metadata !4, metadata !5, metadata !6}
!1 = metadata !{metadata !"kernel_arg_addr_space"}
!2 = metadata !{metadata !"kernel_arg_access_qual"}
!3 = metadata !{metadata !"kernel_arg_type"}
!4 = metadata !{metadata !"kernel_arg_type_qual"}
!5 = metadata !{metadata !"kernel_arg_name"}
!6 = metadata !{metadata !"reqd_work_group_size", i32 1, i32 1, i32 1}
!7 = metadata !{null, metadata !8, metadata !9, metadata !10, metadata !11, metadata !12, metadata !6}
!8 = metadata !{metadata !"kernel_arg_addr_space", i32 0}
!9 = metadata !{metadata !"kernel_arg_access_qual", metadata !"none"}
!10 = metadata !{metadata !"kernel_arg_type", metadata !"string"}
!11 = metadata !{metadata !"kernel_arg_type_qual", metadata !""}
!12 = metadata !{metadata !"kernel_arg_name", metadata !"name"}
!13 = metadata !{null, metadata !14, metadata !15, metadata !16, metadata !17, metadata !18, metadata !6}
!14 = metadata !{metadata !"kernel_arg_addr_space", i32 0, i32 0}
!15 = metadata !{metadata !"kernel_arg_access_qual", metadata !"none", metadata !"none"}
!16 = metadata !{metadata !"kernel_arg_type", metadata !"int", metadata !"int"}
!17 = metadata !{metadata !"kernel_arg_type_qual", metadata !"", metadata !""}
!18 = metadata !{metadata !"kernel_arg_name", metadata !"inRow", metadata !"inColl"}
!19 = metadata !{null, metadata !8, metadata !9, metadata !10, metadata !11, metadata !20, metadata !6}
!20 = metadata !{metadata !"kernel_arg_name", metadata !"directory"}
!21 = metadata !{null, metadata !8, metadata !9, metadata !22, metadata !11, metadata !23, metadata !6}
!22 = metadata !{metadata !"kernel_arg_type", metadata !"size_type"}
!23 = metadata !{metadata !"kernel_arg_name", metadata !"__n"}
!24 = metadata !{null, metadata !8, metadata !9, metadata !25, metadata !11, metadata !26, metadata !6}
!25 = metadata !{metadata !"kernel_arg_type", metadata !"const value_type &"}
!26 = metadata !{metadata !"kernel_arg_name", metadata !"__x"}
!27 = metadata !{null, metadata !8, metadata !9, metadata !28, metadata !11, metadata !29, metadata !6}
!28 = metadata !{metadata !"kernel_arg_type", metadata !"class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > *const &"}
!29 = metadata !{metadata !"kernel_arg_name", metadata !"__i"}
!30 = metadata !{null, metadata !14, metadata !15, metadata !31, metadata !17, metadata !32, metadata !6}
!31 = metadata !{metadata !"kernel_arg_type", metadata !"iterator", metadata !"const value_type &"}
!32 = metadata !{metadata !"kernel_arg_name", metadata !"__position", metadata !"__x"}
!33 = metadata !{null, metadata !34, metadata !15, metadata !35, metadata !17, metadata !36, metadata !6}
!34 = metadata !{metadata !"kernel_arg_addr_space", i32 1, i32 0}
!35 = metadata !{metadata !"kernel_arg_type", metadata !"class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >*", metadata !"size_t"}
!36 = metadata !{metadata !"kernel_arg_name", metadata !"__p", metadata !"__n"}
!37 = metadata !{null, metadata !34, metadata !15, metadata !38, metadata !17, metadata !39, metadata !6}
!38 = metadata !{metadata !"kernel_arg_type", metadata !"class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >*", metadata !"size_type"}
!39 = metadata !{metadata !"kernel_arg_name", metadata !"__p", metadata !""}
!40 = metadata !{null, metadata !41, metadata !42, metadata !43, metadata !44, metadata !45, metadata !6}
!41 = metadata !{metadata !"kernel_arg_addr_space", i32 1, i32 1, i32 0}
!42 = metadata !{metadata !"kernel_arg_access_qual", metadata !"none", metadata !"none", metadata !"none"}
!43 = metadata !{metadata !"kernel_arg_type", metadata !"class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >*", metadata !"class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >*", metadata !"allocator<class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > > &"}
!44 = metadata !{metadata !"kernel_arg_type_qual", metadata !"", metadata !"", metadata !""}
!45 = metadata !{metadata !"kernel_arg_name", metadata !"__first", metadata !"__last", metadata !""}
!46 = metadata !{null, metadata !47, metadata !15, metadata !48, metadata !17, metadata !49, metadata !6}
!47 = metadata !{metadata !"kernel_arg_addr_space", i32 1, i32 1}
!48 = metadata !{metadata !"kernel_arg_type", metadata !"class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >*", metadata !"class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >*"}
!49 = metadata !{metadata !"kernel_arg_name", metadata !"__first", metadata !"__last"}
!50 = metadata !{null, metadata !8, metadata !9, metadata !51, metadata !11, metadata !52, metadata !6}
!51 = metadata !{metadata !"kernel_arg_type", metadata !"class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > &"}
!52 = metadata !{metadata !"kernel_arg_name", metadata !"__r"}
!53 = metadata !{null, metadata !54, metadata !9, metadata !55, metadata !11, metadata !56, metadata !6}
!54 = metadata !{metadata !"kernel_arg_addr_space", i32 1}
!55 = metadata !{metadata !"kernel_arg_type", metadata !"class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >*"}
!56 = metadata !{metadata !"kernel_arg_name", metadata !"__pointer"}
!57 = metadata !{null, metadata !58, metadata !59, metadata !60, metadata !61, metadata !62, metadata !6}
!58 = metadata !{metadata !"kernel_arg_addr_space", i32 1, i32 1, i32 1, i32 0}
!59 = metadata !{metadata !"kernel_arg_access_qual", metadata !"none", metadata !"none", metadata !"none", metadata !"none"}
!60 = metadata !{metadata !"kernel_arg_type", metadata !"class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >*", metadata !"class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >*", metadata !"class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >*", metadata !"class std::allocator<class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > > &"}
!61 = metadata !{metadata !"kernel_arg_type_qual", metadata !"", metadata !"", metadata !"", metadata !""}
!62 = metadata !{metadata !"kernel_arg_name", metadata !"__first", metadata !"__last", metadata !"__result", metadata !"__alloc"}
!63 = metadata !{null, metadata !58, metadata !59, metadata !64, metadata !61, metadata !65, metadata !6}
!64 = metadata !{metadata !"kernel_arg_type", metadata !"class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >*", metadata !"class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >*", metadata !"class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >*", metadata !"allocator<class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > > &"}
!65 = metadata !{metadata !"kernel_arg_name", metadata !"__first", metadata !"__last", metadata !"__result", metadata !""}
!66 = metadata !{null, metadata !67, metadata !42, metadata !68, metadata !44, metadata !69, metadata !6}
!67 = metadata !{metadata !"kernel_arg_addr_space", i32 1, i32 1, i32 1}
!68 = metadata !{metadata !"kernel_arg_type", metadata !"class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >*", metadata !"class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >*", metadata !"class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >*"}
!69 = metadata !{metadata !"kernel_arg_name", metadata !"__first", metadata !"__last", metadata !"__result"}
!70 = metadata !{null, metadata !34, metadata !15, metadata !71, metadata !17, metadata !72, metadata !6}
!71 = metadata !{metadata !"kernel_arg_type", metadata !"class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >*", metadata !"const class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > &"}
!72 = metadata !{metadata !"kernel_arg_name", metadata !"__p", metadata !"__value"}
!73 = metadata !{null, metadata !8, metadata !9, metadata !74, metadata !11, metadata !23, metadata !6}
!74 = metadata !{metadata !"kernel_arg_type", metadata !"size_t"}
!75 = metadata !{null, metadata !76, metadata !15, metadata !77, metadata !78, metadata !79, metadata !6}
!76 = metadata !{metadata !"kernel_arg_addr_space", i32 0, i32 1}
!77 = metadata !{metadata !"kernel_arg_type", metadata !"size_type", metadata !"void*"}
!78 = metadata !{metadata !"kernel_arg_type_qual", metadata !"", metadata !"const"}
!79 = metadata !{metadata !"kernel_arg_name", metadata !"__n", metadata !""}
!80 = metadata !{null, metadata !14, metadata !15, metadata !81, metadata !17, metadata !82, metadata !6}
!81 = metadata !{metadata !"kernel_arg_type", metadata !"const __normal_iterator<class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > *, class std::vector<class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >, class std::allocator<class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > > > > &", metadata !"const __normal_iterator<class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > *, class std::vector<class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > >, class std::allocator<class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > > > > &"}
!82 = metadata !{metadata !"kernel_arg_name", metadata !"__lhs", metadata !"__rhs"}
!83 = metadata !{null, metadata !76, metadata !15, metadata !84, metadata !78, metadata !85, metadata !6}
!84 = metadata !{metadata !"kernel_arg_type", metadata !"size_type", metadata !"char*"}
!85 = metadata !{metadata !"kernel_arg_name", metadata !"__n", metadata !"__s"}
!86 = metadata !{null, metadata !14, metadata !15, metadata !87, metadata !17, metadata !88, metadata !6}
!87 = metadata !{metadata !"kernel_arg_type", metadata !"const ulong &", metadata !"const ulong &"}
!88 = metadata !{metadata !"kernel_arg_name", metadata !"__a", metadata !"__b"}
!89 = metadata !{null, metadata !8, metadata !9, metadata !90, metadata !11, metadata !26, metadata !6}
!90 = metadata !{metadata !"kernel_arg_type", metadata !"const class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > &"}
!91 = metadata !{null, metadata !58, metadata !59, metadata !92, metadata !61, metadata !65, metadata !6}
!92 = metadata !{metadata !"kernel_arg_type", metadata !"class std::basic_string<char>*", metadata !"class std::basic_string<char>*", metadata !"class std::basic_string<char>*", metadata !"allocator<class std::basic_string<char> > &"}
!93 = metadata !{null, metadata !67, metadata !42, metadata !94, metadata !44, metadata !69, metadata !6}
!94 = metadata !{metadata !"kernel_arg_type", metadata !"class std::basic_string<char>*", metadata !"class std::basic_string<char>*", metadata !"class std::basic_string<char>*"}
!95 = metadata !{null, metadata !8, metadata !9, metadata !96, metadata !11, metadata !52, metadata !6}
!96 = metadata !{metadata !"kernel_arg_type", metadata !"class std::basic_string<char> &"}
!97 = metadata !{null, metadata !34, metadata !15, metadata !98, metadata !17, metadata !72, metadata !6}
!98 = metadata !{metadata !"kernel_arg_type", metadata !"class std::basic_string<char>*", metadata !"const class std::basic_string<char> &"}
!99 = metadata !{null, metadata !54, metadata !9, metadata !100, metadata !11, metadata !101, metadata !6}
!100 = metadata !{metadata !"kernel_arg_type", metadata !"class std::basic_string<char>*"}
!101 = metadata !{metadata !"kernel_arg_name", metadata !"__it"}
!102 = metadata !{null, metadata !8, metadata !9, metadata !103, metadata !11, metadata !29, metadata !6}
!103 = metadata !{metadata !"kernel_arg_type", metadata !"class std::basic_string<char> *const &"}
!104 = metadata !{null, metadata !105, metadata !42, metadata !106, metadata !44, metadata !69, metadata !6}
!105 = metadata !{metadata !"kernel_arg_addr_space", i32 0, i32 0, i32 0}
!106 = metadata !{metadata !"kernel_arg_type", metadata !"class __gnu_cxx::__normal_iterator<const class std::basic_string<char> *, class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > >", metadata !"class __gnu_cxx::__normal_iterator<const class std::basic_string<char> *, class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > >", metadata !"class __gnu_cxx::__normal_iterator<class std::basic_string<char> *, class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > >"}
!107 = metadata !{null, metadata !8, metadata !9, metadata !108, metadata !11, metadata !101, metadata !6}
!108 = metadata !{metadata !"kernel_arg_type", metadata !"class __gnu_cxx::__normal_iterator<const class std::basic_string<char> *, class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > >"}
!109 = metadata !{null, metadata !8, metadata !9, metadata !110, metadata !11, metadata !101, metadata !6}
!110 = metadata !{metadata !"kernel_arg_type", metadata !"class __gnu_cxx::__normal_iterator<class std::basic_string<char> *, class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > >"}
!111 = metadata !{null, metadata !67, metadata !42, metadata !94, metadata !112, metadata !69, metadata !6}
!112 = metadata !{metadata !"kernel_arg_type_qual", metadata !"const", metadata !"const", metadata !""}
!113 = metadata !{null, metadata !105, metadata !42, metadata !114, metadata !44, metadata !45, metadata !6}
!114 = metadata !{metadata !"kernel_arg_type", metadata !"class __gnu_cxx::__normal_iterator<class std::basic_string<char> *, class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > >", metadata !"class __gnu_cxx::__normal_iterator<class std::basic_string<char> *, class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > >", metadata !"allocator<class std::basic_string<char> > &"}
!115 = metadata !{null, metadata !14, metadata !15, metadata !116, metadata !17, metadata !49, metadata !6}
!116 = metadata !{metadata !"kernel_arg_type", metadata !"class __gnu_cxx::__normal_iterator<class std::basic_string<char> *, class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > >", metadata !"class __gnu_cxx::__normal_iterator<class std::basic_string<char> *, class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > >"}
!117 = metadata !{null, metadata !54, metadata !9, metadata !100, metadata !11, metadata !56, metadata !6}
!118 = metadata !{null, metadata !14, metadata !15, metadata !119, metadata !17, metadata !82, metadata !6}
!119 = metadata !{metadata !"kernel_arg_type", metadata !"const __normal_iterator<class std::basic_string<char> *, class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > > &", metadata !"const __normal_iterator<class std::basic_string<char> *, class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > > &"}
!120 = metadata !{null, metadata !34, metadata !15, metadata !121, metadata !17, metadata !36, metadata !6}
!121 = metadata !{metadata !"kernel_arg_type", metadata !"class std::basic_string<char>*", metadata !"size_t"}
!122 = metadata !{null, metadata !34, metadata !15, metadata !123, metadata !17, metadata !39, metadata !6}
!123 = metadata !{metadata !"kernel_arg_type", metadata !"class std::basic_string<char>*", metadata !"size_type"}
!124 = metadata !{null, metadata !41, metadata !42, metadata !125, metadata !44, metadata !45, metadata !6}
!125 = metadata !{metadata !"kernel_arg_type", metadata !"class std::basic_string<char>*", metadata !"class std::basic_string<char>*", metadata !"allocator<class std::basic_string<char> > &"}
!126 = metadata !{null, metadata !47, metadata !15, metadata !127, metadata !17, metadata !49, metadata !6}
!127 = metadata !{metadata !"kernel_arg_type", metadata !"class std::basic_string<char>*", metadata !"class std::basic_string<char>*"}
!128 = metadata !{null, metadata !8, metadata !9, metadata !129, metadata !11, metadata !29, metadata !6}
!129 = metadata !{metadata !"kernel_arg_type", metadata !"const class std::basic_string<char> *const &"}
!130 = metadata !{null, metadata !105, metadata !42, metadata !131, metadata !44, metadata !132, metadata !6}
!131 = metadata !{metadata !"kernel_arg_type", metadata !"size_type", metadata !"class __gnu_cxx::__normal_iterator<const class std::basic_string<char> *, class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > >", metadata !"class __gnu_cxx::__normal_iterator<const class std::basic_string<char> *, class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > >"}
!132 = metadata !{metadata !"kernel_arg_name", metadata !"__n", metadata !"__first", metadata !"__last"}
!133 = metadata !{null, metadata !134, metadata !59, metadata !135, metadata !61, metadata !65, metadata !6}
!134 = metadata !{metadata !"kernel_arg_addr_space", i32 0, i32 0, i32 1, i32 0}
!135 = metadata !{metadata !"kernel_arg_type", metadata !"class __gnu_cxx::__normal_iterator<const class std::basic_string<char> *, class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > >", metadata !"class __gnu_cxx::__normal_iterator<const class std::basic_string<char> *, class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > >", metadata !"class std::basic_string<char>*", metadata !"allocator<class std::basic_string<char> > &"}
!136 = metadata !{null, metadata !137, metadata !42, metadata !138, metadata !44, metadata !69, metadata !6}
!137 = metadata !{metadata !"kernel_arg_addr_space", i32 0, i32 0, i32 1}
!138 = metadata !{metadata !"kernel_arg_type", metadata !"class __gnu_cxx::__normal_iterator<const class std::basic_string<char> *, class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > >", metadata !"class __gnu_cxx::__normal_iterator<const class std::basic_string<char> *, class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > >", metadata !"class std::basic_string<char>*"}
!139 = metadata !{null, metadata !14, metadata !15, metadata !140, metadata !17, metadata !82, metadata !6}
!140 = metadata !{metadata !"kernel_arg_type", metadata !"const __normal_iterator<const class std::basic_string<char> *, class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > > &", metadata !"const __normal_iterator<const class std::basic_string<char> *, class std::vector<class std::basic_string<char>, class std::allocator<class std::basic_string<char> > > > &"}
!141 = metadata !{null, metadata !54, metadata !9, metadata !55, metadata !11, metadata !101, metadata !6}
!142 = metadata !{null, metadata !14, metadata !15, metadata !143, metadata !17, metadata !144, metadata !6}
!143 = metadata !{metadata !"kernel_arg_type", metadata !"size_t", metadata !"const allocator_type &"}
!144 = metadata !{metadata !"kernel_arg_name", metadata !"__n", metadata !"__a"}
!145 = metadata !{null, metadata !8, metadata !9, metadata !146, metadata !11, metadata !147, metadata !6}
!146 = metadata !{metadata !"kernel_arg_type", metadata !"const _Tp_alloc_type &"}
!147 = metadata !{metadata !"kernel_arg_name", metadata !"__a"}
!148 = metadata !{null, metadata !8, metadata !9, metadata !149, metadata !11, metadata !147, metadata !6}
!149 = metadata !{metadata !"kernel_arg_type", metadata !"const class std::allocator<class std::basic_string<char> > &"}
!150 = metadata !{null, metadata !8, metadata !9, metadata !151, metadata !11, metadata !152, metadata !6}
!151 = metadata !{metadata !"kernel_arg_type", metadata !"const class __gnu_cxx::new_allocator<class std::basic_string<char> > &"}
!152 = metadata !{metadata !"kernel_arg_name", metadata !""}
!153 = metadata !{null, metadata !34, metadata !15, metadata !71, metadata !17, metadata !154, metadata !6}
!154 = metadata !{metadata !"kernel_arg_name", metadata !"__p", metadata !"__val"}
!155 = metadata !{null, metadata !58, metadata !59, metadata !156, metadata !61, metadata !62, metadata !6}
!156 = metadata !{metadata !"kernel_arg_type", metadata !"class std::basic_string<char>*", metadata !"class std::basic_string<char>*", metadata !"class std::basic_string<char>*", metadata !"class std::allocator<class std::basic_string<char> > &"}
!157 = metadata !{null, metadata !34, metadata !15, metadata !98, metadata !17, metadata !154, metadata !6}
!158 = metadata !{null, metadata !54, metadata !9, metadata !100, metadata !11, metadata !159, metadata !6}
!159 = metadata !{metadata !"kernel_arg_name", metadata !"__pos"}
!160 = metadata !{null, metadata !14, metadata !15, metadata !161, metadata !17, metadata !82, metadata !6}
!161 = metadata !{metadata !"kernel_arg_type", metadata !"const basic_string<char, struct std::char_traits<char>, class std::allocator<char> > &", metadata !"const basic_string<char, struct std::char_traits<char>, class std::allocator<char> > &"}
!162 = metadata !{null, metadata !14, metadata !15, metadata !163, metadata !17, metadata !88, metadata !6}
!163 = metadata !{metadata !"kernel_arg_type", metadata !"enum std::_Ios_Openmode", metadata !"enum std::_Ios_Openmode"}
!164 = metadata !{void (float, float, float, float, float, float, float, float, float)* @MadgwickAHRSupdate, metadata !165, metadata !166, metadata !167, metadata !168, metadata !169, metadata !6}
!165 = metadata !{metadata !"kernel_arg_addr_space", i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0}
!166 = metadata !{metadata !"kernel_arg_access_qual", metadata !"none", metadata !"none", metadata !"none", metadata !"none", metadata !"none", metadata !"none", metadata !"none", metadata !"none", metadata !"none"}
!167 = metadata !{metadata !"kernel_arg_type", metadata !"float", metadata !"float", metadata !"float", metadata !"float", metadata !"float", metadata !"float", metadata !"float", metadata !"float", metadata !"float"}
!168 = metadata !{metadata !"kernel_arg_type_qual", metadata !"", metadata !"", metadata !"", metadata !"", metadata !"", metadata !"", metadata !"", metadata !"", metadata !""}
!169 = metadata !{metadata !"kernel_arg_name", metadata !"gx", metadata !"gy", metadata !"gz", metadata !"ax", metadata !"ay", metadata !"az", metadata !"mx", metadata !"my", metadata !"mz"}
!170 = metadata !{void (float, float, float, float, float, float)* @MadgwickAHRSupdateIM, metadata !171, metadata !172, metadata !173, metadata !174, metadata !175, metadata !6}
!171 = metadata !{metadata !"kernel_arg_addr_space", i32 0, i32 0, i32 0, i32 0, i32 0, i32 0}
!172 = metadata !{metadata !"kernel_arg_access_qual", metadata !"none", metadata !"none", metadata !"none", metadata !"none", metadata !"none", metadata !"none"}
!173 = metadata !{metadata !"kernel_arg_type", metadata !"float", metadata !"float", metadata !"float", metadata !"float", metadata !"float", metadata !"float"}
!174 = metadata !{metadata !"kernel_arg_type_qual", metadata !"", metadata !"", metadata !"", metadata !"", metadata !"", metadata !""}
!175 = metadata !{metadata !"kernel_arg_name", metadata !"gx", metadata !"gy", metadata !"gz", metadata !"ax", metadata !"ay", metadata !"az"}
!176 = metadata !{null, metadata !8, metadata !9, metadata !177, metadata !11, metadata !178, metadata !6}
!177 = metadata !{metadata !"kernel_arg_type", metadata !"float"}
!178 = metadata !{metadata !"kernel_arg_name", metadata !"x"}
!179 = metadata !{metadata !180, float* @q3}
!180 = metadata !{metadata !181}
!181 = metadata !{i32 0, i32 31, metadata !182}
!182 = metadata !{metadata !183}
!183 = metadata !{metadata !"q3", metadata !184, metadata !"float", i32 0, i32 31}
!184 = metadata !{metadata !185}
!185 = metadata !{i32 0, i32 0, i32 1}
!186 = metadata !{metadata !187, float* @q2}
!187 = metadata !{metadata !188}
!188 = metadata !{i32 0, i32 31, metadata !189}
!189 = metadata !{metadata !190}
!190 = metadata !{metadata !"q2", metadata !184, metadata !"float", i32 0, i32 31}
!191 = metadata !{metadata !192, float* @q1}
!192 = metadata !{metadata !193}
!193 = metadata !{i32 0, i32 31, metadata !194}
!194 = metadata !{metadata !195}
!195 = metadata !{metadata !"q1", metadata !184, metadata !"float", i32 0, i32 31}
!196 = metadata !{metadata !197, float* @q0}
!197 = metadata !{metadata !198}
!198 = metadata !{i32 0, i32 31, metadata !199}
!199 = metadata !{metadata !200}
!200 = metadata !{metadata !"q0", metadata !184, metadata !"float", i32 0, i32 31}
!201 = metadata !{metadata !202, [1 x i32]* @llvm_global_ctors_0}
!202 = metadata !{metadata !203}
!203 = metadata !{i32 0, i32 31, metadata !204}
!204 = metadata !{metadata !205}
!205 = metadata !{metadata !"llvm.global_ctors.0", metadata !184, metadata !"", i32 0, i32 31}
!206 = metadata !{metadata !207, float* @beta}
!207 = metadata !{metadata !208}
!208 = metadata !{i32 0, i32 31, metadata !209}
!209 = metadata !{metadata !210}
!210 = metadata !{metadata !"beta", metadata !184, metadata !"float", i32 0, i32 31}
!211 = metadata !{metadata !212}
!212 = metadata !{i32 0, i32 31, metadata !213}
!213 = metadata !{metadata !214}
!214 = metadata !{metadata !"gx", metadata !215, metadata !"float", i32 0, i32 31}
!215 = metadata !{metadata !216}
!216 = metadata !{i32 0, i32 0, i32 0}
!217 = metadata !{metadata !218}
!218 = metadata !{i32 0, i32 31, metadata !219}
!219 = metadata !{metadata !220}
!220 = metadata !{metadata !"gy", metadata !215, metadata !"float", i32 0, i32 31}
!221 = metadata !{metadata !222}
!222 = metadata !{i32 0, i32 31, metadata !223}
!223 = metadata !{metadata !224}
!224 = metadata !{metadata !"gz", metadata !215, metadata !"float", i32 0, i32 31}
!225 = metadata !{metadata !226}
!226 = metadata !{i32 0, i32 31, metadata !227}
!227 = metadata !{metadata !228}
!228 = metadata !{metadata !"ax", metadata !215, metadata !"float", i32 0, i32 31}
!229 = metadata !{metadata !230}
!230 = metadata !{i32 0, i32 31, metadata !231}
!231 = metadata !{metadata !232}
!232 = metadata !{metadata !"ay", metadata !215, metadata !"float", i32 0, i32 31}
!233 = metadata !{metadata !234}
!234 = metadata !{i32 0, i32 31, metadata !235}
!235 = metadata !{metadata !236}
!236 = metadata !{metadata !"az", metadata !215, metadata !"float", i32 0, i32 31}
!237 = metadata !{metadata !238}
!238 = metadata !{i32 0, i32 31, metadata !239}
!239 = metadata !{metadata !240}
!240 = metadata !{metadata !"mx", metadata !215, metadata !"float", i32 0, i32 31}
!241 = metadata !{metadata !242}
!242 = metadata !{i32 0, i32 31, metadata !243}
!243 = metadata !{metadata !244}
!244 = metadata !{metadata !"my", metadata !215, metadata !"float", i32 0, i32 31}
!245 = metadata !{metadata !246}
!246 = metadata !{i32 0, i32 31, metadata !247}
!247 = metadata !{metadata !248}
!248 = metadata !{metadata !"mz", metadata !215, metadata !"float", i32 0, i32 31}
