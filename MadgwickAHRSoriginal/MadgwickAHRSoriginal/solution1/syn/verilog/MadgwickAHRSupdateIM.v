// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.3.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MadgwickAHRSupdateIM (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        gx,
        gy,
        gz,
        ax,
        ay,
        az,
        q1_i,
        q1_o,
        q1_o_ap_vld,
        q2_i,
        q2_o,
        q2_o_ap_vld,
        q3_i,
        q3_o,
        q3_o_ap_vld,
        q0_i,
        q0_o,
        q0_o_ap_vld,
        beta
);

parameter    ap_ST_fsm_state1 = 205'd1;
parameter    ap_ST_fsm_state2 = 205'd2;
parameter    ap_ST_fsm_state3 = 205'd4;
parameter    ap_ST_fsm_state4 = 205'd8;
parameter    ap_ST_fsm_state5 = 205'd16;
parameter    ap_ST_fsm_state6 = 205'd32;
parameter    ap_ST_fsm_state7 = 205'd64;
parameter    ap_ST_fsm_state8 = 205'd128;
parameter    ap_ST_fsm_state9 = 205'd256;
parameter    ap_ST_fsm_state10 = 205'd512;
parameter    ap_ST_fsm_state11 = 205'd1024;
parameter    ap_ST_fsm_state12 = 205'd2048;
parameter    ap_ST_fsm_state13 = 205'd4096;
parameter    ap_ST_fsm_state14 = 205'd8192;
parameter    ap_ST_fsm_state15 = 205'd16384;
parameter    ap_ST_fsm_state16 = 205'd32768;
parameter    ap_ST_fsm_state17 = 205'd65536;
parameter    ap_ST_fsm_state18 = 205'd131072;
parameter    ap_ST_fsm_state19 = 205'd262144;
parameter    ap_ST_fsm_state20 = 205'd524288;
parameter    ap_ST_fsm_state21 = 205'd1048576;
parameter    ap_ST_fsm_state22 = 205'd2097152;
parameter    ap_ST_fsm_state23 = 205'd4194304;
parameter    ap_ST_fsm_state24 = 205'd8388608;
parameter    ap_ST_fsm_state25 = 205'd16777216;
parameter    ap_ST_fsm_state26 = 205'd33554432;
parameter    ap_ST_fsm_state27 = 205'd67108864;
parameter    ap_ST_fsm_state28 = 205'd134217728;
parameter    ap_ST_fsm_state29 = 205'd268435456;
parameter    ap_ST_fsm_state30 = 205'd536870912;
parameter    ap_ST_fsm_state31 = 205'd1073741824;
parameter    ap_ST_fsm_state32 = 205'd2147483648;
parameter    ap_ST_fsm_state33 = 205'd4294967296;
parameter    ap_ST_fsm_state34 = 205'd8589934592;
parameter    ap_ST_fsm_state35 = 205'd17179869184;
parameter    ap_ST_fsm_state36 = 205'd34359738368;
parameter    ap_ST_fsm_state37 = 205'd68719476736;
parameter    ap_ST_fsm_state38 = 205'd137438953472;
parameter    ap_ST_fsm_state39 = 205'd274877906944;
parameter    ap_ST_fsm_state40 = 205'd549755813888;
parameter    ap_ST_fsm_state41 = 205'd1099511627776;
parameter    ap_ST_fsm_state42 = 205'd2199023255552;
parameter    ap_ST_fsm_state43 = 205'd4398046511104;
parameter    ap_ST_fsm_state44 = 205'd8796093022208;
parameter    ap_ST_fsm_state45 = 205'd17592186044416;
parameter    ap_ST_fsm_state46 = 205'd35184372088832;
parameter    ap_ST_fsm_state47 = 205'd70368744177664;
parameter    ap_ST_fsm_state48 = 205'd140737488355328;
parameter    ap_ST_fsm_state49 = 205'd281474976710656;
parameter    ap_ST_fsm_state50 = 205'd562949953421312;
parameter    ap_ST_fsm_state51 = 205'd1125899906842624;
parameter    ap_ST_fsm_state52 = 205'd2251799813685248;
parameter    ap_ST_fsm_state53 = 205'd4503599627370496;
parameter    ap_ST_fsm_state54 = 205'd9007199254740992;
parameter    ap_ST_fsm_state55 = 205'd18014398509481984;
parameter    ap_ST_fsm_state56 = 205'd36028797018963968;
parameter    ap_ST_fsm_state57 = 205'd72057594037927936;
parameter    ap_ST_fsm_state58 = 205'd144115188075855872;
parameter    ap_ST_fsm_state59 = 205'd288230376151711744;
parameter    ap_ST_fsm_state60 = 205'd576460752303423488;
parameter    ap_ST_fsm_state61 = 205'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 205'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 205'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 205'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 205'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 205'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 205'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 205'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 205'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 205'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 205'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 205'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 205'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 205'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 205'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 205'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 205'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 205'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 205'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 205'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 205'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 205'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 205'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 205'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 205'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 205'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 205'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 205'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 205'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 205'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 205'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 205'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 205'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 205'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 205'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 205'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 205'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 205'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 205'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 205'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 205'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 205'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 205'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 205'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 205'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 205'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 205'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 205'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 205'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 205'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 205'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 205'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 205'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 205'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 205'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 205'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 205'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 205'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 205'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 205'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 205'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 205'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 205'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 205'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 205'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 205'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 205'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 205'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 205'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 205'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 205'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 205'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 205'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 205'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 205'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 205'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 205'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 205'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 205'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 205'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 205'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 205'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 205'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 205'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 205'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 205'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state147 = 205'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state148 = 205'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state149 = 205'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_state150 = 205'd713623846352979940529142984724747568191373312;
parameter    ap_ST_fsm_state151 = 205'd1427247692705959881058285969449495136382746624;
parameter    ap_ST_fsm_state152 = 205'd2854495385411919762116571938898990272765493248;
parameter    ap_ST_fsm_state153 = 205'd5708990770823839524233143877797980545530986496;
parameter    ap_ST_fsm_state154 = 205'd11417981541647679048466287755595961091061972992;
parameter    ap_ST_fsm_state155 = 205'd22835963083295358096932575511191922182123945984;
parameter    ap_ST_fsm_state156 = 205'd45671926166590716193865151022383844364247891968;
parameter    ap_ST_fsm_state157 = 205'd91343852333181432387730302044767688728495783936;
parameter    ap_ST_fsm_state158 = 205'd182687704666362864775460604089535377456991567872;
parameter    ap_ST_fsm_state159 = 205'd365375409332725729550921208179070754913983135744;
parameter    ap_ST_fsm_state160 = 205'd730750818665451459101842416358141509827966271488;
parameter    ap_ST_fsm_state161 = 205'd1461501637330902918203684832716283019655932542976;
parameter    ap_ST_fsm_state162 = 205'd2923003274661805836407369665432566039311865085952;
parameter    ap_ST_fsm_state163 = 205'd5846006549323611672814739330865132078623730171904;
parameter    ap_ST_fsm_state164 = 205'd11692013098647223345629478661730264157247460343808;
parameter    ap_ST_fsm_state165 = 205'd23384026197294446691258957323460528314494920687616;
parameter    ap_ST_fsm_state166 = 205'd46768052394588893382517914646921056628989841375232;
parameter    ap_ST_fsm_state167 = 205'd93536104789177786765035829293842113257979682750464;
parameter    ap_ST_fsm_state168 = 205'd187072209578355573530071658587684226515959365500928;
parameter    ap_ST_fsm_state169 = 205'd374144419156711147060143317175368453031918731001856;
parameter    ap_ST_fsm_state170 = 205'd748288838313422294120286634350736906063837462003712;
parameter    ap_ST_fsm_state171 = 205'd1496577676626844588240573268701473812127674924007424;
parameter    ap_ST_fsm_state172 = 205'd2993155353253689176481146537402947624255349848014848;
parameter    ap_ST_fsm_state173 = 205'd5986310706507378352962293074805895248510699696029696;
parameter    ap_ST_fsm_state174 = 205'd11972621413014756705924586149611790497021399392059392;
parameter    ap_ST_fsm_state175 = 205'd23945242826029513411849172299223580994042798784118784;
parameter    ap_ST_fsm_state176 = 205'd47890485652059026823698344598447161988085597568237568;
parameter    ap_ST_fsm_state177 = 205'd95780971304118053647396689196894323976171195136475136;
parameter    ap_ST_fsm_state178 = 205'd191561942608236107294793378393788647952342390272950272;
parameter    ap_ST_fsm_state179 = 205'd383123885216472214589586756787577295904684780545900544;
parameter    ap_ST_fsm_state180 = 205'd766247770432944429179173513575154591809369561091801088;
parameter    ap_ST_fsm_state181 = 205'd1532495540865888858358347027150309183618739122183602176;
parameter    ap_ST_fsm_state182 = 205'd3064991081731777716716694054300618367237478244367204352;
parameter    ap_ST_fsm_state183 = 205'd6129982163463555433433388108601236734474956488734408704;
parameter    ap_ST_fsm_state184 = 205'd12259964326927110866866776217202473468949912977468817408;
parameter    ap_ST_fsm_state185 = 205'd24519928653854221733733552434404946937899825954937634816;
parameter    ap_ST_fsm_state186 = 205'd49039857307708443467467104868809893875799651909875269632;
parameter    ap_ST_fsm_state187 = 205'd98079714615416886934934209737619787751599303819750539264;
parameter    ap_ST_fsm_state188 = 205'd196159429230833773869868419475239575503198607639501078528;
parameter    ap_ST_fsm_state189 = 205'd392318858461667547739736838950479151006397215279002157056;
parameter    ap_ST_fsm_state190 = 205'd784637716923335095479473677900958302012794430558004314112;
parameter    ap_ST_fsm_state191 = 205'd1569275433846670190958947355801916604025588861116008628224;
parameter    ap_ST_fsm_state192 = 205'd3138550867693340381917894711603833208051177722232017256448;
parameter    ap_ST_fsm_state193 = 205'd6277101735386680763835789423207666416102355444464034512896;
parameter    ap_ST_fsm_state194 = 205'd12554203470773361527671578846415332832204710888928069025792;
parameter    ap_ST_fsm_state195 = 205'd25108406941546723055343157692830665664409421777856138051584;
parameter    ap_ST_fsm_state196 = 205'd50216813883093446110686315385661331328818843555712276103168;
parameter    ap_ST_fsm_state197 = 205'd100433627766186892221372630771322662657637687111424552206336;
parameter    ap_ST_fsm_state198 = 205'd200867255532373784442745261542645325315275374222849104412672;
parameter    ap_ST_fsm_state199 = 205'd401734511064747568885490523085290650630550748445698208825344;
parameter    ap_ST_fsm_state200 = 205'd803469022129495137770981046170581301261101496891396417650688;
parameter    ap_ST_fsm_state201 = 205'd1606938044258990275541962092341162602522202993782792835301376;
parameter    ap_ST_fsm_state202 = 205'd3213876088517980551083924184682325205044405987565585670602752;
parameter    ap_ST_fsm_state203 = 205'd6427752177035961102167848369364650410088811975131171341205504;
parameter    ap_ST_fsm_state204 = 205'd12855504354071922204335696738729300820177623950262342682411008;
parameter    ap_ST_fsm_state205 = 205'd25711008708143844408671393477458601640355247900524685364822016;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] gx;
input  [31:0] gy;
input  [31:0] gz;
input  [31:0] ax;
input  [31:0] ay;
input  [31:0] az;
input  [31:0] q1_i;
output  [31:0] q1_o;
output   q1_o_ap_vld;
input  [31:0] q2_i;
output  [31:0] q2_o;
output   q2_o_ap_vld;
input  [31:0] q3_i;
output  [31:0] q3_o;
output   q3_o_ap_vld;
input  [31:0] q0_i;
output  [31:0] q0_o;
output   q0_o_ap_vld;
input  [31:0] beta;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] q1_o;
reg q1_o_ap_vld;
reg[31:0] q2_o;
reg q2_o_ap_vld;
reg[31:0] q3_o;
reg q3_o_ap_vld;
reg[31:0] q0_o;
reg q0_o_ap_vld;

(* fsm_encoding = "none" *) reg   [204:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_273;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state155;
wire    ap_CS_fsm_state161;
wire    ap_CS_fsm_state202;
reg   [31:0] reg_281;
wire    ap_CS_fsm_state53;
reg   [31:0] reg_288;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state156;
wire    ap_CS_fsm_state166;
reg   [31:0] reg_296;
wire    ap_CS_fsm_state162;
reg   [31:0] reg_303;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state61;
reg   [31:0] reg_311;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state167;
reg   [31:0] reg_318;
wire   [31:0] grp_fu_151_p2;
reg   [31:0] reg_324;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state154;
wire    ap_CS_fsm_state165;
wire    ap_CS_fsm_state170;
wire    ap_CS_fsm_state175;
wire    ap_CS_fsm_state184;
wire    ap_CS_fsm_state188;
wire    ap_CS_fsm_state192;
wire    ap_CS_fsm_state201;
wire   [31:0] grp_fu_156_p2;
reg   [31:0] reg_337;
reg   [31:0] reg_346;
wire    ap_CS_fsm_state71;
wire    ap_CS_fsm_state76;
wire    ap_CS_fsm_state171;
wire   [31:0] grp_fu_161_p2;
reg   [31:0] reg_354;
wire   [31:0] grp_fu_166_p2;
reg   [31:0] reg_361;
wire   [31:0] grp_fu_171_p2;
reg   [31:0] reg_368;
wire    ap_CS_fsm_state58;
wire   [31:0] grp_fu_176_p2;
reg   [31:0] reg_375;
wire   [31:0] grp_fu_181_p2;
reg   [31:0] reg_381;
wire    ap_CS_fsm_state70;
wire   [31:0] grp_fu_186_p2;
reg   [31:0] reg_387;
reg   [31:0] reg_393;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state172;
reg   [31:0] reg_406;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state75;
wire    ap_CS_fsm_state82;
wire    ap_CS_fsm_state101;
wire    ap_CS_fsm_state106;
wire    ap_CS_fsm_state111;
wire    ap_CS_fsm_state120;
wire    ap_CS_fsm_state124;
wire    ap_CS_fsm_state128;
wire    ap_CS_fsm_state137;
wire    ap_CS_fsm_state141;
wire    ap_CS_fsm_state145;
reg   [31:0] reg_420;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state72;
wire    ap_CS_fsm_state78;
wire    ap_CS_fsm_state86;
wire   [31:0] grp_fu_134_p2;
reg   [31:0] reg_430;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_state77;
wire    ap_CS_fsm_state87;
wire    ap_CS_fsm_state92;
wire    ap_CS_fsm_state97;
wire    ap_CS_fsm_state159;
wire    ap_CS_fsm_state160;
wire    ap_CS_fsm_state180;
wire    ap_CS_fsm_state197;
wire   [31:0] grp_fu_138_p2;
reg   [31:0] reg_439;
wire   [31:0] grp_fu_142_p2;
reg   [31:0] reg_446;
wire   [31:0] grp_fu_146_p2;
reg   [31:0] reg_452;
reg   [31:0] reg_458;
reg   [31:0] reg_470;
reg   [31:0] reg_478;
reg   [31:0] reg_488;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state79;
reg   [31:0] reg_494;
reg   [31:0] reg_502;
wire    ap_CS_fsm_state66;
reg   [31:0] reg_508;
wire    ap_CS_fsm_state80;
wire    ap_CS_fsm_state85;
wire    ap_CS_fsm_state150;
reg   [31:0] reg_516;
wire    ap_CS_fsm_state84;
wire    ap_CS_fsm_state89;
reg   [31:0] reg_524;
wire    ap_CS_fsm_state116;
wire    ap_CS_fsm_state133;
wire   [31:0] tmp_fu_541_p1;
wire    ap_CS_fsm_state19;
wire   [0:0] tmp_27_fu_211_p2;
reg   [0:0] tmp_27_reg_860;
wire   [0:0] tmp_101_fu_217_p2;
reg   [0:0] tmp_101_reg_865;
wire   [0:0] tmp_106_fu_223_p2;
reg   [0:0] tmp_106_reg_870;
wire   [0:0] or_cond1_fu_672_p2;
reg   [0:0] or_cond1_reg_875;
reg   [30:0] tmp_i_reg_879;
wire    ap_CS_fsm_state34;
wire   [31:0] tmp_1_i_fu_701_p1;
reg   [31:0] tmp_1_i_reg_884;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state56;
reg   [31:0] q2_load_5_reg_895;
reg   [31:0] q1_load_6_reg_900;
reg   [31:0] q2_load_6_reg_905;
reg   [31:0] tmp_37_reg_920;
wire    ap_CS_fsm_state64;
reg   [31:0] p_2q1_reg_936;
reg   [31:0] p_2q2_reg_942;
reg   [31:0] q1q1_reg_948;
reg   [31:0] q2q2_reg_955;
reg   [31:0] tmp_49_reg_963;
reg   [31:0] p_4q2_reg_968;
wire    ap_CS_fsm_state68;
reg   [31:0] tmp_33_reg_975;
reg   [31:0] tmp_53_reg_980;
reg   [31:0] tmp_61_reg_985;
reg   [31:0] s2_reg_990;
wire    ap_CS_fsm_state102;
reg   [30:0] tmp_i3_reg_997;
wire    ap_CS_fsm_state117;
wire   [31:0] tmp_1_i5_fu_729_p1;
reg   [31:0] tmp_1_i5_reg_1002;
wire    ap_CS_fsm_state121;
reg   [31:0] beta_load_reg_1008;
wire    ap_CS_fsm_state139;
reg   [31:0] beta_load_1_reg_1013;
wire    ap_CS_fsm_state140;
reg   [31:0] beta_load_2_reg_1018;
wire    ap_CS_fsm_state142;
reg   [31:0] qDot2_1_reg_1028;
reg   [31:0] qDot3_1_reg_1033;
reg   [31:0] qDot4_1_reg_1038;
reg   [30:0] tmp_i1_reg_1043;
wire    ap_CS_fsm_state181;
wire   [31:0] tmp_1_i1_fu_781_p1;
reg   [31:0] tmp_1_i1_reg_1048;
wire    ap_CS_fsm_state185;
reg   [31:0] ap_phi_mux_qDot_phi_fu_97_p4;
reg   [31:0] qDot_reg_94;
wire    ap_CS_fsm_state151;
reg   [31:0] ap_phi_mux_qDot5_phi_fu_107_p4;
reg   [31:0] qDot5_reg_104;
reg   [31:0] qDot6_reg_114;
reg   [31:0] qDot7_reg_124;
wire    ap_CS_fsm_state205;
reg   [31:0] grp_fu_134_p0;
reg   [31:0] grp_fu_134_p1;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state73;
wire    ap_CS_fsm_state81;
wire    ap_CS_fsm_state83;
wire    ap_CS_fsm_state88;
wire    ap_CS_fsm_state93;
wire    ap_CS_fsm_state98;
wire    ap_CS_fsm_state107;
wire    ap_CS_fsm_state112;
wire    ap_CS_fsm_state129;
wire    ap_CS_fsm_state146;
wire    ap_CS_fsm_state176;
wire    ap_CS_fsm_state193;
reg   [31:0] grp_fu_138_p0;
reg   [31:0] grp_fu_138_p1;
reg   [31:0] grp_fu_142_p0;
reg   [31:0] grp_fu_142_p1;
reg   [31:0] grp_fu_146_p0;
reg   [31:0] grp_fu_146_p1;
reg   [31:0] grp_fu_151_p0;
reg   [31:0] grp_fu_151_p1;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state69;
wire    ap_CS_fsm_state103;
wire    ap_CS_fsm_state108;
wire    ap_CS_fsm_state125;
wire    ap_CS_fsm_state134;
wire    ap_CS_fsm_state138;
wire    ap_CS_fsm_state152;
wire    ap_CS_fsm_state189;
wire    ap_CS_fsm_state198;
reg   [31:0] grp_fu_156_p0;
reg   [31:0] grp_fu_156_p1;
reg   [31:0] grp_fu_161_p0;
reg   [31:0] grp_fu_161_p1;
reg   [31:0] grp_fu_166_p0;
reg   [31:0] grp_fu_166_p1;
reg   [31:0] grp_fu_171_p0;
reg   [31:0] grp_fu_171_p1;
reg   [31:0] grp_fu_176_p0;
reg   [31:0] grp_fu_176_p1;
reg   [31:0] grp_fu_181_p0;
reg   [31:0] grp_fu_181_p1;
reg   [31:0] grp_fu_186_p0;
reg   [31:0] grp_fu_186_p1;
wire   [31:0] tmp_to_int_fu_531_p1;
wire   [31:0] tmp_neg_fu_535_p2;
wire   [31:0] ax_to_int_fu_546_p1;
wire   [7:0] tmp_20_fu_549_p4;
wire   [22:0] tmp_21_fu_559_p1;
wire   [0:0] notrhs_fu_569_p2;
wire   [0:0] notlhs_fu_563_p2;
wire   [0:0] tmp_22_fu_575_p2;
wire   [31:0] ay_to_int_fu_586_p1;
wire   [7:0] tmp_94_fu_589_p4;
wire   [22:0] tmp_99_fu_599_p1;
wire   [0:0] notrhs5_fu_609_p2;
wire   [0:0] notlhs4_fu_603_p2;
wire   [0:0] tmp_100_fu_615_p2;
wire   [31:0] az_to_int_fu_626_p1;
wire   [7:0] tmp_103_fu_629_p4;
wire   [22:0] tmp_104_fu_639_p1;
wire   [0:0] notrhs7_fu_649_p2;
wire   [0:0] notlhs6_fu_643_p2;
wire   [0:0] tmp_105_fu_655_p2;
wire   [0:0] tmp_102_fu_621_p2;
wire   [0:0] tmp_107_fu_661_p2;
wire   [0:0] tmp1_fu_666_p2;
wire   [0:0] tmp_75_fu_581_p2;
wire   [31:0] y_fu_678_p1;
wire   [31:0] tmp_108_fu_692_p1;
wire   [31:0] y_1_fu_695_p2;
wire   [31:0] y_2_fu_706_p1;
wire   [31:0] tmp_109_fu_720_p1;
wire   [31:0] y_3_fu_723_p2;
wire   [31:0] y_4_fu_758_p1;
wire   [31:0] tmp_110_fu_772_p1;
wire   [31:0] y_5_fu_775_p2;
reg   [1:0] grp_fu_134_opcode;
reg   [1:0] grp_fu_138_opcode;
reg   [1:0] grp_fu_142_opcode;
reg   [1:0] grp_fu_146_opcode;
reg   [204:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 205'd1;
end

MadgwickAHRSupdatbkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatbkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_134_p0),
    .din1(grp_fu_134_p1),
    .opcode(grp_fu_134_opcode),
    .ce(1'b1),
    .dout(grp_fu_134_p2)
);

MadgwickAHRSupdatbkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatbkb_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_138_p0),
    .din1(grp_fu_138_p1),
    .opcode(grp_fu_138_opcode),
    .ce(1'b1),
    .dout(grp_fu_138_p2)
);

MadgwickAHRSupdatbkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatbkb_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_142_p0),
    .din1(grp_fu_142_p1),
    .opcode(grp_fu_142_opcode),
    .ce(1'b1),
    .dout(grp_fu_142_p2)
);

MadgwickAHRSupdatbkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatbkb_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_146_p0),
    .din1(grp_fu_146_p1),
    .opcode(grp_fu_146_opcode),
    .ce(1'b1),
    .dout(grp_fu_146_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_151_p0),
    .din1(grp_fu_151_p1),
    .ce(1'b1),
    .dout(grp_fu_151_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_156_p0),
    .din1(grp_fu_156_p1),
    .ce(1'b1),
    .dout(grp_fu_156_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_161_p0),
    .din1(grp_fu_161_p1),
    .ce(1'b1),
    .dout(grp_fu_161_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_166_p0),
    .din1(grp_fu_166_p1),
    .ce(1'b1),
    .dout(grp_fu_166_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_171_p0),
    .din1(grp_fu_171_p1),
    .ce(1'b1),
    .dout(grp_fu_171_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_176_p0),
    .din1(grp_fu_176_p1),
    .ce(1'b1),
    .dout(grp_fu_176_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_181_p0),
    .din1(grp_fu_181_p1),
    .ce(1'b1),
    .dout(grp_fu_181_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_186_p0),
    .din1(grp_fu_186_p1),
    .ce(1'b1),
    .dout(grp_fu_186_p2)
);

MadgwickAHRSupdatdEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
MadgwickAHRSupdatdEe_U13(
    .din0(ax),
    .din1(32'd0),
    .opcode(5'd1),
    .dout(tmp_27_fu_211_p2)
);

MadgwickAHRSupdatdEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
MadgwickAHRSupdatdEe_U14(
    .din0(ay),
    .din1(32'd0),
    .opcode(5'd1),
    .dout(tmp_101_fu_217_p2)
);

MadgwickAHRSupdatdEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
MadgwickAHRSupdatdEe_U15(
    .din0(az),
    .din1(32'd0),
    .opcode(5'd1),
    .dout(tmp_106_fu_223_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond1_fu_672_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        qDot5_reg_104 <= grp_fu_156_p2;
    end else if (((or_cond1_reg_875 == 1'd0) & (1'b1 == ap_CS_fsm_state151))) begin
        qDot5_reg_104 <= qDot2_1_reg_1028;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond1_fu_672_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        qDot6_reg_114 <= grp_fu_161_p2;
    end else if (((or_cond1_reg_875 == 1'd0) & (1'b1 == ap_CS_fsm_state151))) begin
        qDot6_reg_114 <= qDot3_1_reg_1033;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond1_fu_672_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        qDot7_reg_124 <= grp_fu_166_p2;
    end else if (((or_cond1_reg_875 == 1'd0) & (1'b1 == ap_CS_fsm_state151))) begin
        qDot7_reg_124 <= qDot4_1_reg_1038;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond1_fu_672_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        qDot_reg_94 <= grp_fu_151_p2;
    end else if (((or_cond1_reg_875 == 1'd0) & (1'b1 == ap_CS_fsm_state151))) begin
        qDot_reg_94 <= reg_508;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state140)) begin
        beta_load_1_reg_1013 <= beta;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state141)) begin
        beta_load_2_reg_1018 <= beta;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state139)) begin
        beta_load_reg_1008 <= beta;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        or_cond1_reg_875 <= or_cond1_fu_672_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        p_2q1_reg_936 <= grp_fu_151_p2;
        p_2q2_reg_942 <= grp_fu_156_p2;
        q1q1_reg_948 <= grp_fu_166_p2;
        q2q2_reg_955 <= grp_fu_171_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        p_4q2_reg_968 <= grp_fu_151_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        q1_load_6_reg_900 <= q1_i;
        q2_load_6_reg_905 <= q2_i;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        q2_load_5_reg_895 <= q2_i;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state150)) begin
        qDot2_1_reg_1028 <= grp_fu_138_p2;
        qDot3_1_reg_1033 <= grp_fu_142_p2;
        qDot4_1_reg_1038 <= grp_fu_146_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state202) | (1'b1 == ap_CS_fsm_state161) | (1'b1 == ap_CS_fsm_state155) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state3) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        reg_273 <= q1_i;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state202) | (1'b1 == ap_CS_fsm_state161) | (1'b1 == ap_CS_fsm_state155) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        reg_281 <= q0_i;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state166) | (1'b1 == ap_CS_fsm_state156) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state202))) begin
        reg_288 <= q2_i;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state162) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state54))) begin
        reg_296 <= q0_i;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state162) | (1'b1 == ap_CS_fsm_state2))) begin
        reg_303 <= q1_i;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state167) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state3))) begin
        reg_311 <= q2_i;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state3))) begin
        reg_318 <= q0_i;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state201) | (1'b1 == ap_CS_fsm_state192) | (1'b1 == ap_CS_fsm_state188) | (1'b1 == ap_CS_fsm_state184) | (1'b1 == ap_CS_fsm_state175) | (1'b1 == ap_CS_fsm_state170) | (1'b1 == ap_CS_fsm_state165) | (1'b1 == ap_CS_fsm_state154) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_324 <= grp_fu_151_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state165) | (1'b1 == ap_CS_fsm_state154) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_337 <= grp_fu_156_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state171) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state156) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state202))) begin
        reg_346 <= q3_i;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_354 <= grp_fu_161_p2;
        reg_361 <= grp_fu_166_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_368 <= grp_fu_171_p2;
        reg_375 <= grp_fu_176_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_381 <= grp_fu_181_p2;
        reg_387 <= grp_fu_186_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state172) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state54))) begin
        reg_393 <= q3_i;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state124) | (1'b1 == ap_CS_fsm_state120) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state155) | (1'b1 == ap_CS_fsm_state54))) begin
        reg_406 <= grp_fu_151_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state59))) begin
        reg_420 <= grp_fu_151_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state197) | (1'b1 == ap_CS_fsm_state180) | (1'b1 == ap_CS_fsm_state160) | (1'b1 == ap_CS_fsm_state159) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state175) | (1'b1 == ap_CS_fsm_state170) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_430 <= grp_fu_134_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state160) | (1'b1 == ap_CS_fsm_state159) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_439 <= grp_fu_138_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_446 <= grp_fu_142_p2;
        reg_452 <= grp_fu_146_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state155))) begin
        reg_458 <= grp_fu_156_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state58))) begin
        reg_470 <= grp_fu_161_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state58))) begin
        reg_478 <= grp_fu_166_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state67))) begin
        reg_488 <= grp_fu_151_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state78))) begin
        reg_494 <= grp_fu_156_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state82))) begin
        reg_502 <= grp_fu_161_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state150) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state75))) begin
        reg_508 <= grp_fu_134_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state79))) begin
        reg_516 <= grp_fu_134_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state106))) begin
        reg_524 <= grp_fu_134_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state102)) begin
        s2_reg_990 <= grp_fu_134_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_101_reg_865 <= tmp_101_fu_217_p2;
        tmp_106_reg_870 <= tmp_106_fu_223_p2;
        tmp_27_reg_860 <= tmp_27_fu_211_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state185)) begin
        tmp_1_i1_reg_1048 <= tmp_1_i1_fu_781_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state121)) begin
        tmp_1_i5_reg_1002 <= tmp_1_i5_fu_729_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        tmp_1_i_reg_884 <= tmp_1_i_fu_701_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        tmp_33_reg_975 <= grp_fu_161_p2;
        tmp_53_reg_980 <= grp_fu_171_p2;
        tmp_61_reg_985 <= grp_fu_176_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        tmp_37_reg_920 <= grp_fu_156_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        tmp_49_reg_963 <= grp_fu_161_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state181)) begin
        tmp_i1_reg_1043 <= {{y_4_fu_758_p1[31:1]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state117)) begin
        tmp_i3_reg_997 <= {{y_2_fu_706_p1[31:1]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        tmp_i_reg_879 <= {{y_fu_678_p1[31:1]}};
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state205) | ((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond1_reg_875 == 1'd0) & (1'b1 == ap_CS_fsm_state151))) begin
        ap_phi_mux_qDot5_phi_fu_107_p4 = qDot2_1_reg_1028;
    end else begin
        ap_phi_mux_qDot5_phi_fu_107_p4 = qDot5_reg_104;
    end
end

always @ (*) begin
    if (((or_cond1_reg_875 == 1'd0) & (1'b1 == ap_CS_fsm_state151))) begin
        ap_phi_mux_qDot_phi_fu_97_p4 = reg_508;
    end else begin
        ap_phi_mux_qDot_phi_fu_97_p4 = qDot_reg_94;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state205)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state193) | (1'b1 == ap_CS_fsm_state146) | (1'b1 == ap_CS_fsm_state129) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_fu_134_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state171) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state166) | (1'b1 == ap_CS_fsm_state156) | (1'b1 == ap_CS_fsm_state155) | (1'b1 == ap_CS_fsm_state176) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state24))) begin
        grp_fu_134_opcode = 2'd0;
    end else begin
        grp_fu_134_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state156)) begin
        grp_fu_134_p0 = q2_i;
    end else if ((1'b1 == ap_CS_fsm_state155)) begin
        grp_fu_134_p0 = q0_i;
    end else if (((1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state107))) begin
        grp_fu_134_p0 = reg_524;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        grp_fu_134_p0 = reg_439;
    end else if (((1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state80))) begin
        grp_fu_134_p0 = reg_516;
    end else if (((1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state81))) begin
        grp_fu_134_p0 = reg_508;
    end else if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state75))) begin
        grp_fu_134_p0 = reg_488;
    end else if (((1'b1 == ap_CS_fsm_state193) | (1'b1 == ap_CS_fsm_state129) | (1'b1 == ap_CS_fsm_state46))) begin
        grp_fu_134_p0 = 32'd1069547520;
    end else if (((1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state24))) begin
        grp_fu_134_p0 = reg_406;
    end else if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state171) | (1'b1 == ap_CS_fsm_state176) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_fu_134_p0 = reg_430;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state166) | (1'b1 == ap_CS_fsm_state146))) begin
        grp_fu_134_p0 = reg_324;
    end else begin
        grp_fu_134_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state171) | (1'b1 == ap_CS_fsm_state155) | (1'b1 == ap_CS_fsm_state193) | (1'b1 == ap_CS_fsm_state176))) begin
        grp_fu_134_p1 = reg_324;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        grp_fu_134_p1 = reg_420;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_134_p1 = reg_387;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        grp_fu_134_p1 = tmp_33_reg_975;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        grp_fu_134_p1 = reg_368;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        grp_fu_134_p1 = reg_381;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        grp_fu_134_p1 = reg_478;
    end else if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state80))) begin
        grp_fu_134_p1 = reg_488;
    end else if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state98))) begin
        grp_fu_134_p1 = reg_494;
    end else if (((1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state24))) begin
        grp_fu_134_p1 = reg_458;
    end else if (((1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state156) | (1'b1 == ap_CS_fsm_state146) | (1'b1 == ap_CS_fsm_state129) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_fu_134_p1 = reg_406;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state166))) begin
        grp_fu_134_p1 = reg_337;
    end else begin
        grp_fu_134_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state146) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_fu_138_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state156) | (1'b1 == ap_CS_fsm_state155) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state73))) begin
        grp_fu_138_opcode = 2'd0;
    end else begin
        grp_fu_138_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state156)) begin
        grp_fu_138_p0 = q3_i;
    end else if ((1'b1 == ap_CS_fsm_state155)) begin
        grp_fu_138_p0 = q1_i;
    end else if ((1'b1 == ap_CS_fsm_state146)) begin
        grp_fu_138_p0 = reg_337;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        grp_fu_138_p0 = reg_494;
    end else if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_fu_138_p0 = reg_439;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_138_p0 = reg_354;
    end else begin
        grp_fu_138_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        grp_fu_138_p1 = reg_337;
    end else if (((1'b1 == ap_CS_fsm_state156) | (1'b1 == ap_CS_fsm_state146))) begin
        grp_fu_138_p1 = reg_458;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        grp_fu_138_p1 = reg_478;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        grp_fu_138_p1 = reg_502;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        grp_fu_138_p1 = p_4q2_reg_968;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        grp_fu_138_p1 = tmp_53_reg_980;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        grp_fu_138_p1 = tmp_49_reg_963;
    end else if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_fu_138_p1 = reg_420;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_138_p1 = reg_361;
    end else begin
        grp_fu_138_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state146))) begin
        grp_fu_142_opcode = 2'd1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_142_opcode = 2'd0;
    end else begin
        grp_fu_142_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state146)) begin
        grp_fu_142_p0 = reg_354;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_142_p0 = reg_446;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_142_p0 = reg_368;
    end else begin
        grp_fu_142_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state146)) begin
        grp_fu_142_p1 = reg_470;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_142_p1 = reg_324;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_142_p1 = reg_375;
    end else begin
        grp_fu_142_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state146) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_fu_146_opcode = 2'd1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_146_opcode = 2'd0;
    end else begin
        grp_fu_146_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state146)) begin
        grp_fu_146_p0 = reg_361;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_146_p0 = reg_452;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_146_p0 = reg_381;
    end else begin
        grp_fu_146_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state146)) begin
        grp_fu_146_p1 = reg_478;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_146_p1 = reg_337;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_146_p1 = reg_387;
    end else begin
        grp_fu_146_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state202)) begin
        grp_fu_151_p0 = q0_i;
    end else if ((1'b1 == ap_CS_fsm_state198)) begin
        grp_fu_151_p0 = tmp_1_i1_reg_1048;
    end else if (((1'b1 == ap_CS_fsm_state185) | (1'b1 == ap_CS_fsm_state189))) begin
        grp_fu_151_p0 = reg_324;
    end else if ((1'b1 == ap_CS_fsm_state172)) begin
        grp_fu_151_p0 = reg_346;
    end else if ((1'b1 == ap_CS_fsm_state167)) begin
        grp_fu_151_p0 = reg_288;
    end else if ((1'b1 == ap_CS_fsm_state152)) begin
        grp_fu_151_p0 = qDot6_reg_114;
    end else if ((1'b1 == ap_CS_fsm_state151)) begin
        grp_fu_151_p0 = ap_phi_mux_qDot_phi_fu_97_p4;
    end else if ((1'b1 == ap_CS_fsm_state142)) begin
        grp_fu_151_p0 = beta_load_reg_1008;
    end else if ((1'b1 == ap_CS_fsm_state134)) begin
        grp_fu_151_p0 = tmp_1_i5_reg_1002;
    end else if ((1'b1 == ap_CS_fsm_state117)) begin
        grp_fu_151_p0 = reg_524;
    end else if ((1'b1 == ap_CS_fsm_state108)) begin
        grp_fu_151_p0 = reg_516;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        grp_fu_151_p0 = s2_reg_990;
    end else if (((1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state98))) begin
        grp_fu_151_p0 = reg_508;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        grp_fu_151_p0 = reg_420;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        grp_fu_151_p0 = reg_458;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        grp_fu_151_p0 = reg_303;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        grp_fu_151_p0 = tmp_61_reg_985;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        grp_fu_151_p0 = p_4q2_reg_968;
    end else if (((1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state72))) begin
        grp_fu_151_p0 = reg_502;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        grp_fu_151_p0 = reg_311;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_fu_151_p0 = tmp_37_reg_920;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        grp_fu_151_p0 = reg_273;
    end else if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state162))) begin
        grp_fu_151_p0 = reg_281;
    end else if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state83))) begin
        grp_fu_151_p0 = reg_368;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_fu_151_p0 = reg_318;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_fu_151_p0 = tmp_1_i_reg_884;
    end else if (((1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state42))) begin
        grp_fu_151_p0 = reg_406;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_151_p0 = az;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_151_p0 = ax;
    end else if (((1'b1 == ap_CS_fsm_state181) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_fu_151_p0 = reg_430;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_151_p0 = q3_i;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_151_p0 = tmp_fu_541_p1;
    end else begin
        grp_fu_151_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state202)) begin
        grp_fu_151_p1 = reg_324;
    end else if ((1'b1 == ap_CS_fsm_state189)) begin
        grp_fu_151_p1 = tmp_1_i1_reg_1048;
    end else if ((1'b1 == ap_CS_fsm_state185)) begin
        grp_fu_151_p1 = tmp_1_i1_fu_781_p1;
    end else if ((1'b1 == ap_CS_fsm_state167)) begin
        grp_fu_151_p1 = q2_i;
    end else if (((1'b1 == ap_CS_fsm_state151) | (1'b1 == ap_CS_fsm_state152))) begin
        grp_fu_151_p1 = 32'd989855744;
    end else if (((1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state138))) begin
        grp_fu_151_p1 = reg_406;
    end else if ((1'b1 == ap_CS_fsm_state134)) begin
        grp_fu_151_p1 = reg_524;
    end else if ((1'b1 == ap_CS_fsm_state125)) begin
        grp_fu_151_p1 = tmp_1_i5_reg_1002;
    end else if ((1'b1 == ap_CS_fsm_state121)) begin
        grp_fu_151_p1 = tmp_1_i5_fu_729_p1;
    end else if ((1'b1 == ap_CS_fsm_state108)) begin
        grp_fu_151_p1 = reg_516;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        grp_fu_151_p1 = s2_reg_990;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        grp_fu_151_p1 = reg_508;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        grp_fu_151_p1 = reg_470;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        grp_fu_151_p1 = 32'd1090519040;
    end else if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state72))) begin
        grp_fu_151_p1 = q1q1_reg_948;
    end else if (((1'b1 == ap_CS_fsm_state172) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state71))) begin
        grp_fu_151_p1 = q3_i;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_151_p1 = q2q2_reg_955;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        grp_fu_151_p1 = 32'd1082130432;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_fu_151_p1 = q1_i;
    end else if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state60))) begin
        grp_fu_151_p1 = 32'd1073741824;
    end else if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state69))) begin
        grp_fu_151_p1 = reg_375;
    end else if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state162))) begin
        grp_fu_151_p1 = q0_i;
    end else if (((1'b1 == ap_CS_fsm_state198) | (1'b1 == ap_CS_fsm_state51))) begin
        grp_fu_151_p1 = reg_430;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_151_p1 = tmp_1_i_reg_884;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_151_p1 = tmp_1_i_fu_701_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_151_p1 = az;
    end else if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state55))) begin
        grp_fu_151_p1 = ax;
    end else if (((1'b1 == ap_CS_fsm_state181) | (1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_fu_151_p1 = 32'd1056964608;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_151_p1 = gy;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_151_p1 = gz;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state3))) begin
        grp_fu_151_p1 = gx;
    end else begin
        grp_fu_151_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state202)) begin
        grp_fu_156_p0 = q1_i;
    end else if ((1'b1 == ap_CS_fsm_state162)) begin
        grp_fu_156_p0 = reg_273;
    end else if ((1'b1 == ap_CS_fsm_state152)) begin
        grp_fu_156_p0 = qDot7_reg_124;
    end else if ((1'b1 == ap_CS_fsm_state151)) begin
        grp_fu_156_p0 = ap_phi_mux_qDot5_phi_fu_107_p4;
    end else if ((1'b1 == ap_CS_fsm_state142)) begin
        grp_fu_156_p0 = beta_load_1_reg_1013;
    end else if (((1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state98))) begin
        grp_fu_156_p0 = reg_430;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        grp_fu_156_p0 = p_4q2_reg_968;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        grp_fu_156_p0 = q2_load_5_reg_895;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        grp_fu_156_p0 = q2q2_reg_955;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_156_p0 = p_2q2_reg_942;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_fu_156_p0 = tmp_37_reg_920;
    end else if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state60))) begin
        grp_fu_156_p0 = reg_420;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        grp_fu_156_p0 = reg_478;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_156_p0 = reg_406;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_156_p0 = ay;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_156_p0 = reg_439;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_156_p0 = q2_i;
    end else if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state3))) begin
        grp_fu_156_p0 = reg_288;
    end else begin
        grp_fu_156_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state202)) begin
        grp_fu_156_p1 = reg_324;
    end else if ((1'b1 == ap_CS_fsm_state162)) begin
        grp_fu_156_p1 = q1_i;
    end else if (((1'b1 == ap_CS_fsm_state151) | (1'b1 == ap_CS_fsm_state152))) begin
        grp_fu_156_p1 = 32'd989855744;
    end else if ((1'b1 == ap_CS_fsm_state142)) begin
        grp_fu_156_p1 = reg_458;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        grp_fu_156_p1 = reg_430;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        grp_fu_156_p1 = reg_470;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        grp_fu_156_p1 = q2q2_reg_955;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        grp_fu_156_p1 = 32'd1090519040;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_fu_156_p1 = q2_i;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        grp_fu_156_p1 = 32'd1073741824;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state60))) begin
        grp_fu_156_p1 = 32'd1082130432;
    end else if (((1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state138))) begin
        grp_fu_156_p1 = reg_406;
    end else if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state55))) begin
        grp_fu_156_p1 = ay;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_156_p1 = 32'd1056964608;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_156_p1 = gx;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_156_p1 = gy;
    end else begin
        grp_fu_156_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state202)) begin
        grp_fu_161_p0 = q2_i;
    end else if ((1'b1 == ap_CS_fsm_state142)) begin
        grp_fu_161_p0 = beta_load_2_reg_1018;
    end else if ((1'b1 == ap_CS_fsm_state138)) begin
        grp_fu_161_p0 = s2_reg_990;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        grp_fu_161_p0 = reg_494;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_161_p0 = p_2q1_reg_936;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_fu_161_p0 = reg_420;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        grp_fu_161_p0 = reg_296;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_161_p0 = reg_406;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_161_p0 = reg_446;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_161_p0 = reg_281;
    end else begin
        grp_fu_161_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state202)) begin
        grp_fu_161_p1 = reg_324;
    end else if ((1'b1 == ap_CS_fsm_state142)) begin
        grp_fu_161_p1 = reg_470;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        grp_fu_161_p1 = q1q1_reg_948;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_161_p1 = reg_458;
    end else if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state138))) begin
        grp_fu_161_p1 = reg_406;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        grp_fu_161_p1 = 32'd1082130432;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_161_p1 = az;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_161_p1 = 32'd1056964608;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_161_p1 = gx;
    end else begin
        grp_fu_161_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state202)) begin
        grp_fu_166_p0 = q3_i;
    end else if ((1'b1 == ap_CS_fsm_state142)) begin
        grp_fu_166_p0 = beta;
    end else if ((1'b1 == ap_CS_fsm_state138)) begin
        grp_fu_166_p0 = reg_516;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        grp_fu_166_p0 = reg_494;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_166_p0 = reg_420;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        grp_fu_166_p0 = q1_load_6_reg_900;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_166_p0 = reg_346;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_166_p0 = reg_452;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_166_p0 = q2_i;
    end else begin
        grp_fu_166_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state202)) begin
        grp_fu_166_p1 = reg_324;
    end else if ((1'b1 == ap_CS_fsm_state142)) begin
        grp_fu_166_p1 = reg_478;
    end else if ((1'b1 == ap_CS_fsm_state138)) begin
        grp_fu_166_p1 = reg_406;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        grp_fu_166_p1 = q2q2_reg_955;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_166_p1 = reg_458;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        grp_fu_166_p1 = q1_i;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_166_p1 = 32'd1073741824;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_166_p1 = 32'd1056964608;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_166_p1 = gz;
    end else begin
        grp_fu_166_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_171_p0 = reg_478;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        grp_fu_171_p0 = q2_load_6_reg_905;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_171_p0 = q1_i;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_171_p0 = reg_296;
    end else begin
        grp_fu_171_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_171_p1 = reg_458;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        grp_fu_171_p1 = q2_i;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_171_p1 = 32'd1082130432;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_171_p1 = gy;
    end else begin
        grp_fu_171_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_176_p0 = q1q1_reg_948;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_176_p0 = reg_393;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_176_p0 = reg_303;
    end else begin
        grp_fu_176_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_176_p1 = 32'd1082130432;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_176_p1 = q3_i;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_176_p1 = gz;
    end else begin
        grp_fu_176_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_181_p0 = p_2q1_reg_936;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_181_p0 = q0_i;
    end else begin
        grp_fu_181_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_181_p1 = reg_406;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_181_p1 = gz;
    end else begin
        grp_fu_181_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_186_p0 = p_2q2_reg_942;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_186_p0 = q1_i;
    end else begin
        grp_fu_186_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_186_p1 = reg_458;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_186_p1 = gy;
    end else begin
        grp_fu_186_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state205)) begin
        q0_o = grp_fu_151_p2;
    end else if ((1'b1 == ap_CS_fsm_state160)) begin
        q0_o = reg_430;
    end else begin
        q0_o = q0_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state160) | (1'b1 == ap_CS_fsm_state205))) begin
        q0_o_ap_vld = 1'b1;
    end else begin
        q0_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state205)) begin
        q1_o = grp_fu_156_p2;
    end else if ((1'b1 == ap_CS_fsm_state160)) begin
        q1_o = reg_439;
    end else begin
        q1_o = q1_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state160) | (1'b1 == ap_CS_fsm_state205))) begin
        q1_o_ap_vld = 1'b1;
    end else begin
        q1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state205)) begin
        q2_o = grp_fu_161_p2;
    end else if ((1'b1 == ap_CS_fsm_state161)) begin
        q2_o = reg_430;
    end else begin
        q2_o = q2_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state161) | (1'b1 == ap_CS_fsm_state205))) begin
        q2_o_ap_vld = 1'b1;
    end else begin
        q2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state205)) begin
        q3_o = grp_fu_166_p2;
    end else if ((1'b1 == ap_CS_fsm_state161)) begin
        q3_o = reg_439;
    end else begin
        q3_o = q3_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state161) | (1'b1 == ap_CS_fsm_state205))) begin
        q3_o_ap_vld = 1'b1;
    end else begin
        q3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((or_cond1_fu_672_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state151;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            ap_NS_fsm = ap_ST_fsm_state151;
        end
        ap_ST_fsm_state151 : begin
            ap_NS_fsm = ap_ST_fsm_state152;
        end
        ap_ST_fsm_state152 : begin
            ap_NS_fsm = ap_ST_fsm_state153;
        end
        ap_ST_fsm_state153 : begin
            ap_NS_fsm = ap_ST_fsm_state154;
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_state155;
        end
        ap_ST_fsm_state155 : begin
            ap_NS_fsm = ap_ST_fsm_state156;
        end
        ap_ST_fsm_state156 : begin
            ap_NS_fsm = ap_ST_fsm_state157;
        end
        ap_ST_fsm_state157 : begin
            ap_NS_fsm = ap_ST_fsm_state158;
        end
        ap_ST_fsm_state158 : begin
            ap_NS_fsm = ap_ST_fsm_state159;
        end
        ap_ST_fsm_state159 : begin
            ap_NS_fsm = ap_ST_fsm_state160;
        end
        ap_ST_fsm_state160 : begin
            ap_NS_fsm = ap_ST_fsm_state161;
        end
        ap_ST_fsm_state161 : begin
            ap_NS_fsm = ap_ST_fsm_state162;
        end
        ap_ST_fsm_state162 : begin
            ap_NS_fsm = ap_ST_fsm_state163;
        end
        ap_ST_fsm_state163 : begin
            ap_NS_fsm = ap_ST_fsm_state164;
        end
        ap_ST_fsm_state164 : begin
            ap_NS_fsm = ap_ST_fsm_state165;
        end
        ap_ST_fsm_state165 : begin
            ap_NS_fsm = ap_ST_fsm_state166;
        end
        ap_ST_fsm_state166 : begin
            ap_NS_fsm = ap_ST_fsm_state167;
        end
        ap_ST_fsm_state167 : begin
            ap_NS_fsm = ap_ST_fsm_state168;
        end
        ap_ST_fsm_state168 : begin
            ap_NS_fsm = ap_ST_fsm_state169;
        end
        ap_ST_fsm_state169 : begin
            ap_NS_fsm = ap_ST_fsm_state170;
        end
        ap_ST_fsm_state170 : begin
            ap_NS_fsm = ap_ST_fsm_state171;
        end
        ap_ST_fsm_state171 : begin
            ap_NS_fsm = ap_ST_fsm_state172;
        end
        ap_ST_fsm_state172 : begin
            ap_NS_fsm = ap_ST_fsm_state173;
        end
        ap_ST_fsm_state173 : begin
            ap_NS_fsm = ap_ST_fsm_state174;
        end
        ap_ST_fsm_state174 : begin
            ap_NS_fsm = ap_ST_fsm_state175;
        end
        ap_ST_fsm_state175 : begin
            ap_NS_fsm = ap_ST_fsm_state176;
        end
        ap_ST_fsm_state176 : begin
            ap_NS_fsm = ap_ST_fsm_state177;
        end
        ap_ST_fsm_state177 : begin
            ap_NS_fsm = ap_ST_fsm_state178;
        end
        ap_ST_fsm_state178 : begin
            ap_NS_fsm = ap_ST_fsm_state179;
        end
        ap_ST_fsm_state179 : begin
            ap_NS_fsm = ap_ST_fsm_state180;
        end
        ap_ST_fsm_state180 : begin
            ap_NS_fsm = ap_ST_fsm_state181;
        end
        ap_ST_fsm_state181 : begin
            ap_NS_fsm = ap_ST_fsm_state182;
        end
        ap_ST_fsm_state182 : begin
            ap_NS_fsm = ap_ST_fsm_state183;
        end
        ap_ST_fsm_state183 : begin
            ap_NS_fsm = ap_ST_fsm_state184;
        end
        ap_ST_fsm_state184 : begin
            ap_NS_fsm = ap_ST_fsm_state185;
        end
        ap_ST_fsm_state185 : begin
            ap_NS_fsm = ap_ST_fsm_state186;
        end
        ap_ST_fsm_state186 : begin
            ap_NS_fsm = ap_ST_fsm_state187;
        end
        ap_ST_fsm_state187 : begin
            ap_NS_fsm = ap_ST_fsm_state188;
        end
        ap_ST_fsm_state188 : begin
            ap_NS_fsm = ap_ST_fsm_state189;
        end
        ap_ST_fsm_state189 : begin
            ap_NS_fsm = ap_ST_fsm_state190;
        end
        ap_ST_fsm_state190 : begin
            ap_NS_fsm = ap_ST_fsm_state191;
        end
        ap_ST_fsm_state191 : begin
            ap_NS_fsm = ap_ST_fsm_state192;
        end
        ap_ST_fsm_state192 : begin
            ap_NS_fsm = ap_ST_fsm_state193;
        end
        ap_ST_fsm_state193 : begin
            ap_NS_fsm = ap_ST_fsm_state194;
        end
        ap_ST_fsm_state194 : begin
            ap_NS_fsm = ap_ST_fsm_state195;
        end
        ap_ST_fsm_state195 : begin
            ap_NS_fsm = ap_ST_fsm_state196;
        end
        ap_ST_fsm_state196 : begin
            ap_NS_fsm = ap_ST_fsm_state197;
        end
        ap_ST_fsm_state197 : begin
            ap_NS_fsm = ap_ST_fsm_state198;
        end
        ap_ST_fsm_state198 : begin
            ap_NS_fsm = ap_ST_fsm_state199;
        end
        ap_ST_fsm_state199 : begin
            ap_NS_fsm = ap_ST_fsm_state200;
        end
        ap_ST_fsm_state200 : begin
            ap_NS_fsm = ap_ST_fsm_state201;
        end
        ap_ST_fsm_state201 : begin
            ap_NS_fsm = ap_ST_fsm_state202;
        end
        ap_ST_fsm_state202 : begin
            ap_NS_fsm = ap_ST_fsm_state203;
        end
        ap_ST_fsm_state203 : begin
            ap_NS_fsm = ap_ST_fsm_state204;
        end
        ap_ST_fsm_state204 : begin
            ap_NS_fsm = ap_ST_fsm_state205;
        end
        ap_ST_fsm_state205 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state116 = ap_CS_fsm[32'd115];

assign ap_CS_fsm_state117 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state120 = ap_CS_fsm[32'd119];

assign ap_CS_fsm_state121 = ap_CS_fsm[32'd120];

assign ap_CS_fsm_state124 = ap_CS_fsm[32'd123];

assign ap_CS_fsm_state125 = ap_CS_fsm[32'd124];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd127];

assign ap_CS_fsm_state129 = ap_CS_fsm[32'd128];

assign ap_CS_fsm_state133 = ap_CS_fsm[32'd132];

assign ap_CS_fsm_state134 = ap_CS_fsm[32'd133];

assign ap_CS_fsm_state137 = ap_CS_fsm[32'd136];

assign ap_CS_fsm_state138 = ap_CS_fsm[32'd137];

assign ap_CS_fsm_state139 = ap_CS_fsm[32'd138];

assign ap_CS_fsm_state140 = ap_CS_fsm[32'd139];

assign ap_CS_fsm_state141 = ap_CS_fsm[32'd140];

assign ap_CS_fsm_state142 = ap_CS_fsm[32'd141];

assign ap_CS_fsm_state145 = ap_CS_fsm[32'd144];

assign ap_CS_fsm_state146 = ap_CS_fsm[32'd145];

assign ap_CS_fsm_state150 = ap_CS_fsm[32'd149];

assign ap_CS_fsm_state151 = ap_CS_fsm[32'd150];

assign ap_CS_fsm_state152 = ap_CS_fsm[32'd151];

assign ap_CS_fsm_state154 = ap_CS_fsm[32'd153];

assign ap_CS_fsm_state155 = ap_CS_fsm[32'd154];

assign ap_CS_fsm_state156 = ap_CS_fsm[32'd155];

assign ap_CS_fsm_state159 = ap_CS_fsm[32'd158];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state160 = ap_CS_fsm[32'd159];

assign ap_CS_fsm_state161 = ap_CS_fsm[32'd160];

assign ap_CS_fsm_state162 = ap_CS_fsm[32'd161];

assign ap_CS_fsm_state165 = ap_CS_fsm[32'd164];

assign ap_CS_fsm_state166 = ap_CS_fsm[32'd165];

assign ap_CS_fsm_state167 = ap_CS_fsm[32'd166];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state170 = ap_CS_fsm[32'd169];

assign ap_CS_fsm_state171 = ap_CS_fsm[32'd170];

assign ap_CS_fsm_state172 = ap_CS_fsm[32'd171];

assign ap_CS_fsm_state175 = ap_CS_fsm[32'd174];

assign ap_CS_fsm_state176 = ap_CS_fsm[32'd175];

assign ap_CS_fsm_state180 = ap_CS_fsm[32'd179];

assign ap_CS_fsm_state181 = ap_CS_fsm[32'd180];

assign ap_CS_fsm_state184 = ap_CS_fsm[32'd183];

assign ap_CS_fsm_state185 = ap_CS_fsm[32'd184];

assign ap_CS_fsm_state188 = ap_CS_fsm[32'd187];

assign ap_CS_fsm_state189 = ap_CS_fsm[32'd188];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state192 = ap_CS_fsm[32'd191];

assign ap_CS_fsm_state193 = ap_CS_fsm[32'd192];

assign ap_CS_fsm_state197 = ap_CS_fsm[32'd196];

assign ap_CS_fsm_state198 = ap_CS_fsm[32'd197];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state201 = ap_CS_fsm[32'd200];

assign ap_CS_fsm_state202 = ap_CS_fsm[32'd201];

assign ap_CS_fsm_state205 = ap_CS_fsm[32'd204];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign ax_to_int_fu_546_p1 = ax;

assign ay_to_int_fu_586_p1 = ay;

assign az_to_int_fu_626_p1 = az;

assign notlhs4_fu_603_p2 = ((tmp_94_fu_589_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs6_fu_643_p2 = ((tmp_103_fu_629_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs_fu_563_p2 = ((tmp_20_fu_549_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notrhs5_fu_609_p2 = ((tmp_99_fu_599_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs7_fu_649_p2 = ((tmp_104_fu_639_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs_fu_569_p2 = ((tmp_21_fu_559_p1 == 23'd0) ? 1'b1 : 1'b0);

assign or_cond1_fu_672_p2 = (tmp_75_fu_581_p2 & tmp1_fu_666_p2);

assign tmp1_fu_666_p2 = (tmp_107_fu_661_p2 & tmp_102_fu_621_p2);

assign tmp_100_fu_615_p2 = (notrhs5_fu_609_p2 | notlhs4_fu_603_p2);

assign tmp_102_fu_621_p2 = (tmp_101_reg_865 & tmp_100_fu_615_p2);

assign tmp_103_fu_629_p4 = {{az_to_int_fu_626_p1[30:23]}};

assign tmp_104_fu_639_p1 = az_to_int_fu_626_p1[22:0];

assign tmp_105_fu_655_p2 = (notrhs7_fu_649_p2 | notlhs6_fu_643_p2);

assign tmp_107_fu_661_p2 = (tmp_106_reg_870 & tmp_105_fu_655_p2);

assign tmp_108_fu_692_p1 = tmp_i_reg_879;

assign tmp_109_fu_720_p1 = tmp_i3_reg_997;

assign tmp_110_fu_772_p1 = tmp_i1_reg_1043;

assign tmp_1_i1_fu_781_p1 = y_5_fu_775_p2;

assign tmp_1_i5_fu_729_p1 = y_3_fu_723_p2;

assign tmp_1_i_fu_701_p1 = y_1_fu_695_p2;

assign tmp_20_fu_549_p4 = {{ax_to_int_fu_546_p1[30:23]}};

assign tmp_21_fu_559_p1 = ax_to_int_fu_546_p1[22:0];

assign tmp_22_fu_575_p2 = (notrhs_fu_569_p2 | notlhs_fu_563_p2);

assign tmp_75_fu_581_p2 = (tmp_27_reg_860 & tmp_22_fu_575_p2);

assign tmp_94_fu_589_p4 = {{ay_to_int_fu_586_p1[30:23]}};

assign tmp_99_fu_599_p1 = ay_to_int_fu_586_p1[22:0];

assign tmp_fu_541_p1 = tmp_neg_fu_535_p2;

assign tmp_neg_fu_535_p2 = (tmp_to_int_fu_531_p1 ^ 32'd2147483648);

assign tmp_to_int_fu_531_p1 = reg_273;

assign y_1_fu_695_p2 = (32'd1597463007 - tmp_108_fu_692_p1);

assign y_2_fu_706_p1 = reg_524;

assign y_3_fu_723_p2 = (32'd1597463007 - tmp_109_fu_720_p1);

assign y_4_fu_758_p1 = reg_430;

assign y_5_fu_775_p2 = (32'd1597463007 - tmp_110_fu_772_p1);

assign y_fu_678_p1 = reg_430;

endmodule //MadgwickAHRSupdateIM
