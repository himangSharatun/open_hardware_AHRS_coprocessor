// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.3.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="MadgwickAHRSupdate,hls_ip_2017_3_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=10.541500,HLS_SYN_LAT=155,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=64,HLS_SYN_FF=10001,HLS_SYN_LUT=16499}" *)

module MadgwickAHRSupdate (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        gx,
        gy,
        gz,
        ax,
        ay,
        az,
        mx,
        my,
        mz
);

parameter    ap_ST_fsm_state1 = 264'd1;
parameter    ap_ST_fsm_state2 = 264'd2;
parameter    ap_ST_fsm_state3 = 264'd4;
parameter    ap_ST_fsm_state4 = 264'd8;
parameter    ap_ST_fsm_state5 = 264'd16;
parameter    ap_ST_fsm_state6 = 264'd32;
parameter    ap_ST_fsm_state7 = 264'd64;
parameter    ap_ST_fsm_state8 = 264'd128;
parameter    ap_ST_fsm_state9 = 264'd256;
parameter    ap_ST_fsm_state10 = 264'd512;
parameter    ap_ST_fsm_state11 = 264'd1024;
parameter    ap_ST_fsm_state12 = 264'd2048;
parameter    ap_ST_fsm_state13 = 264'd4096;
parameter    ap_ST_fsm_state14 = 264'd8192;
parameter    ap_ST_fsm_state15 = 264'd16384;
parameter    ap_ST_fsm_state16 = 264'd32768;
parameter    ap_ST_fsm_state17 = 264'd65536;
parameter    ap_ST_fsm_state18 = 264'd131072;
parameter    ap_ST_fsm_state19 = 264'd262144;
parameter    ap_ST_fsm_state20 = 264'd524288;
parameter    ap_ST_fsm_state21 = 264'd1048576;
parameter    ap_ST_fsm_state22 = 264'd2097152;
parameter    ap_ST_fsm_state23 = 264'd4194304;
parameter    ap_ST_fsm_state24 = 264'd8388608;
parameter    ap_ST_fsm_state25 = 264'd16777216;
parameter    ap_ST_fsm_state26 = 264'd33554432;
parameter    ap_ST_fsm_state27 = 264'd67108864;
parameter    ap_ST_fsm_state28 = 264'd134217728;
parameter    ap_ST_fsm_state29 = 264'd268435456;
parameter    ap_ST_fsm_state30 = 264'd536870912;
parameter    ap_ST_fsm_state31 = 264'd1073741824;
parameter    ap_ST_fsm_state32 = 264'd2147483648;
parameter    ap_ST_fsm_state33 = 264'd4294967296;
parameter    ap_ST_fsm_state34 = 264'd8589934592;
parameter    ap_ST_fsm_state35 = 264'd17179869184;
parameter    ap_ST_fsm_state36 = 264'd34359738368;
parameter    ap_ST_fsm_state37 = 264'd68719476736;
parameter    ap_ST_fsm_state38 = 264'd137438953472;
parameter    ap_ST_fsm_state39 = 264'd274877906944;
parameter    ap_ST_fsm_state40 = 264'd549755813888;
parameter    ap_ST_fsm_state41 = 264'd1099511627776;
parameter    ap_ST_fsm_state42 = 264'd2199023255552;
parameter    ap_ST_fsm_state43 = 264'd4398046511104;
parameter    ap_ST_fsm_state44 = 264'd8796093022208;
parameter    ap_ST_fsm_state45 = 264'd17592186044416;
parameter    ap_ST_fsm_state46 = 264'd35184372088832;
parameter    ap_ST_fsm_state47 = 264'd70368744177664;
parameter    ap_ST_fsm_state48 = 264'd140737488355328;
parameter    ap_ST_fsm_state49 = 264'd281474976710656;
parameter    ap_ST_fsm_state50 = 264'd562949953421312;
parameter    ap_ST_fsm_state51 = 264'd1125899906842624;
parameter    ap_ST_fsm_state52 = 264'd2251799813685248;
parameter    ap_ST_fsm_state53 = 264'd4503599627370496;
parameter    ap_ST_fsm_state54 = 264'd9007199254740992;
parameter    ap_ST_fsm_state55 = 264'd18014398509481984;
parameter    ap_ST_fsm_state56 = 264'd36028797018963968;
parameter    ap_ST_fsm_state57 = 264'd72057594037927936;
parameter    ap_ST_fsm_state58 = 264'd144115188075855872;
parameter    ap_ST_fsm_state59 = 264'd288230376151711744;
parameter    ap_ST_fsm_state60 = 264'd576460752303423488;
parameter    ap_ST_fsm_state61 = 264'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 264'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 264'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 264'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 264'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 264'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 264'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 264'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 264'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 264'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 264'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 264'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 264'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 264'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 264'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 264'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 264'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 264'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 264'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 264'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 264'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 264'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 264'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 264'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 264'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 264'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 264'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 264'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 264'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 264'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 264'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 264'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 264'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 264'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 264'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 264'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 264'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 264'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 264'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 264'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 264'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 264'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 264'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 264'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 264'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 264'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 264'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 264'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 264'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 264'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 264'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 264'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 264'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 264'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 264'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 264'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 264'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 264'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 264'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 264'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 264'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 264'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 264'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 264'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 264'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 264'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 264'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 264'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 264'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 264'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 264'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 264'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 264'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 264'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 264'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 264'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 264'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 264'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 264'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 264'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 264'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 264'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 264'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 264'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 264'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 264'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state147 = 264'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state148 = 264'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state149 = 264'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_state150 = 264'd713623846352979940529142984724747568191373312;
parameter    ap_ST_fsm_state151 = 264'd1427247692705959881058285969449495136382746624;
parameter    ap_ST_fsm_state152 = 264'd2854495385411919762116571938898990272765493248;
parameter    ap_ST_fsm_state153 = 264'd5708990770823839524233143877797980545530986496;
parameter    ap_ST_fsm_state154 = 264'd11417981541647679048466287755595961091061972992;
parameter    ap_ST_fsm_state155 = 264'd22835963083295358096932575511191922182123945984;
parameter    ap_ST_fsm_state156 = 264'd45671926166590716193865151022383844364247891968;
parameter    ap_ST_fsm_state157 = 264'd91343852333181432387730302044767688728495783936;
parameter    ap_ST_fsm_state158 = 264'd182687704666362864775460604089535377456991567872;
parameter    ap_ST_fsm_state159 = 264'd365375409332725729550921208179070754913983135744;
parameter    ap_ST_fsm_state160 = 264'd730750818665451459101842416358141509827966271488;
parameter    ap_ST_fsm_state161 = 264'd1461501637330902918203684832716283019655932542976;
parameter    ap_ST_fsm_state162 = 264'd2923003274661805836407369665432566039311865085952;
parameter    ap_ST_fsm_state163 = 264'd5846006549323611672814739330865132078623730171904;
parameter    ap_ST_fsm_state164 = 264'd11692013098647223345629478661730264157247460343808;
parameter    ap_ST_fsm_state165 = 264'd23384026197294446691258957323460528314494920687616;
parameter    ap_ST_fsm_state166 = 264'd46768052394588893382517914646921056628989841375232;
parameter    ap_ST_fsm_state167 = 264'd93536104789177786765035829293842113257979682750464;
parameter    ap_ST_fsm_state168 = 264'd187072209578355573530071658587684226515959365500928;
parameter    ap_ST_fsm_state169 = 264'd374144419156711147060143317175368453031918731001856;
parameter    ap_ST_fsm_state170 = 264'd748288838313422294120286634350736906063837462003712;
parameter    ap_ST_fsm_state171 = 264'd1496577676626844588240573268701473812127674924007424;
parameter    ap_ST_fsm_state172 = 264'd2993155353253689176481146537402947624255349848014848;
parameter    ap_ST_fsm_state173 = 264'd5986310706507378352962293074805895248510699696029696;
parameter    ap_ST_fsm_state174 = 264'd11972621413014756705924586149611790497021399392059392;
parameter    ap_ST_fsm_state175 = 264'd23945242826029513411849172299223580994042798784118784;
parameter    ap_ST_fsm_state176 = 264'd47890485652059026823698344598447161988085597568237568;
parameter    ap_ST_fsm_state177 = 264'd95780971304118053647396689196894323976171195136475136;
parameter    ap_ST_fsm_state178 = 264'd191561942608236107294793378393788647952342390272950272;
parameter    ap_ST_fsm_state179 = 264'd383123885216472214589586756787577295904684780545900544;
parameter    ap_ST_fsm_state180 = 264'd766247770432944429179173513575154591809369561091801088;
parameter    ap_ST_fsm_state181 = 264'd1532495540865888858358347027150309183618739122183602176;
parameter    ap_ST_fsm_state182 = 264'd3064991081731777716716694054300618367237478244367204352;
parameter    ap_ST_fsm_state183 = 264'd6129982163463555433433388108601236734474956488734408704;
parameter    ap_ST_fsm_state184 = 264'd12259964326927110866866776217202473468949912977468817408;
parameter    ap_ST_fsm_state185 = 264'd24519928653854221733733552434404946937899825954937634816;
parameter    ap_ST_fsm_state186 = 264'd49039857307708443467467104868809893875799651909875269632;
parameter    ap_ST_fsm_state187 = 264'd98079714615416886934934209737619787751599303819750539264;
parameter    ap_ST_fsm_state188 = 264'd196159429230833773869868419475239575503198607639501078528;
parameter    ap_ST_fsm_state189 = 264'd392318858461667547739736838950479151006397215279002157056;
parameter    ap_ST_fsm_state190 = 264'd784637716923335095479473677900958302012794430558004314112;
parameter    ap_ST_fsm_state191 = 264'd1569275433846670190958947355801916604025588861116008628224;
parameter    ap_ST_fsm_state192 = 264'd3138550867693340381917894711603833208051177722232017256448;
parameter    ap_ST_fsm_state193 = 264'd6277101735386680763835789423207666416102355444464034512896;
parameter    ap_ST_fsm_state194 = 264'd12554203470773361527671578846415332832204710888928069025792;
parameter    ap_ST_fsm_state195 = 264'd25108406941546723055343157692830665664409421777856138051584;
parameter    ap_ST_fsm_state196 = 264'd50216813883093446110686315385661331328818843555712276103168;
parameter    ap_ST_fsm_state197 = 264'd100433627766186892221372630771322662657637687111424552206336;
parameter    ap_ST_fsm_state198 = 264'd200867255532373784442745261542645325315275374222849104412672;
parameter    ap_ST_fsm_state199 = 264'd401734511064747568885490523085290650630550748445698208825344;
parameter    ap_ST_fsm_state200 = 264'd803469022129495137770981046170581301261101496891396417650688;
parameter    ap_ST_fsm_state201 = 264'd1606938044258990275541962092341162602522202993782792835301376;
parameter    ap_ST_fsm_state202 = 264'd3213876088517980551083924184682325205044405987565585670602752;
parameter    ap_ST_fsm_state203 = 264'd6427752177035961102167848369364650410088811975131171341205504;
parameter    ap_ST_fsm_state204 = 264'd12855504354071922204335696738729300820177623950262342682411008;
parameter    ap_ST_fsm_state205 = 264'd25711008708143844408671393477458601640355247900524685364822016;
parameter    ap_ST_fsm_state206 = 264'd51422017416287688817342786954917203280710495801049370729644032;
parameter    ap_ST_fsm_state207 = 264'd102844034832575377634685573909834406561420991602098741459288064;
parameter    ap_ST_fsm_state208 = 264'd205688069665150755269371147819668813122841983204197482918576128;
parameter    ap_ST_fsm_state209 = 264'd411376139330301510538742295639337626245683966408394965837152256;
parameter    ap_ST_fsm_state210 = 264'd822752278660603021077484591278675252491367932816789931674304512;
parameter    ap_ST_fsm_state211 = 264'd1645504557321206042154969182557350504982735865633579863348609024;
parameter    ap_ST_fsm_state212 = 264'd3291009114642412084309938365114701009965471731267159726697218048;
parameter    ap_ST_fsm_state213 = 264'd6582018229284824168619876730229402019930943462534319453394436096;
parameter    ap_ST_fsm_state214 = 264'd13164036458569648337239753460458804039861886925068638906788872192;
parameter    ap_ST_fsm_state215 = 264'd26328072917139296674479506920917608079723773850137277813577744384;
parameter    ap_ST_fsm_state216 = 264'd52656145834278593348959013841835216159447547700274555627155488768;
parameter    ap_ST_fsm_state217 = 264'd105312291668557186697918027683670432318895095400549111254310977536;
parameter    ap_ST_fsm_state218 = 264'd210624583337114373395836055367340864637790190801098222508621955072;
parameter    ap_ST_fsm_state219 = 264'd421249166674228746791672110734681729275580381602196445017243910144;
parameter    ap_ST_fsm_state220 = 264'd842498333348457493583344221469363458551160763204392890034487820288;
parameter    ap_ST_fsm_state221 = 264'd1684996666696914987166688442938726917102321526408785780068975640576;
parameter    ap_ST_fsm_state222 = 264'd3369993333393829974333376885877453834204643052817571560137951281152;
parameter    ap_ST_fsm_state223 = 264'd6739986666787659948666753771754907668409286105635143120275902562304;
parameter    ap_ST_fsm_state224 = 264'd13479973333575319897333507543509815336818572211270286240551805124608;
parameter    ap_ST_fsm_state225 = 264'd26959946667150639794667015087019630673637144422540572481103610249216;
parameter    ap_ST_fsm_state226 = 264'd53919893334301279589334030174039261347274288845081144962207220498432;
parameter    ap_ST_fsm_state227 = 264'd107839786668602559178668060348078522694548577690162289924414440996864;
parameter    ap_ST_fsm_state228 = 264'd215679573337205118357336120696157045389097155380324579848828881993728;
parameter    ap_ST_fsm_state229 = 264'd431359146674410236714672241392314090778194310760649159697657763987456;
parameter    ap_ST_fsm_state230 = 264'd862718293348820473429344482784628181556388621521298319395315527974912;
parameter    ap_ST_fsm_state231 = 264'd1725436586697640946858688965569256363112777243042596638790631055949824;
parameter    ap_ST_fsm_state232 = 264'd3450873173395281893717377931138512726225554486085193277581262111899648;
parameter    ap_ST_fsm_state233 = 264'd6901746346790563787434755862277025452451108972170386555162524223799296;
parameter    ap_ST_fsm_state234 = 264'd13803492693581127574869511724554050904902217944340773110325048447598592;
parameter    ap_ST_fsm_state235 = 264'd27606985387162255149739023449108101809804435888681546220650096895197184;
parameter    ap_ST_fsm_state236 = 264'd55213970774324510299478046898216203619608871777363092441300193790394368;
parameter    ap_ST_fsm_state237 = 264'd110427941548649020598956093796432407239217743554726184882600387580788736;
parameter    ap_ST_fsm_state238 = 264'd220855883097298041197912187592864814478435487109452369765200775161577472;
parameter    ap_ST_fsm_state239 = 264'd441711766194596082395824375185729628956870974218904739530401550323154944;
parameter    ap_ST_fsm_state240 = 264'd883423532389192164791648750371459257913741948437809479060803100646309888;
parameter    ap_ST_fsm_state241 = 264'd1766847064778384329583297500742918515827483896875618958121606201292619776;
parameter    ap_ST_fsm_state242 = 264'd3533694129556768659166595001485837031654967793751237916243212402585239552;
parameter    ap_ST_fsm_state243 = 264'd7067388259113537318333190002971674063309935587502475832486424805170479104;
parameter    ap_ST_fsm_state244 = 264'd14134776518227074636666380005943348126619871175004951664972849610340958208;
parameter    ap_ST_fsm_state245 = 264'd28269553036454149273332760011886696253239742350009903329945699220681916416;
parameter    ap_ST_fsm_state246 = 264'd56539106072908298546665520023773392506479484700019806659891398441363832832;
parameter    ap_ST_fsm_state247 = 264'd113078212145816597093331040047546785012958969400039613319782796882727665664;
parameter    ap_ST_fsm_state248 = 264'd226156424291633194186662080095093570025917938800079226639565593765455331328;
parameter    ap_ST_fsm_state249 = 264'd452312848583266388373324160190187140051835877600158453279131187530910662656;
parameter    ap_ST_fsm_state250 = 264'd904625697166532776746648320380374280103671755200316906558262375061821325312;
parameter    ap_ST_fsm_state251 = 264'd1809251394333065553493296640760748560207343510400633813116524750123642650624;
parameter    ap_ST_fsm_state252 = 264'd3618502788666131106986593281521497120414687020801267626233049500247285301248;
parameter    ap_ST_fsm_state253 = 264'd7237005577332262213973186563042994240829374041602535252466099000494570602496;
parameter    ap_ST_fsm_state254 = 264'd14474011154664524427946373126085988481658748083205070504932198000989141204992;
parameter    ap_ST_fsm_state255 = 264'd28948022309329048855892746252171976963317496166410141009864396001978282409984;
parameter    ap_ST_fsm_state256 = 264'd57896044618658097711785492504343953926634992332820282019728792003956564819968;
parameter    ap_ST_fsm_state257 = 264'd115792089237316195423570985008687907853269984665640564039457584007913129639936;
parameter    ap_ST_fsm_state258 = 264'd231584178474632390847141970017375815706539969331281128078915168015826259279872;
parameter    ap_ST_fsm_state259 = 264'd463168356949264781694283940034751631413079938662562256157830336031652518559744;
parameter    ap_ST_fsm_state260 = 264'd926336713898529563388567880069503262826159877325124512315660672063305037119488;
parameter    ap_ST_fsm_state261 = 264'd1852673427797059126777135760139006525652319754650249024631321344126610074238976;
parameter    ap_ST_fsm_state262 = 264'd3705346855594118253554271520278013051304639509300498049262642688253220148477952;
parameter    ap_ST_fsm_state263 = 264'd7410693711188236507108543040556026102609279018600996098525285376506440296955904;
parameter    ap_ST_fsm_state264 = 264'd14821387422376473014217086081112052205218558037201992197050570753012880593911808;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] gx;
input  [31:0] gy;
input  [31:0] gz;
input  [31:0] ax;
input  [31:0] ay;
input  [31:0] az;
input  [31:0] mx;
input  [31:0] my;
input  [31:0] mz;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [263:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] q1;
reg   [31:0] q2;
reg   [31:0] q3;
reg   [31:0] q0;
reg   [31:0] beta;
reg   [31:0] reg_344;
wire   [0:0] or_cond1_fu_958_p2;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state125;
wire    ap_CS_fsm_state214;
wire    ap_CS_fsm_state224;
wire    ap_CS_fsm_state260;
reg   [31:0] reg_353;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state128;
wire    ap_CS_fsm_state131;
wire    ap_CS_fsm_state213;
wire    ap_CS_fsm_state219;
reg   [31:0] reg_363;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state69;
wire    ap_CS_fsm_state126;
wire    ap_CS_fsm_state225;
reg   [31:0] reg_370;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state129;
wire    ap_CS_fsm_state220;
reg   [31:0] reg_380;
wire    ap_CS_fsm_state68;
wire    ap_CS_fsm_state71;
wire    ap_CS_fsm_state127;
wire    ap_CS_fsm_state135;
reg   [31:0] reg_390;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state130;
reg   [31:0] reg_396;
wire    ap_CS_fsm_state62;
wire   [31:0] grp_fu_214_p2;
reg   [31:0] reg_404;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state212;
wire    ap_CS_fsm_state223;
wire    ap_CS_fsm_state228;
wire    ap_CS_fsm_state233;
wire    ap_CS_fsm_state242;
wire    ap_CS_fsm_state246;
wire    ap_CS_fsm_state250;
wire    ap_CS_fsm_state259;
wire   [31:0] grp_fu_219_p2;
reg   [31:0] reg_416;
wire    ap_CS_fsm_state11;
reg   [31:0] reg_424;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_state75;
wire    ap_CS_fsm_state84;
wire    ap_CS_fsm_state88;
wire    ap_CS_fsm_state94;
wire    ap_CS_fsm_state99;
wire    ap_CS_fsm_state104;
wire    ap_CS_fsm_state140;
wire    ap_CS_fsm_state159;
wire    ap_CS_fsm_state164;
wire    ap_CS_fsm_state169;
wire    ap_CS_fsm_state178;
wire    ap_CS_fsm_state182;
wire    ap_CS_fsm_state186;
wire    ap_CS_fsm_state195;
wire    ap_CS_fsm_state199;
wire    ap_CS_fsm_state203;
reg   [31:0] reg_439;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state138;
wire    ap_CS_fsm_state142;
wire   [31:0] grp_fu_224_p2;
reg   [31:0] reg_451;
wire   [31:0] grp_fu_228_p2;
reg   [31:0] reg_458;
reg   [31:0] reg_465;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state91;
wire    ap_CS_fsm_state229;
reg   [31:0] reg_474;
wire    ap_CS_fsm_state79;
wire    ap_CS_fsm_state86;
wire    ap_CS_fsm_state96;
wire    ap_CS_fsm_state105;
wire    ap_CS_fsm_state133;
reg   [31:0] reg_484;
wire    ap_CS_fsm_state76;
wire    ap_CS_fsm_state81;
reg   [31:0] reg_492;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state80;
wire    ap_CS_fsm_state230;
reg   [31:0] reg_500;
wire    ap_CS_fsm_state56;
wire   [31:0] grp_fu_194_p2;
reg   [31:0] reg_508;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state101;
wire    ap_CS_fsm_state136;
wire    ap_CS_fsm_state145;
wire    ap_CS_fsm_state150;
wire    ap_CS_fsm_state155;
wire    ap_CS_fsm_state217;
wire    ap_CS_fsm_state218;
wire    ap_CS_fsm_state238;
wire    ap_CS_fsm_state255;
reg   [31:0] reg_516;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state137;
wire    ap_CS_fsm_state146;
wire    ap_CS_fsm_state151;
wire    ap_CS_fsm_state156;
wire   [31:0] grp_fu_198_p2;
reg   [31:0] reg_526;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state109;
reg   [31:0] reg_538;
wire    ap_CS_fsm_state89;
wire    ap_CS_fsm_state149;
wire    ap_CS_fsm_state154;
reg   [31:0] reg_554;
wire    ap_CS_fsm_state57;
reg   [31:0] reg_560;
reg   [31:0] reg_571;
wire   [31:0] grp_fu_236_p2;
reg   [31:0] reg_581;
wire    ap_CS_fsm_state134;
wire   [31:0] grp_fu_241_p2;
reg   [31:0] reg_588;
reg   [31:0] reg_594;
wire    ap_CS_fsm_state132;
reg   [31:0] reg_600;
reg   [31:0] reg_606;
wire    ap_CS_fsm_state143;
reg   [31:0] reg_615;
wire    ap_CS_fsm_state70;
reg   [31:0] reg_623;
reg   [31:0] reg_633;
wire    ap_CS_fsm_state72;
wire    ap_CS_fsm_state87;
wire    ap_CS_fsm_state141;
reg   [31:0] reg_649;
reg   [31:0] reg_656;
reg   [31:0] reg_664;
reg   [31:0] reg_670;
reg   [31:0] reg_677;
wire    ap_CS_fsm_state77;
wire    ap_CS_fsm_state82;
wire    ap_CS_fsm_state90;
wire    ap_CS_fsm_state144;
reg   [31:0] reg_691;
reg   [31:0] reg_700;
reg   [31:0] reg_707;
reg   [31:0] reg_719;
reg   [31:0] reg_725;
reg   [31:0] reg_734;
reg   [31:0] reg_739;
reg   [31:0] reg_746;
reg   [31:0] reg_755;
wire    ap_CS_fsm_state83;
reg   [31:0] reg_762;
wire    ap_CS_fsm_state208;
reg   [31:0] reg_770;
wire    ap_CS_fsm_state93;
wire    ap_CS_fsm_state174;
wire    ap_CS_fsm_state191;
reg   [31:0] reg_778;
wire   [31:0] grp_fu_204_p2;
reg   [31:0] reg_788;
wire   [31:0] grp_fu_208_p2;
reg   [31:0] reg_795;
reg   [31:0] reg_801;
wire    ap_CS_fsm_state95;
wire    ap_CS_fsm_state100;
wire    ap_CS_fsm_state110;
wire    ap_CS_fsm_state122;
wire    ap_CS_fsm_state139;
reg   [31:0] reg_810;
reg   [31:0] reg_817;
reg   [0:0] or_cond1_reg_1418;
wire   [31:0] tmp_s_fu_974_p1;
wire   [0:0] grp_fu_265_p2;
reg   [0:0] tmp_329_reg_1427;
wire    ap_CS_fsm_state19;
wire   [0:0] grp_fu_271_p2;
reg   [0:0] tmp_334_reg_1432;
wire   [0:0] grp_fu_277_p2;
reg   [0:0] tmp_339_reg_1437;
wire   [0:0] or_cond3_fu_1105_p2;
reg   [0:0] or_cond3_reg_1442;
reg   [30:0] tmp_i3_reg_1446;
wire    ap_CS_fsm_state34;
wire   [31:0] tmp_1_i5_fu_1134_p1;
reg   [31:0] tmp_1_i5_reg_1451;
wire    ap_CS_fsm_state38;
reg   [30:0] tmp_i_reg_1458;
wire    ap_CS_fsm_state51;
wire   [31:0] tmp_1_i_fu_1162_p1;
reg   [31:0] tmp_1_i_reg_1463;
reg   [31:0] q0_load_16_reg_1469;
reg   [31:0] q3_load_21_reg_1484;
reg   [31:0] q3_load_22_reg_1489;
reg   [31:0] q1q3_reg_1504;
reg   [31:0] q2q3_reg_1511;
reg   [31:0] tmp_193_reg_1516;
wire   [31:0] tmp_172_fu_1177_p1;
reg   [31:0] p_2q1_reg_1526;
wire    ap_CS_fsm_state73;
wire   [31:0] tmp_188_fu_1192_p1;
wire    ap_CS_fsm_state85;
wire   [31:0] tmp_252_fu_1207_p1;
wire   [31:0] grp_fu_249_p2;
reg   [31:0] tmp_274_reg_1543;
wire   [31:0] grp_fu_253_p2;
reg   [31:0] tmp_275_reg_1548;
reg   [31:0] tmp_224_reg_1553;
wire   [31:0] grp_fu_283_p2;
reg   [31:0] p_2bx_reg_1558;
wire   [31:0] tmp_259_fu_1222_p1;
reg   [31:0] tmp_259_reg_1567;
wire   [31:0] tmp_208_fu_1236_p1;
reg   [31:0] tmp_277_reg_1579;
reg   [31:0] tmp_278_reg_1584;
reg   [31:0] tmp_245_reg_1589;
reg   [31:0] tmp_284_reg_1594;
reg   [31:0] tmp_239_reg_1599;
reg   [30:0] tmp_i2_reg_1604;
wire    ap_CS_fsm_state175;
wire   [31:0] tmp_1_i2_fu_1265_p1;
reg   [31:0] tmp_1_i2_reg_1609;
wire    ap_CS_fsm_state179;
reg   [31:0] beta_load_reg_1615;
wire    ap_CS_fsm_state197;
reg   [31:0] beta_load_4_reg_1620;
wire    ap_CS_fsm_state198;
reg   [31:0] beta_load_5_reg_1625;
wire    ap_CS_fsm_state200;
reg   [30:0] tmp_i4_reg_1635;
wire    ap_CS_fsm_state239;
wire   [31:0] tmp_1_i3_fu_1317_p1;
reg   [31:0] tmp_1_i3_reg_1640;
wire    ap_CS_fsm_state243;
wire    grp_MadgwickAHRSupdateIM_fu_168_ap_start;
wire    grp_MadgwickAHRSupdateIM_fu_168_ap_done;
wire    grp_MadgwickAHRSupdateIM_fu_168_ap_idle;
wire    grp_MadgwickAHRSupdateIM_fu_168_ap_ready;
wire   [31:0] grp_MadgwickAHRSupdateIM_fu_168_q1_o;
wire    grp_MadgwickAHRSupdateIM_fu_168_q1_o_ap_vld;
wire   [31:0] grp_MadgwickAHRSupdateIM_fu_168_q2_o;
wire    grp_MadgwickAHRSupdateIM_fu_168_q2_o_ap_vld;
wire   [31:0] grp_MadgwickAHRSupdateIM_fu_168_q3_o;
wire    grp_MadgwickAHRSupdateIM_fu_168_q3_o_ap_vld;
wire   [31:0] grp_MadgwickAHRSupdateIM_fu_168_q0_o;
wire    grp_MadgwickAHRSupdateIM_fu_168_q0_o_ap_vld;
reg   [31:0] ap_phi_mux_qDot_phi_fu_131_p4;
reg   [31:0] qDot_reg_128;
wire    ap_CS_fsm_state209;
reg   [31:0] ap_phi_mux_qDot8_phi_fu_141_p4;
reg   [31:0] qDot8_reg_138;
reg   [31:0] qDot9_reg_148;
reg   [31:0] qDot5_reg_158;
reg    ap_reg_grp_MadgwickAHRSupdateIM_fu_168_ap_start;
wire    ap_CS_fsm_state264;
wire    ap_CS_fsm_state263;
reg   [31:0] grp_fu_194_p0;
reg   [31:0] grp_fu_194_p1;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state92;
wire    ap_CS_fsm_state97;
wire    ap_CS_fsm_state106;
wire    ap_CS_fsm_state118;
wire    ap_CS_fsm_state147;
wire    ap_CS_fsm_state152;
wire    ap_CS_fsm_state160;
wire    ap_CS_fsm_state165;
wire    ap_CS_fsm_state170;
wire    ap_CS_fsm_state187;
wire    ap_CS_fsm_state204;
wire    ap_CS_fsm_state234;
wire    ap_CS_fsm_state251;
reg   [31:0] grp_fu_198_p0;
reg   [31:0] grp_fu_198_p1;
reg   [31:0] grp_fu_204_p0;
reg   [31:0] grp_fu_204_p1;
reg   [31:0] grp_fu_208_p0;
reg   [31:0] grp_fu_208_p1;
reg   [31:0] grp_fu_214_p0;
reg   [31:0] grp_fu_214_p1;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state78;
wire    ap_CS_fsm_state102;
wire    ap_CS_fsm_state123;
wire    ap_CS_fsm_state161;
wire    ap_CS_fsm_state166;
wire    ap_CS_fsm_state183;
wire    ap_CS_fsm_state192;
wire    ap_CS_fsm_state196;
wire    ap_CS_fsm_state210;
wire    ap_CS_fsm_state247;
wire    ap_CS_fsm_state256;
reg   [31:0] grp_fu_219_p0;
reg   [31:0] grp_fu_219_p1;
reg   [31:0] grp_fu_224_p0;
reg   [31:0] grp_fu_224_p1;
reg   [31:0] grp_fu_228_p0;
reg   [31:0] grp_fu_228_p1;
reg   [31:0] grp_fu_236_p0;
reg   [31:0] grp_fu_236_p1;
reg   [31:0] grp_fu_241_p0;
reg   [31:0] grp_fu_241_p1;
reg   [31:0] grp_fu_265_p0;
reg   [31:0] grp_fu_271_p0;
reg   [31:0] grp_fu_277_p0;
wire    ap_CS_fsm_state111;
wire   [31:0] mx_to_int_fu_826_p1;
wire   [7:0] tmp_fu_830_p4;
wire   [22:0] tmp_121_fu_840_p1;
wire   [0:0] notrhs_fu_850_p2;
wire   [0:0] notlhs_fu_844_p2;
wire   [0:0] tmp_122_fu_856_p2;
wire   [31:0] my_to_int_fu_868_p1;
wire   [7:0] tmp_133_fu_872_p4;
wire   [22:0] tmp_297_fu_882_p1;
wire   [0:0] notrhs9_fu_892_p2;
wire   [0:0] notlhs8_fu_886_p2;
wire   [0:0] tmp_316_fu_898_p2;
wire   [31:0] mz_to_int_fu_910_p1;
wire   [7:0] tmp_321_fu_914_p4;
wire   [22:0] tmp_322_fu_924_p1;
wire   [0:0] notrhs1_fu_934_p2;
wire   [0:0] notlhs1_fu_928_p2;
wire   [0:0] tmp_323_fu_940_p2;
wire   [0:0] tmp_320_fu_904_p2;
wire   [0:0] tmp_325_fu_946_p2;
wire   [0:0] tmp1_fu_952_p2;
wire   [0:0] tmp_128_fu_862_p2;
wire   [31:0] tmp_100_to_int_fu_964_p1;
wire   [31:0] tmp_100_neg_fu_968_p2;
wire   [31:0] ax_to_int_fu_979_p1;
wire   [7:0] tmp_326_fu_982_p4;
wire   [22:0] tmp_327_fu_992_p1;
wire   [0:0] notrhs2_fu_1002_p2;
wire   [0:0] notlhs2_fu_996_p2;
wire   [0:0] tmp_328_fu_1008_p2;
wire   [31:0] ay_to_int_fu_1019_p1;
wire   [7:0] tmp_331_fu_1022_p4;
wire   [22:0] tmp_332_fu_1032_p1;
wire   [0:0] notrhs3_fu_1042_p2;
wire   [0:0] notlhs3_fu_1036_p2;
wire   [0:0] tmp_333_fu_1048_p2;
wire   [31:0] az_to_int_fu_1059_p1;
wire   [7:0] tmp_336_fu_1062_p4;
wire   [22:0] tmp_337_fu_1072_p1;
wire   [0:0] notrhs4_fu_1082_p2;
wire   [0:0] notlhs4_fu_1076_p2;
wire   [0:0] tmp_338_fu_1088_p2;
wire   [0:0] tmp_335_fu_1054_p2;
wire   [0:0] tmp_340_fu_1094_p2;
wire   [0:0] tmp2_fu_1099_p2;
wire   [0:0] tmp_330_fu_1014_p2;
wire   [31:0] y_7_fu_1111_p1;
wire   [31:0] tmp_342_fu_1125_p1;
wire   [31:0] y_8_fu_1128_p2;
wire   [31:0] y_fu_1139_p1;
wire   [31:0] tmp_341_fu_1153_p1;
wire   [31:0] y_6_fu_1156_p2;
wire   [31:0] tmp_174_to_int_fu_1167_p1;
wire   [31:0] tmp_174_neg_fu_1171_p2;
wire   [31:0] tmp_190_to_int_fu_1182_p1;
wire   [31:0] tmp_190_neg_fu_1186_p2;
wire   [31:0] tmp_254_to_int_fu_1197_p1;
wire   [31:0] tmp_254_neg_fu_1201_p2;
wire   [31:0] tmp_261_to_int_fu_1212_p1;
wire   [31:0] tmp_261_neg_fu_1216_p2;
wire   [31:0] tmp_210_to_int_fu_1227_p1;
wire   [31:0] tmp_210_neg_fu_1230_p2;
wire   [31:0] y_9_fu_1242_p1;
wire   [31:0] tmp_343_fu_1256_p1;
wire   [31:0] y_10_fu_1259_p2;
wire   [31:0] y_11_fu_1294_p1;
wire   [31:0] tmp_344_fu_1308_p1;
wire   [31:0] y_12_fu_1311_p2;
reg   [1:0] grp_fu_194_opcode;
reg   [1:0] grp_fu_198_opcode;
reg   [1:0] grp_fu_204_opcode;
reg   [1:0] grp_fu_208_opcode;
reg   [263:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 264'd1;
#0 q1 = 32'd0;
#0 q2 = 32'd0;
#0 q3 = 32'd0;
#0 q0 = 32'd1065353216;
#0 beta = 32'd1036831949;
#0 ap_reg_grp_MadgwickAHRSupdateIM_fu_168_ap_start = 1'b0;
end

MadgwickAHRSupdateIM grp_MadgwickAHRSupdateIM_fu_168(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_MadgwickAHRSupdateIM_fu_168_ap_start),
    .ap_done(grp_MadgwickAHRSupdateIM_fu_168_ap_done),
    .ap_idle(grp_MadgwickAHRSupdateIM_fu_168_ap_idle),
    .ap_ready(grp_MadgwickAHRSupdateIM_fu_168_ap_ready),
    .gx(gx),
    .gy(gy),
    .gz(gz),
    .ax(ax),
    .ay(ay),
    .az(az),
    .q1_i(q1),
    .q1_o(grp_MadgwickAHRSupdateIM_fu_168_q1_o),
    .q1_o_ap_vld(grp_MadgwickAHRSupdateIM_fu_168_q1_o_ap_vld),
    .q2_i(q2),
    .q2_o(grp_MadgwickAHRSupdateIM_fu_168_q2_o),
    .q2_o_ap_vld(grp_MadgwickAHRSupdateIM_fu_168_q2_o_ap_vld),
    .q3_i(q3),
    .q3_o(grp_MadgwickAHRSupdateIM_fu_168_q3_o),
    .q3_o_ap_vld(grp_MadgwickAHRSupdateIM_fu_168_q3_o_ap_vld),
    .q0_i(q0),
    .q0_o(grp_MadgwickAHRSupdateIM_fu_168_q0_o),
    .q0_o_ap_vld(grp_MadgwickAHRSupdateIM_fu_168_q0_o_ap_vld),
    .beta(beta)
);

MadgwickAHRSupdatbkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatbkb_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_194_p0),
    .din1(grp_fu_194_p1),
    .opcode(grp_fu_194_opcode),
    .ce(1'b1),
    .dout(grp_fu_194_p2)
);

MadgwickAHRSupdatbkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatbkb_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_198_p0),
    .din1(grp_fu_198_p1),
    .opcode(grp_fu_198_opcode),
    .ce(1'b1),
    .dout(grp_fu_198_p2)
);

MadgwickAHRSupdatbkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatbkb_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_204_p0),
    .din1(grp_fu_204_p1),
    .opcode(grp_fu_204_opcode),
    .ce(1'b1),
    .dout(grp_fu_204_p2)
);

MadgwickAHRSupdatbkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatbkb_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_208_p0),
    .din1(grp_fu_208_p1),
    .opcode(grp_fu_208_opcode),
    .ce(1'b1),
    .dout(grp_fu_208_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_214_p0),
    .din1(grp_fu_214_p1),
    .ce(1'b1),
    .dout(grp_fu_214_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_219_p0),
    .din1(grp_fu_219_p1),
    .ce(1'b1),
    .dout(grp_fu_219_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_224_p0),
    .din1(grp_fu_224_p1),
    .ce(1'b1),
    .dout(grp_fu_224_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_228_p0),
    .din1(grp_fu_228_p1),
    .ce(1'b1),
    .dout(grp_fu_228_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_236_p0),
    .din1(grp_fu_236_p1),
    .ce(1'b1),
    .dout(grp_fu_236_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_241_p0),
    .din1(grp_fu_241_p1),
    .ce(1'b1),
    .dout(grp_fu_241_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_2q1_reg_1526),
    .din1(reg_778),
    .ce(1'b1),
    .dout(grp_fu_249_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_755),
    .din1(reg_538),
    .ce(1'b1),
    .dout(grp_fu_253_p2)
);

MadgwickAHRSupdatdEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
MadgwickAHRSupdatdEe_U42(
    .din0(grp_fu_265_p0),
    .din1(32'd0),
    .opcode(5'd1),
    .dout(grp_fu_265_p2)
);

MadgwickAHRSupdatdEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
MadgwickAHRSupdatdEe_U43(
    .din0(grp_fu_271_p0),
    .din1(32'd0),
    .opcode(5'd1),
    .dout(grp_fu_271_p2)
);

MadgwickAHRSupdatdEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
MadgwickAHRSupdatdEe_U44(
    .din0(grp_fu_277_p0),
    .din1(32'd0),
    .opcode(5'd1),
    .dout(grp_fu_277_p2)
);

MadgwickAHRSupdateOg #(
    .ID( 1 ),
    .NUM_STAGE( 12 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdateOg_U45(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(reg_801),
    .ce(1'b1),
    .dout(grp_fu_283_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_MadgwickAHRSupdateIM_fu_168_ap_start <= 1'b0;
    end else begin
        if (((or_cond1_fu_958_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_reg_grp_MadgwickAHRSupdateIM_fu_168_ap_start <= 1'b1;
        end else if ((1'b1 == grp_MadgwickAHRSupdateIM_fu_168_ap_ready)) begin
            ap_reg_grp_MadgwickAHRSupdateIM_fu_168_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == or_cond1_reg_1418) & (1'b1 == ap_CS_fsm_state263))) begin
        q0 <= grp_fu_214_p2;
    end else if ((1'b1 == ap_CS_fsm_state218)) begin
        q0 <= reg_508;
    end else if (((1'b1 == ap_CS_fsm_state264) & (1'b1 == grp_MadgwickAHRSupdateIM_fu_168_q0_o_ap_vld))) begin
        q0 <= grp_MadgwickAHRSupdateIM_fu_168_q0_o;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == or_cond1_reg_1418) & (1'b1 == ap_CS_fsm_state263))) begin
        q1 <= grp_fu_219_p2;
    end else if ((1'b1 == ap_CS_fsm_state218)) begin
        q1 <= reg_526;
    end else if (((1'b1 == ap_CS_fsm_state264) & (1'b1 == grp_MadgwickAHRSupdateIM_fu_168_q1_o_ap_vld))) begin
        q1 <= grp_MadgwickAHRSupdateIM_fu_168_q1_o;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == or_cond1_reg_1418) & (1'b1 == ap_CS_fsm_state263))) begin
        q2 <= grp_fu_224_p2;
    end else if ((1'b1 == ap_CS_fsm_state219)) begin
        q2 <= reg_508;
    end else if (((1'b1 == ap_CS_fsm_state264) & (1'b1 == grp_MadgwickAHRSupdateIM_fu_168_q2_o_ap_vld))) begin
        q2 <= grp_MadgwickAHRSupdateIM_fu_168_q2_o;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == or_cond1_reg_1418) & (1'b1 == ap_CS_fsm_state263))) begin
        q3 <= grp_fu_228_p2;
    end else if ((1'b1 == ap_CS_fsm_state219)) begin
        q3 <= reg_526;
    end else if (((1'b1 == ap_CS_fsm_state264) & (1'b1 == grp_MadgwickAHRSupdateIM_fu_168_q3_o_ap_vld))) begin
        q3 <= grp_MadgwickAHRSupdateIM_fu_168_q3_o;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (or_cond3_fu_1105_p2 == 1'd1))) begin
        qDot5_reg_158 <= grp_fu_228_p2;
    end else if (((1'd0 == or_cond3_reg_1442) & (1'b1 == ap_CS_fsm_state209))) begin
        qDot5_reg_158 <= reg_795;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (or_cond3_fu_1105_p2 == 1'd1))) begin
        qDot8_reg_138 <= grp_fu_219_p2;
    end else if (((1'd0 == or_cond3_reg_1442) & (1'b1 == ap_CS_fsm_state209))) begin
        qDot8_reg_138 <= reg_762;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (or_cond3_fu_1105_p2 == 1'd1))) begin
        qDot9_reg_148 <= grp_fu_224_p2;
    end else if (((1'd0 == or_cond3_reg_1442) & (1'b1 == ap_CS_fsm_state209))) begin
        qDot9_reg_148 <= reg_788;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (or_cond3_fu_1105_p2 == 1'd1))) begin
        qDot_reg_128 <= grp_fu_214_p2;
    end else if (((1'd0 == or_cond3_reg_1442) & (1'b1 == ap_CS_fsm_state209))) begin
        qDot_reg_128 <= reg_770;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        or_cond1_reg_1418 <= or_cond1_fu_958_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        or_cond3_reg_1442 <= or_cond3_fu_1105_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state122)) begin
        p_2bx_reg_1558 <= grp_fu_283_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        p_2q1_reg_1526 <= grp_fu_214_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        q0_load_16_reg_1469 <= q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        q1q3_reg_1504 <= grp_fu_214_p2;
        q2q3_reg_1511 <= grp_fu_219_p2;
        tmp_193_reg_1516 <= grp_fu_224_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        q3_load_21_reg_1484 <= q3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        q3_load_22_reg_1489 <= q3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state260) | (1'b1 == ap_CS_fsm_state224) | (1'b1 == ap_CS_fsm_state214) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state8) | ((or_cond1_fu_958_p2 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        reg_344 <= q2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state219) | (1'b1 == ap_CS_fsm_state213) | (1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state260) | ((or_cond1_fu_958_p2 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        reg_353 <= q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state225) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state2))) begin
        reg_363 <= q2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state220) | (1'b1 == ap_CS_fsm_state129) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state2))) begin
        reg_370 <= q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state219) | (1'b1 == ap_CS_fsm_state213) | (1'b1 == ap_CS_fsm_state260))) begin
        reg_380 <= q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state3))) begin
        reg_390 <= q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state220) | (1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state128))) begin
        reg_396 <= q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state259) | (1'b1 == ap_CS_fsm_state250) | (1'b1 == ap_CS_fsm_state246) | (1'b1 == ap_CS_fsm_state242) | (1'b1 == ap_CS_fsm_state233) | (1'b1 == ap_CS_fsm_state228) | (1'b1 == ap_CS_fsm_state223) | (1'b1 == ap_CS_fsm_state212) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_404 <= grp_fu_214_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state223) | (1'b1 == ap_CS_fsm_state212) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_416 <= grp_fu_219_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state203) | (1'b1 == ap_CS_fsm_state199) | (1'b1 == ap_CS_fsm_state195) | (1'b1 == ap_CS_fsm_state186) | (1'b1 == ap_CS_fsm_state182) | (1'b1 == ap_CS_fsm_state178) | (1'b1 == ap_CS_fsm_state169) | (1'b1 == ap_CS_fsm_state164) | (1'b1 == ap_CS_fsm_state159) | (1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state213) | (1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state58))) begin
        reg_424 <= grp_fu_214_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state203) | (1'b1 == ap_CS_fsm_state199) | (1'b1 == ap_CS_fsm_state159) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state213) | (1'b1 == ap_CS_fsm_state58))) begin
        reg_439 <= grp_fu_219_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state20))) begin
        reg_451 <= grp_fu_224_p2;
        reg_458 <= grp_fu_228_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state229) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state260) | (1'b1 == ap_CS_fsm_state214))) begin
        reg_465 <= q3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state129) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state60))) begin
        reg_474 <= grp_fu_214_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state131))) begin
        reg_484 <= grp_fu_219_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state230) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state129))) begin
        reg_492 <= q3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state8))) begin
        reg_500 <= q3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state255) | (1'b1 == ap_CS_fsm_state238) | (1'b1 == ap_CS_fsm_state218) | (1'b1 == ap_CS_fsm_state217) | (1'b1 == ap_CS_fsm_state155) | (1'b1 == ap_CS_fsm_state150) | (1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state233) | (1'b1 == ap_CS_fsm_state228) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state131))) begin
        reg_508 <= grp_fu_194_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state156) | (1'b1 == ap_CS_fsm_state151) | (1'b1 == ap_CS_fsm_state146))) begin
        reg_516 <= grp_fu_194_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state218) | (1'b1 == ap_CS_fsm_state217) | (1'b1 == ap_CS_fsm_state155) | (1'b1 == ap_CS_fsm_state150) | (1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state16))) begin
        reg_526 <= grp_fu_198_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state159) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state154) | (1'b1 == ap_CS_fsm_state149) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state16))) begin
        reg_538 <= grp_fu_194_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state57))) begin
        reg_554 <= q3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state203) | (1'b1 == ap_CS_fsm_state199) | (1'b1 == ap_CS_fsm_state58))) begin
        reg_560 <= grp_fu_224_p2;
        reg_571 <= grp_fu_228_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state134))) begin
        reg_581 <= grp_fu_236_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state134))) begin
        reg_588 <= grp_fu_241_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state132))) begin
        reg_594 <= q3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state63))) begin
        reg_600 <= q3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state143))) begin
        reg_606 <= grp_fu_224_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state70))) begin
        reg_615 <= q2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state143))) begin
        reg_623 <= grp_fu_228_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state132))) begin
        reg_633 <= grp_fu_214_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state63))) begin
        reg_649 <= q2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state143) | (1'b1 == ap_CS_fsm_state132))) begin
        reg_656 <= grp_fu_219_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state132))) begin
        reg_664 <= q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state143) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state89))) begin
        reg_670 <= grp_fu_214_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state77))) begin
        reg_677 <= grp_fu_214_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state66))) begin
        reg_691 <= grp_fu_219_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state66))) begin
        reg_700 <= grp_fu_224_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state66))) begin
        reg_707 <= grp_fu_228_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state134))) begin
        reg_719 <= grp_fu_219_p2;
        reg_725 <= grp_fu_224_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state69))) begin
        reg_734 <= grp_fu_219_p2;
        reg_739 <= grp_fu_224_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state134))) begin
        reg_746 <= grp_fu_228_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state83))) begin
        reg_755 <= grp_fu_214_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state208))) begin
        reg_762 <= grp_fu_198_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state169) | (1'b1 == ap_CS_fsm_state164) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state191) | (1'b1 == ap_CS_fsm_state174) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state208))) begin
        reg_770 <= grp_fu_194_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state93))) begin
        reg_778 <= grp_fu_198_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state208))) begin
        reg_788 <= grp_fu_204_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state208))) begin
        reg_795 <= grp_fu_208_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state139) | (1'b1 == ap_CS_fsm_state122) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state95))) begin
        reg_801 <= grp_fu_194_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state139) | (1'b1 == ap_CS_fsm_state122))) begin
        reg_810 <= grp_fu_198_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state131))) begin
        reg_817 <= grp_fu_204_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state179)) begin
        tmp_1_i2_reg_1609 <= tmp_1_i2_fu_1265_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state243)) begin
        tmp_1_i3_reg_1640 <= tmp_1_i3_fu_1317_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        tmp_1_i5_reg_1451 <= tmp_1_i5_fu_1134_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        tmp_1_i_reg_1463 <= tmp_1_i_fu_1162_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state100)) begin
        tmp_224_reg_1553 <= grp_fu_198_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state140)) begin
        tmp_239_reg_1599 <= grp_fu_194_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state136)) begin
        tmp_245_reg_1589 <= grp_fu_208_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state129)) begin
        tmp_259_reg_1567 <= tmp_259_fu_1222_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        tmp_274_reg_1543 <= grp_fu_249_p2;
        tmp_275_reg_1548 <= grp_fu_253_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state135)) begin
        tmp_277_reg_1579 <= grp_fu_236_p2;
        tmp_278_reg_1584 <= grp_fu_241_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state139)) begin
        tmp_284_reg_1594 <= grp_fu_204_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_329_reg_1427 <= grp_fu_265_p2;
        tmp_334_reg_1432 <= grp_fu_271_p2;
        tmp_339_reg_1437 <= grp_fu_277_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state175)) begin
        tmp_i2_reg_1604 <= {{y_9_fu_1242_p1[31:1]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        tmp_i3_reg_1446 <= {{y_7_fu_1111_p1[31:1]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state239)) begin
        tmp_i4_reg_1635 <= {{y_11_fu_1294_p1[31:1]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        tmp_i_reg_1458 <= {{y_fu_1139_p1[31:1]}};
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state263)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == or_cond3_reg_1442) & (1'b1 == ap_CS_fsm_state209))) begin
        ap_phi_mux_qDot8_phi_fu_141_p4 = reg_762;
    end else begin
        ap_phi_mux_qDot8_phi_fu_141_p4 = qDot8_reg_138;
    end
end

always @ (*) begin
    if (((1'd0 == or_cond3_reg_1442) & (1'b1 == ap_CS_fsm_state209))) begin
        ap_phi_mux_qDot_phi_fu_131_p4 = reg_770;
    end else begin
        ap_phi_mux_qDot_phi_fu_131_p4 = qDot_reg_128;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state263)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state251) | (1'b1 == ap_CS_fsm_state204) | (1'b1 == ap_CS_fsm_state187) | (1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state134))) begin
        grp_fu_194_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state155) | (1'b1 == ap_CS_fsm_state150) | (1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state229) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state213) | (1'b1 == ap_CS_fsm_state224) | (1'b1 == ap_CS_fsm_state214) | (1'b1 == ap_CS_fsm_state234) | (1'b1 == ap_CS_fsm_state170) | (1'b1 == ap_CS_fsm_state165) | (1'b1 == ap_CS_fsm_state160) | (1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state147) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state151) | (1'b1 == ap_CS_fsm_state146))) begin
        grp_fu_194_opcode = 2'd0;
    end else begin
        grp_fu_194_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state214)) begin
        grp_fu_194_p0 = q2;
    end else if ((1'b1 == ap_CS_fsm_state213)) begin
        grp_fu_194_p0 = q0;
    end else if ((1'b1 == ap_CS_fsm_state145)) begin
        grp_fu_194_p0 = reg_795;
    end else if (((1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state142))) begin
        grp_fu_194_p0 = reg_778;
    end else if ((1'b1 == ap_CS_fsm_state135)) begin
        grp_fu_194_p0 = reg_670;
    end else if ((1'b1 == ap_CS_fsm_state133)) begin
        grp_fu_194_p0 = reg_633;
    end else if ((1'b1 == ap_CS_fsm_state118)) begin
        grp_fu_194_p0 = q1q3_reg_1504;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        grp_fu_194_p0 = reg_801;
    end else if (((1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state91))) begin
        grp_fu_194_p0 = 32'd1056964608;
    end else if (((1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state170) | (1'b1 == ap_CS_fsm_state165) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state141))) begin
        grp_fu_194_p0 = reg_770;
    end else if (((1'b1 == ap_CS_fsm_state155) | (1'b1 == ap_CS_fsm_state150) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state90))) begin
        grp_fu_194_p0 = reg_538;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        grp_fu_194_p0 = reg_755;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        grp_fu_194_p0 = tmp_193_reg_1516;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        grp_fu_194_p0 = reg_739;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_194_p0 = reg_691;
    end else if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state251) | (1'b1 == ap_CS_fsm_state187))) begin
        grp_fu_194_p0 = 32'd1069547520;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_194_p0 = reg_526;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state147))) begin
        grp_fu_194_p0 = reg_516;
    end else if (((1'b1 == ap_CS_fsm_state229) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state234) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state151) | (1'b1 == ap_CS_fsm_state146))) begin
        grp_fu_194_p0 = reg_508;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state134))) begin
        grp_fu_194_p0 = reg_474;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state160) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state89))) begin
        grp_fu_194_p0 = reg_424;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state224) | (1'b1 == ap_CS_fsm_state204))) begin
        grp_fu_194_p0 = reg_404;
    end else begin
        grp_fu_194_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        grp_fu_194_p1 = reg_571;
    end else if ((1'b1 == ap_CS_fsm_state152)) begin
        grp_fu_194_p1 = reg_560;
    end else if ((1'b1 == ap_CS_fsm_state150)) begin
        grp_fu_194_p1 = reg_623;
    end else if ((1'b1 == ap_CS_fsm_state145)) begin
        grp_fu_194_p1 = reg_677;
    end else if ((1'b1 == ap_CS_fsm_state142)) begin
        grp_fu_194_p1 = reg_633;
    end else if (((1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state118))) begin
        grp_fu_194_p1 = reg_719;
    end else if (((1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state133))) begin
        grp_fu_194_p1 = reg_656;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        grp_fu_194_p1 = reg_746;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        grp_fu_194_p1 = reg_725;
    end else if (((1'b1 == ap_CS_fsm_state147) | (1'b1 == ap_CS_fsm_state85))) begin
        grp_fu_194_p1 = reg_606;
    end else if (((1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state89))) begin
        grp_fu_194_p1 = reg_691;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state146))) begin
        grp_fu_194_p1 = reg_670;
    end else if (((1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state70))) begin
        grp_fu_194_p1 = reg_734;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_194_p1 = reg_700;
    end else if (((1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state151))) begin
        grp_fu_194_p1 = reg_474;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state214) | (1'b1 == ap_CS_fsm_state204) | (1'b1 == ap_CS_fsm_state187) | (1'b1 == ap_CS_fsm_state170) | (1'b1 == ap_CS_fsm_state165) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state141))) begin
        grp_fu_194_p1 = reg_424;
    end else if (((1'b1 == ap_CS_fsm_state229) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state213) | (1'b1 == ap_CS_fsm_state251) | (1'b1 == ap_CS_fsm_state234))) begin
        grp_fu_194_p1 = reg_404;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state72))) begin
        grp_fu_194_p1 = reg_484;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state160) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state132))) begin
        grp_fu_194_p1 = reg_439;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state224))) begin
        grp_fu_194_p1 = reg_416;
    end else begin
        grp_fu_194_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state204) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state134))) begin
        grp_fu_198_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state213) | (1'b1 == ap_CS_fsm_state214) | (1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state151) | (1'b1 == ap_CS_fsm_state146))) begin
        grp_fu_198_opcode = 2'd0;
    end else begin
        grp_fu_198_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state214)) begin
        grp_fu_198_p0 = q3;
    end else if ((1'b1 == ap_CS_fsm_state213)) begin
        grp_fu_198_p0 = q1;
    end else if ((1'b1 == ap_CS_fsm_state204)) begin
        grp_fu_198_p0 = reg_416;
    end else if ((1'b1 == ap_CS_fsm_state141)) begin
        grp_fu_198_p0 = tmp_239_reg_1599;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        grp_fu_198_p0 = reg_788;
    end else if ((1'b1 == ap_CS_fsm_state135)) begin
        grp_fu_198_p0 = reg_725;
    end else if ((1'b1 == ap_CS_fsm_state132)) begin
        grp_fu_198_p0 = reg_762;
    end else if ((1'b1 == ap_CS_fsm_state118)) begin
        grp_fu_198_p0 = reg_719;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state100))) begin
        grp_fu_198_p0 = reg_810;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        grp_fu_198_p0 = reg_801;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_fu_198_p0 = 32'd1065353216;
    end else if (((1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state89))) begin
        grp_fu_198_p0 = reg_700;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        grp_fu_198_p0 = reg_778;
    end else if (((1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state127))) begin
        grp_fu_198_p0 = reg_606;
    end else if (((1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state151) | (1'b1 == ap_CS_fsm_state146))) begin
        grp_fu_198_p0 = reg_526;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        grp_fu_198_p0 = reg_677;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_198_p0 = reg_707;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        grp_fu_198_p0 = 32'd1069547520;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_198_p0 = reg_538;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_198_p0 = reg_451;
    end else begin
        grp_fu_198_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state146)) begin
        grp_fu_198_p1 = reg_656;
    end else if ((1'b1 == ap_CS_fsm_state134)) begin
        grp_fu_198_p1 = reg_707;
    end else if ((1'b1 == ap_CS_fsm_state132)) begin
        grp_fu_198_p1 = reg_560;
    end else if ((1'b1 == ap_CS_fsm_state118)) begin
        grp_fu_198_p1 = q1q3_reg_1504;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        grp_fu_198_p1 = reg_739;
    end else if (((1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state135))) begin
        grp_fu_198_p1 = reg_746;
    end else if (((1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state95))) begin
        grp_fu_198_p1 = reg_691;
    end else if (((1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state89))) begin
        grp_fu_198_p1 = reg_623;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        grp_fu_198_p1 = reg_424;
    end else if (((1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state87))) begin
        grp_fu_198_p1 = reg_484;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        grp_fu_198_p1 = reg_474;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        grp_fu_198_p1 = reg_700;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        grp_fu_198_p1 = q2q3_reg_1511;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_198_p1 = reg_581;
    end else if (((1'b1 == ap_CS_fsm_state214) | (1'b1 == ap_CS_fsm_state204) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state151))) begin
        grp_fu_198_p1 = reg_439;
    end else if (((1'b1 == ap_CS_fsm_state213) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_fu_198_p1 = reg_416;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_198_p1 = reg_458;
    end else begin
        grp_fu_198_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state204) | (1'b1 == ap_CS_fsm_state132))) begin
        grp_fu_204_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state89))) begin
        grp_fu_204_opcode = 2'd0;
    end else begin
        grp_fu_204_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state204)) begin
        grp_fu_204_p0 = reg_451;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        grp_fu_204_p0 = tmp_277_reg_1579;
    end else if ((1'b1 == ap_CS_fsm_state132)) begin
        grp_fu_204_p0 = reg_817;
    end else if (((1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state89))) begin
        grp_fu_204_p0 = reg_581;
    end else begin
        grp_fu_204_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state204)) begin
        grp_fu_204_p1 = reg_560;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        grp_fu_204_p1 = tmp_278_reg_1584;
    end else if ((1'b1 == ap_CS_fsm_state132)) begin
        grp_fu_204_p1 = reg_571;
    end else if (((1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state89))) begin
        grp_fu_204_p1 = reg_588;
    end else begin
        grp_fu_204_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state204)) begin
        grp_fu_208_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state89))) begin
        grp_fu_208_opcode = 2'd0;
    end else begin
        grp_fu_208_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state204)) begin
        grp_fu_208_p0 = reg_458;
    end else if ((1'b1 == ap_CS_fsm_state132)) begin
        grp_fu_208_p0 = reg_484;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        grp_fu_208_p0 = tmp_274_reg_1543;
    end else begin
        grp_fu_208_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state204)) begin
        grp_fu_208_p1 = reg_571;
    end else if ((1'b1 == ap_CS_fsm_state132)) begin
        grp_fu_208_p1 = reg_606;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        grp_fu_208_p1 = tmp_275_reg_1548;
    end else begin
        grp_fu_208_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state256)) begin
        grp_fu_214_p0 = tmp_1_i3_reg_1640;
    end else if (((1'b1 == ap_CS_fsm_state247) | (1'b1 == ap_CS_fsm_state243))) begin
        grp_fu_214_p0 = reg_404;
    end else if ((1'b1 == ap_CS_fsm_state210)) begin
        grp_fu_214_p0 = qDot9_reg_148;
    end else if ((1'b1 == ap_CS_fsm_state209)) begin
        grp_fu_214_p0 = ap_phi_mux_qDot_phi_fu_131_p4;
    end else if ((1'b1 == ap_CS_fsm_state200)) begin
        grp_fu_214_p0 = beta_load_reg_1615;
    end else if ((1'b1 == ap_CS_fsm_state192)) begin
        grp_fu_214_p0 = tmp_1_i2_reg_1609;
    end else if ((1'b1 == ap_CS_fsm_state175)) begin
        grp_fu_214_p0 = reg_770;
    end else if ((1'b1 == ap_CS_fsm_state141)) begin
        grp_fu_214_p0 = reg_788;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        grp_fu_214_p0 = reg_801;
    end else if (((1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state161))) begin
        grp_fu_214_p0 = reg_516;
    end else if (((1'b1 == ap_CS_fsm_state230) | (1'b1 == ap_CS_fsm_state131))) begin
        grp_fu_214_p0 = reg_465;
    end else if (((1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state166) | (1'b1 == ap_CS_fsm_state132))) begin
        grp_fu_214_p0 = reg_538;
    end else if (((1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state123))) begin
        grp_fu_214_p0 = p_2bx_reg_1558;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_214_p0 = reg_778;
    end else if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state87))) begin
        grp_fu_214_p0 = reg_755;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        grp_fu_214_p0 = q0_load_16_reg_1469;
    end else if (((1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state225))) begin
        grp_fu_214_p0 = reg_344;
    end else if (((1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state83))) begin
        grp_fu_214_p0 = reg_677;
    end else if (((1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state86))) begin
        grp_fu_214_p0 = reg_571;
    end else if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state79))) begin
        grp_fu_214_p0 = p_2q1_reg_1526;
    end else if (((1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state93))) begin
        grp_fu_214_p0 = reg_439;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        grp_fu_214_p0 = reg_396;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        grp_fu_214_p0 = tmp_1_i_reg_1463;
    end else if (((1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state128))) begin
        grp_fu_214_p0 = q1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        grp_fu_214_p0 = reg_670;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        grp_fu_214_p0 = reg_380;
    end else if (((1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state64))) begin
        grp_fu_214_p0 = reg_633;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state129))) begin
        grp_fu_214_p0 = q2;
    end else if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state139))) begin
        grp_fu_214_p0 = reg_474;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        grp_fu_214_p0 = reg_390;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_214_p0 = az;
    end else if (((1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state183) | (1'b1 == ap_CS_fsm_state179) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state72))) begin
        grp_fu_214_p0 = reg_424;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_214_p0 = ax;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_214_p0 = mz;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_214_p0 = mx;
    end else if (((1'b1 == ap_CS_fsm_state196) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state239) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state156))) begin
        grp_fu_214_p0 = reg_508;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_214_p0 = q3;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state260) | (1'b1 == ap_CS_fsm_state57))) begin
        grp_fu_214_p0 = q0;
    end else if (((1'b1 == ap_CS_fsm_state220) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_214_p0 = reg_353;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_214_p0 = tmp_s_fu_974_p1;
    end else begin
        grp_fu_214_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state260)) begin
        grp_fu_214_p1 = reg_404;
    end else if ((1'b1 == ap_CS_fsm_state247)) begin
        grp_fu_214_p1 = tmp_1_i3_reg_1640;
    end else if ((1'b1 == ap_CS_fsm_state243)) begin
        grp_fu_214_p1 = tmp_1_i3_fu_1317_p1;
    end else if ((1'b1 == ap_CS_fsm_state220)) begin
        grp_fu_214_p1 = q0;
    end else if (((1'b1 == ap_CS_fsm_state210) | (1'b1 == ap_CS_fsm_state209))) begin
        grp_fu_214_p1 = 32'd989855744;
    end else if (((1'b1 == ap_CS_fsm_state196) | (1'b1 == ap_CS_fsm_state200))) begin
        grp_fu_214_p1 = reg_424;
    end else if ((1'b1 == ap_CS_fsm_state192)) begin
        grp_fu_214_p1 = reg_770;
    end else if ((1'b1 == ap_CS_fsm_state183)) begin
        grp_fu_214_p1 = tmp_1_i2_reg_1609;
    end else if ((1'b1 == ap_CS_fsm_state179)) begin
        grp_fu_214_p1 = tmp_1_i2_fu_1265_p1;
    end else if ((1'b1 == ap_CS_fsm_state166)) begin
        grp_fu_214_p1 = reg_538;
    end else if ((1'b1 == ap_CS_fsm_state161)) begin
        grp_fu_214_p1 = reg_516;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        grp_fu_214_p1 = reg_526;
    end else if ((1'b1 == ap_CS_fsm_state139)) begin
        grp_fu_214_p1 = reg_817;
    end else if ((1'b1 == ap_CS_fsm_state132)) begin
        grp_fu_214_p1 = reg_344;
    end else if ((1'b1 == ap_CS_fsm_state131)) begin
        grp_fu_214_p1 = tmp_208_fu_1236_p1;
    end else if ((1'b1 == ap_CS_fsm_state129)) begin
        grp_fu_214_p1 = tmp_259_fu_1222_p1;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        grp_fu_214_p1 = 32'd1082130432;
    end else if (((1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state93))) begin
        grp_fu_214_p1 = reg_656;
    end else if (((1'b1 == ap_CS_fsm_state230) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state130))) begin
        grp_fu_214_p1 = q3;
    end else if (((1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state88))) begin
        grp_fu_214_p1 = reg_746;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_214_p1 = tmp_188_fu_1192_p1;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        grp_fu_214_p1 = q3_load_22_reg_1489;
    end else if (((1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state78))) begin
        grp_fu_214_p1 = reg_363;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        grp_fu_214_p1 = reg_623;
    end else if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state87))) begin
        grp_fu_214_p1 = reg_560;
    end else if (((1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state73))) begin
        grp_fu_214_p1 = reg_725;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        grp_fu_214_p1 = tmp_172_fu_1177_p1;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        grp_fu_214_p1 = reg_439;
    end else if (((1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state256) | (1'b1 == ap_CS_fsm_state123) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state156))) begin
        grp_fu_214_p1 = reg_508;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_214_p1 = reg_554;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        grp_fu_214_p1 = reg_492;
    end else if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state64))) begin
        grp_fu_214_p1 = reg_571;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        grp_fu_214_p1 = q1;
    end else if (((1'b1 == ap_CS_fsm_state225) | (1'b1 == ap_CS_fsm_state61))) begin
        grp_fu_214_p1 = q2;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        grp_fu_214_p1 = tmp_1_i_reg_1463;
    end else if (((1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state57))) begin
        grp_fu_214_p1 = 32'd1073741824;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_214_p1 = tmp_1_i_fu_1162_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_214_p1 = az;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_214_p1 = tmp_1_i5_fu_1134_p1;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state72))) begin
        grp_fu_214_p1 = ax;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_214_p1 = mz;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_214_p1 = mx;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state239) | (1'b1 == ap_CS_fsm_state175) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state34))) begin
        grp_fu_214_p1 = 32'd1056964608;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_214_p1 = gy;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3))) begin
        grp_fu_214_p1 = gz;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state1))) begin
        grp_fu_214_p1 = gx;
    end else begin
        grp_fu_214_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state220)) begin
        grp_fu_219_p0 = reg_380;
    end else if ((1'b1 == ap_CS_fsm_state210)) begin
        grp_fu_219_p0 = qDot5_reg_158;
    end else if ((1'b1 == ap_CS_fsm_state209)) begin
        grp_fu_219_p0 = ap_phi_mux_qDot8_phi_fu_141_p4;
    end else if ((1'b1 == ap_CS_fsm_state200)) begin
        grp_fu_219_p0 = beta_load_4_reg_1620;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        grp_fu_219_p0 = tmp_245_reg_1589;
    end else if ((1'b1 == ap_CS_fsm_state137)) begin
        grp_fu_219_p0 = reg_739;
    end else if ((1'b1 == ap_CS_fsm_state130)) begin
        grp_fu_219_p0 = reg_474;
    end else if (((1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state128))) begin
        grp_fu_219_p0 = p_2bx_reg_1558;
    end else if (((1'b1 == ap_CS_fsm_state129) | (1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state123) | (1'b1 == ap_CS_fsm_state139))) begin
        grp_fu_219_p0 = reg_538;
    end else if (((1'b1 == ap_CS_fsm_state196) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state156))) begin
        grp_fu_219_p0 = reg_526;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        grp_fu_219_p0 = reg_746;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        grp_fu_219_p0 = reg_725;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_219_p0 = p_2q1_reg_1526;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        grp_fu_219_p0 = reg_465;
    end else if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state83))) begin
        grp_fu_219_p0 = reg_560;
    end else if (((1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state73))) begin
        grp_fu_219_p0 = reg_633;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        grp_fu_219_p0 = reg_606;
    end else if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state66))) begin
        grp_fu_219_p0 = q0;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        grp_fu_219_p0 = reg_600;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        grp_fu_219_p0 = reg_581;
    end else if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state63))) begin
        grp_fu_219_p0 = reg_439;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_fu_219_p0 = tmp_1_i5_reg_1451;
    end else if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state132))) begin
        grp_fu_219_p0 = reg_424;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_219_p0 = ay;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_219_p0 = my;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_219_p0 = reg_516;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state260))) begin
        grp_fu_219_p0 = q1;
    end else if (((1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state1))) begin
        grp_fu_219_p0 = q2;
    end else begin
        grp_fu_219_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state260)) begin
        grp_fu_219_p1 = reg_404;
    end else if (((1'b1 == ap_CS_fsm_state210) | (1'b1 == ap_CS_fsm_state209))) begin
        grp_fu_219_p1 = 32'd989855744;
    end else if ((1'b1 == ap_CS_fsm_state196)) begin
        grp_fu_219_p1 = reg_424;
    end else if ((1'b1 == ap_CS_fsm_state139)) begin
        grp_fu_219_p1 = reg_817;
    end else if ((1'b1 == ap_CS_fsm_state137)) begin
        grp_fu_219_p1 = reg_508;
    end else if ((1'b1 == ap_CS_fsm_state131)) begin
        grp_fu_219_p1 = reg_380;
    end else if ((1'b1 == ap_CS_fsm_state129)) begin
        grp_fu_219_p1 = q0;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        grp_fu_219_p1 = reg_801;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        grp_fu_219_p1 = reg_656;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        grp_fu_219_p1 = reg_492;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_219_p1 = reg_538;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        grp_fu_219_p1 = reg_746;
    end else if (((1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state91))) begin
        grp_fu_219_p1 = 32'd1073741824;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        grp_fu_219_p1 = reg_725;
    end else if (((1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state73))) begin
        grp_fu_219_p1 = reg_615;
    end else if (((1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state220))) begin
        grp_fu_219_p1 = q1;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        grp_fu_219_p1 = q2;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_219_p1 = reg_594;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        grp_fu_219_p1 = reg_500;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        grp_fu_219_p1 = reg_649;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        grp_fu_219_p1 = reg_623;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        grp_fu_219_p1 = q3;
    end else if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state200))) begin
        grp_fu_219_p1 = reg_439;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_219_p1 = mx;
    end else if (((1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state156))) begin
        grp_fu_219_p1 = reg_526;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_219_p1 = tmp_1_i5_reg_1451;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state72))) begin
        grp_fu_219_p1 = ay;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_219_p1 = my;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_219_p1 = 32'd1056964608;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_219_p1 = gx;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_219_p1 = gz;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state1))) begin
        grp_fu_219_p1 = gy;
    end else begin
        grp_fu_219_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state260)) begin
        grp_fu_224_p0 = q2;
    end else if ((1'b1 == ap_CS_fsm_state200)) begin
        grp_fu_224_p0 = beta_load_5_reg_1625;
    end else if ((1'b1 == ap_CS_fsm_state196)) begin
        grp_fu_224_p0 = reg_516;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        grp_fu_224_p0 = reg_810;
    end else if ((1'b1 == ap_CS_fsm_state139)) begin
        grp_fu_224_p0 = reg_762;
    end else if (((1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state123))) begin
        grp_fu_224_p0 = p_2bx_reg_1558;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_224_p0 = reg_691;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        grp_fu_224_p0 = reg_633;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        grp_fu_224_p0 = q1q3_reg_1504;
    end else if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state72))) begin
        grp_fu_224_p0 = reg_424;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_224_p0 = reg_677;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        grp_fu_224_p0 = q1;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        grp_fu_224_p0 = reg_664;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        grp_fu_224_p0 = reg_606;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        grp_fu_224_p0 = reg_588;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_224_p0 = reg_439;
    end else if (((1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state132))) begin
        grp_fu_224_p0 = reg_538;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_224_p0 = q0;
    end else begin
        grp_fu_224_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state260)) begin
        grp_fu_224_p1 = reg_404;
    end else if ((1'b1 == ap_CS_fsm_state196)) begin
        grp_fu_224_p1 = reg_424;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        grp_fu_224_p1 = reg_526;
    end else if ((1'b1 == ap_CS_fsm_state139)) begin
        grp_fu_224_p1 = reg_817;
    end else if ((1'b1 == ap_CS_fsm_state132)) begin
        grp_fu_224_p1 = reg_492;
    end else if (((1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state128))) begin
        grp_fu_224_p1 = q0;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        grp_fu_224_p1 = reg_516;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_224_p1 = reg_778;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        grp_fu_224_p1 = q3;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        grp_fu_224_p1 = az;
    end else if (((1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state71))) begin
        grp_fu_224_p1 = 32'd1073741824;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        grp_fu_224_p1 = reg_363;
    end else if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state131))) begin
        grp_fu_224_p1 = q1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        grp_fu_224_p1 = q3_load_21_reg_1484;
    end else if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state200))) begin
        grp_fu_224_p1 = reg_560;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_224_p1 = my;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_224_p1 = 32'd1056964608;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_224_p1 = gy;
    end else begin
        grp_fu_224_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state260)) begin
        grp_fu_228_p0 = q3;
    end else if ((1'b1 == ap_CS_fsm_state200)) begin
        grp_fu_228_p0 = beta;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        grp_fu_228_p0 = tmp_284_reg_1594;
    end else if ((1'b1 == ap_CS_fsm_state132)) begin
        grp_fu_228_p0 = reg_623;
    end else if ((1'b1 == ap_CS_fsm_state130)) begin
        grp_fu_228_p0 = reg_474;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        grp_fu_228_p0 = q2;
    end else if (((1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state196) | (1'b1 == ap_CS_fsm_state123))) begin
        grp_fu_228_p0 = reg_538;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_228_p0 = reg_424;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        grp_fu_228_p0 = reg_615;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        grp_fu_228_p0 = reg_484;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        grp_fu_228_p0 = reg_353;
    end else if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state139))) begin
        grp_fu_228_p0 = reg_439;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_228_p0 = reg_526;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_228_p0 = q1;
    end else begin
        grp_fu_228_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state260)) begin
        grp_fu_228_p1 = reg_404;
    end else if ((1'b1 == ap_CS_fsm_state200)) begin
        grp_fu_228_p1 = reg_571;
    end else if ((1'b1 == ap_CS_fsm_state196)) begin
        grp_fu_228_p1 = reg_424;
    end else if ((1'b1 == ap_CS_fsm_state139)) begin
        grp_fu_228_p1 = reg_817;
    end else if (((1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state132))) begin
        grp_fu_228_p1 = reg_526;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        grp_fu_228_p1 = 32'd1082130432;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        grp_fu_228_p1 = reg_762;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_228_p1 = reg_538;
    end else if (((1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state66))) begin
        grp_fu_228_p1 = q2;
    end else if (((1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state63))) begin
        grp_fu_228_p1 = q3;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        grp_fu_228_p1 = q0;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_228_p1 = mz;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_228_p1 = 32'd1056964608;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_228_p1 = gz;
    end else begin
        grp_fu_228_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state132)) begin
        grp_fu_236_p0 = q3;
    end else if ((1'b1 == ap_CS_fsm_state131)) begin
        grp_fu_236_p0 = q0;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        grp_fu_236_p0 = p_2bx_reg_1558;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_236_p0 = reg_778;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        grp_fu_236_p0 = reg_560;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_236_p0 = reg_353;
    end else begin
        grp_fu_236_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state132)) begin
        grp_fu_236_p1 = tmp_259_reg_1567;
    end else if ((1'b1 == ap_CS_fsm_state131)) begin
        grp_fu_236_p1 = tmp_208_fu_1236_p1;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        grp_fu_236_p1 = reg_810;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_236_p1 = tmp_252_fu_1207_p1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        grp_fu_236_p1 = reg_623;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_236_p1 = 32'd1073741824;
    end else begin
        grp_fu_236_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state123) | (1'b1 == ap_CS_fsm_state132))) begin
        grp_fu_241_p0 = reg_538;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_241_p0 = reg_691;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_241_p0 = reg_370;
    end else begin
        grp_fu_241_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state132)) begin
        grp_fu_241_p1 = q1;
    end else if ((1'b1 == ap_CS_fsm_state131)) begin
        grp_fu_241_p1 = q2;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        grp_fu_241_p1 = tmp_224_reg_1553;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_241_p1 = reg_538;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_241_p1 = 32'd1073741824;
    end else begin
        grp_fu_241_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_265_p0 = ax;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_265_p0 = mx;
    end else begin
        grp_fu_265_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_271_p0 = ay;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_271_p0 = my;
    end else begin
        grp_fu_271_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_277_p0 = az;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_277_p0 = mz;
    end else begin
        grp_fu_277_p0 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((or_cond1_fu_958_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state264;
            end else if (((or_cond1_fu_958_p2 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (or_cond3_fu_1105_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state209;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            ap_NS_fsm = ap_ST_fsm_state151;
        end
        ap_ST_fsm_state151 : begin
            ap_NS_fsm = ap_ST_fsm_state152;
        end
        ap_ST_fsm_state152 : begin
            ap_NS_fsm = ap_ST_fsm_state153;
        end
        ap_ST_fsm_state153 : begin
            ap_NS_fsm = ap_ST_fsm_state154;
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_state155;
        end
        ap_ST_fsm_state155 : begin
            ap_NS_fsm = ap_ST_fsm_state156;
        end
        ap_ST_fsm_state156 : begin
            ap_NS_fsm = ap_ST_fsm_state157;
        end
        ap_ST_fsm_state157 : begin
            ap_NS_fsm = ap_ST_fsm_state158;
        end
        ap_ST_fsm_state158 : begin
            ap_NS_fsm = ap_ST_fsm_state159;
        end
        ap_ST_fsm_state159 : begin
            ap_NS_fsm = ap_ST_fsm_state160;
        end
        ap_ST_fsm_state160 : begin
            ap_NS_fsm = ap_ST_fsm_state161;
        end
        ap_ST_fsm_state161 : begin
            ap_NS_fsm = ap_ST_fsm_state162;
        end
        ap_ST_fsm_state162 : begin
            ap_NS_fsm = ap_ST_fsm_state163;
        end
        ap_ST_fsm_state163 : begin
            ap_NS_fsm = ap_ST_fsm_state164;
        end
        ap_ST_fsm_state164 : begin
            ap_NS_fsm = ap_ST_fsm_state165;
        end
        ap_ST_fsm_state165 : begin
            ap_NS_fsm = ap_ST_fsm_state166;
        end
        ap_ST_fsm_state166 : begin
            ap_NS_fsm = ap_ST_fsm_state167;
        end
        ap_ST_fsm_state167 : begin
            ap_NS_fsm = ap_ST_fsm_state168;
        end
        ap_ST_fsm_state168 : begin
            ap_NS_fsm = ap_ST_fsm_state169;
        end
        ap_ST_fsm_state169 : begin
            ap_NS_fsm = ap_ST_fsm_state170;
        end
        ap_ST_fsm_state170 : begin
            ap_NS_fsm = ap_ST_fsm_state171;
        end
        ap_ST_fsm_state171 : begin
            ap_NS_fsm = ap_ST_fsm_state172;
        end
        ap_ST_fsm_state172 : begin
            ap_NS_fsm = ap_ST_fsm_state173;
        end
        ap_ST_fsm_state173 : begin
            ap_NS_fsm = ap_ST_fsm_state174;
        end
        ap_ST_fsm_state174 : begin
            ap_NS_fsm = ap_ST_fsm_state175;
        end
        ap_ST_fsm_state175 : begin
            ap_NS_fsm = ap_ST_fsm_state176;
        end
        ap_ST_fsm_state176 : begin
            ap_NS_fsm = ap_ST_fsm_state177;
        end
        ap_ST_fsm_state177 : begin
            ap_NS_fsm = ap_ST_fsm_state178;
        end
        ap_ST_fsm_state178 : begin
            ap_NS_fsm = ap_ST_fsm_state179;
        end
        ap_ST_fsm_state179 : begin
            ap_NS_fsm = ap_ST_fsm_state180;
        end
        ap_ST_fsm_state180 : begin
            ap_NS_fsm = ap_ST_fsm_state181;
        end
        ap_ST_fsm_state181 : begin
            ap_NS_fsm = ap_ST_fsm_state182;
        end
        ap_ST_fsm_state182 : begin
            ap_NS_fsm = ap_ST_fsm_state183;
        end
        ap_ST_fsm_state183 : begin
            ap_NS_fsm = ap_ST_fsm_state184;
        end
        ap_ST_fsm_state184 : begin
            ap_NS_fsm = ap_ST_fsm_state185;
        end
        ap_ST_fsm_state185 : begin
            ap_NS_fsm = ap_ST_fsm_state186;
        end
        ap_ST_fsm_state186 : begin
            ap_NS_fsm = ap_ST_fsm_state187;
        end
        ap_ST_fsm_state187 : begin
            ap_NS_fsm = ap_ST_fsm_state188;
        end
        ap_ST_fsm_state188 : begin
            ap_NS_fsm = ap_ST_fsm_state189;
        end
        ap_ST_fsm_state189 : begin
            ap_NS_fsm = ap_ST_fsm_state190;
        end
        ap_ST_fsm_state190 : begin
            ap_NS_fsm = ap_ST_fsm_state191;
        end
        ap_ST_fsm_state191 : begin
            ap_NS_fsm = ap_ST_fsm_state192;
        end
        ap_ST_fsm_state192 : begin
            ap_NS_fsm = ap_ST_fsm_state193;
        end
        ap_ST_fsm_state193 : begin
            ap_NS_fsm = ap_ST_fsm_state194;
        end
        ap_ST_fsm_state194 : begin
            ap_NS_fsm = ap_ST_fsm_state195;
        end
        ap_ST_fsm_state195 : begin
            ap_NS_fsm = ap_ST_fsm_state196;
        end
        ap_ST_fsm_state196 : begin
            ap_NS_fsm = ap_ST_fsm_state197;
        end
        ap_ST_fsm_state197 : begin
            ap_NS_fsm = ap_ST_fsm_state198;
        end
        ap_ST_fsm_state198 : begin
            ap_NS_fsm = ap_ST_fsm_state199;
        end
        ap_ST_fsm_state199 : begin
            ap_NS_fsm = ap_ST_fsm_state200;
        end
        ap_ST_fsm_state200 : begin
            ap_NS_fsm = ap_ST_fsm_state201;
        end
        ap_ST_fsm_state201 : begin
            ap_NS_fsm = ap_ST_fsm_state202;
        end
        ap_ST_fsm_state202 : begin
            ap_NS_fsm = ap_ST_fsm_state203;
        end
        ap_ST_fsm_state203 : begin
            ap_NS_fsm = ap_ST_fsm_state204;
        end
        ap_ST_fsm_state204 : begin
            ap_NS_fsm = ap_ST_fsm_state205;
        end
        ap_ST_fsm_state205 : begin
            ap_NS_fsm = ap_ST_fsm_state206;
        end
        ap_ST_fsm_state206 : begin
            ap_NS_fsm = ap_ST_fsm_state207;
        end
        ap_ST_fsm_state207 : begin
            ap_NS_fsm = ap_ST_fsm_state208;
        end
        ap_ST_fsm_state208 : begin
            ap_NS_fsm = ap_ST_fsm_state209;
        end
        ap_ST_fsm_state209 : begin
            ap_NS_fsm = ap_ST_fsm_state210;
        end
        ap_ST_fsm_state210 : begin
            ap_NS_fsm = ap_ST_fsm_state211;
        end
        ap_ST_fsm_state211 : begin
            ap_NS_fsm = ap_ST_fsm_state212;
        end
        ap_ST_fsm_state212 : begin
            ap_NS_fsm = ap_ST_fsm_state213;
        end
        ap_ST_fsm_state213 : begin
            ap_NS_fsm = ap_ST_fsm_state214;
        end
        ap_ST_fsm_state214 : begin
            ap_NS_fsm = ap_ST_fsm_state215;
        end
        ap_ST_fsm_state215 : begin
            ap_NS_fsm = ap_ST_fsm_state216;
        end
        ap_ST_fsm_state216 : begin
            ap_NS_fsm = ap_ST_fsm_state217;
        end
        ap_ST_fsm_state217 : begin
            ap_NS_fsm = ap_ST_fsm_state218;
        end
        ap_ST_fsm_state218 : begin
            ap_NS_fsm = ap_ST_fsm_state219;
        end
        ap_ST_fsm_state219 : begin
            ap_NS_fsm = ap_ST_fsm_state220;
        end
        ap_ST_fsm_state220 : begin
            ap_NS_fsm = ap_ST_fsm_state221;
        end
        ap_ST_fsm_state221 : begin
            ap_NS_fsm = ap_ST_fsm_state222;
        end
        ap_ST_fsm_state222 : begin
            ap_NS_fsm = ap_ST_fsm_state223;
        end
        ap_ST_fsm_state223 : begin
            ap_NS_fsm = ap_ST_fsm_state224;
        end
        ap_ST_fsm_state224 : begin
            ap_NS_fsm = ap_ST_fsm_state225;
        end
        ap_ST_fsm_state225 : begin
            ap_NS_fsm = ap_ST_fsm_state226;
        end
        ap_ST_fsm_state226 : begin
            ap_NS_fsm = ap_ST_fsm_state227;
        end
        ap_ST_fsm_state227 : begin
            ap_NS_fsm = ap_ST_fsm_state228;
        end
        ap_ST_fsm_state228 : begin
            ap_NS_fsm = ap_ST_fsm_state229;
        end
        ap_ST_fsm_state229 : begin
            ap_NS_fsm = ap_ST_fsm_state230;
        end
        ap_ST_fsm_state230 : begin
            ap_NS_fsm = ap_ST_fsm_state231;
        end
        ap_ST_fsm_state231 : begin
            ap_NS_fsm = ap_ST_fsm_state232;
        end
        ap_ST_fsm_state232 : begin
            ap_NS_fsm = ap_ST_fsm_state233;
        end
        ap_ST_fsm_state233 : begin
            ap_NS_fsm = ap_ST_fsm_state234;
        end
        ap_ST_fsm_state234 : begin
            ap_NS_fsm = ap_ST_fsm_state235;
        end
        ap_ST_fsm_state235 : begin
            ap_NS_fsm = ap_ST_fsm_state236;
        end
        ap_ST_fsm_state236 : begin
            ap_NS_fsm = ap_ST_fsm_state237;
        end
        ap_ST_fsm_state237 : begin
            ap_NS_fsm = ap_ST_fsm_state238;
        end
        ap_ST_fsm_state238 : begin
            ap_NS_fsm = ap_ST_fsm_state239;
        end
        ap_ST_fsm_state239 : begin
            ap_NS_fsm = ap_ST_fsm_state240;
        end
        ap_ST_fsm_state240 : begin
            ap_NS_fsm = ap_ST_fsm_state241;
        end
        ap_ST_fsm_state241 : begin
            ap_NS_fsm = ap_ST_fsm_state242;
        end
        ap_ST_fsm_state242 : begin
            ap_NS_fsm = ap_ST_fsm_state243;
        end
        ap_ST_fsm_state243 : begin
            ap_NS_fsm = ap_ST_fsm_state244;
        end
        ap_ST_fsm_state244 : begin
            ap_NS_fsm = ap_ST_fsm_state245;
        end
        ap_ST_fsm_state245 : begin
            ap_NS_fsm = ap_ST_fsm_state246;
        end
        ap_ST_fsm_state246 : begin
            ap_NS_fsm = ap_ST_fsm_state247;
        end
        ap_ST_fsm_state247 : begin
            ap_NS_fsm = ap_ST_fsm_state248;
        end
        ap_ST_fsm_state248 : begin
            ap_NS_fsm = ap_ST_fsm_state249;
        end
        ap_ST_fsm_state249 : begin
            ap_NS_fsm = ap_ST_fsm_state250;
        end
        ap_ST_fsm_state250 : begin
            ap_NS_fsm = ap_ST_fsm_state251;
        end
        ap_ST_fsm_state251 : begin
            ap_NS_fsm = ap_ST_fsm_state252;
        end
        ap_ST_fsm_state252 : begin
            ap_NS_fsm = ap_ST_fsm_state253;
        end
        ap_ST_fsm_state253 : begin
            ap_NS_fsm = ap_ST_fsm_state254;
        end
        ap_ST_fsm_state254 : begin
            ap_NS_fsm = ap_ST_fsm_state255;
        end
        ap_ST_fsm_state255 : begin
            ap_NS_fsm = ap_ST_fsm_state256;
        end
        ap_ST_fsm_state256 : begin
            ap_NS_fsm = ap_ST_fsm_state257;
        end
        ap_ST_fsm_state257 : begin
            ap_NS_fsm = ap_ST_fsm_state258;
        end
        ap_ST_fsm_state258 : begin
            ap_NS_fsm = ap_ST_fsm_state259;
        end
        ap_ST_fsm_state259 : begin
            ap_NS_fsm = ap_ST_fsm_state260;
        end
        ap_ST_fsm_state260 : begin
            ap_NS_fsm = ap_ST_fsm_state261;
        end
        ap_ST_fsm_state261 : begin
            ap_NS_fsm = ap_ST_fsm_state262;
        end
        ap_ST_fsm_state262 : begin
            ap_NS_fsm = ap_ST_fsm_state263;
        end
        ap_ST_fsm_state263 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state264 : begin
            if (((1'b1 == ap_CS_fsm_state264) & (grp_MadgwickAHRSupdateIM_fu_168_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state263;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state264;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state118 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state122 = ap_CS_fsm[32'd121];

assign ap_CS_fsm_state123 = ap_CS_fsm[32'd122];

assign ap_CS_fsm_state125 = ap_CS_fsm[32'd124];

assign ap_CS_fsm_state126 = ap_CS_fsm[32'd125];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd126];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd127];

assign ap_CS_fsm_state129 = ap_CS_fsm[32'd128];

assign ap_CS_fsm_state130 = ap_CS_fsm[32'd129];

assign ap_CS_fsm_state131 = ap_CS_fsm[32'd130];

assign ap_CS_fsm_state132 = ap_CS_fsm[32'd131];

assign ap_CS_fsm_state133 = ap_CS_fsm[32'd132];

assign ap_CS_fsm_state134 = ap_CS_fsm[32'd133];

assign ap_CS_fsm_state135 = ap_CS_fsm[32'd134];

assign ap_CS_fsm_state136 = ap_CS_fsm[32'd135];

assign ap_CS_fsm_state137 = ap_CS_fsm[32'd136];

assign ap_CS_fsm_state138 = ap_CS_fsm[32'd137];

assign ap_CS_fsm_state139 = ap_CS_fsm[32'd138];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state140 = ap_CS_fsm[32'd139];

assign ap_CS_fsm_state141 = ap_CS_fsm[32'd140];

assign ap_CS_fsm_state142 = ap_CS_fsm[32'd141];

assign ap_CS_fsm_state143 = ap_CS_fsm[32'd142];

assign ap_CS_fsm_state144 = ap_CS_fsm[32'd143];

assign ap_CS_fsm_state145 = ap_CS_fsm[32'd144];

assign ap_CS_fsm_state146 = ap_CS_fsm[32'd145];

assign ap_CS_fsm_state147 = ap_CS_fsm[32'd146];

assign ap_CS_fsm_state149 = ap_CS_fsm[32'd148];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state150 = ap_CS_fsm[32'd149];

assign ap_CS_fsm_state151 = ap_CS_fsm[32'd150];

assign ap_CS_fsm_state152 = ap_CS_fsm[32'd151];

assign ap_CS_fsm_state154 = ap_CS_fsm[32'd153];

assign ap_CS_fsm_state155 = ap_CS_fsm[32'd154];

assign ap_CS_fsm_state156 = ap_CS_fsm[32'd155];

assign ap_CS_fsm_state159 = ap_CS_fsm[32'd158];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state160 = ap_CS_fsm[32'd159];

assign ap_CS_fsm_state161 = ap_CS_fsm[32'd160];

assign ap_CS_fsm_state164 = ap_CS_fsm[32'd163];

assign ap_CS_fsm_state165 = ap_CS_fsm[32'd164];

assign ap_CS_fsm_state166 = ap_CS_fsm[32'd165];

assign ap_CS_fsm_state169 = ap_CS_fsm[32'd168];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state170 = ap_CS_fsm[32'd169];

assign ap_CS_fsm_state174 = ap_CS_fsm[32'd173];

assign ap_CS_fsm_state175 = ap_CS_fsm[32'd174];

assign ap_CS_fsm_state178 = ap_CS_fsm[32'd177];

assign ap_CS_fsm_state179 = ap_CS_fsm[32'd178];

assign ap_CS_fsm_state182 = ap_CS_fsm[32'd181];

assign ap_CS_fsm_state183 = ap_CS_fsm[32'd182];

assign ap_CS_fsm_state186 = ap_CS_fsm[32'd185];

assign ap_CS_fsm_state187 = ap_CS_fsm[32'd186];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state191 = ap_CS_fsm[32'd190];

assign ap_CS_fsm_state192 = ap_CS_fsm[32'd191];

assign ap_CS_fsm_state195 = ap_CS_fsm[32'd194];

assign ap_CS_fsm_state196 = ap_CS_fsm[32'd195];

assign ap_CS_fsm_state197 = ap_CS_fsm[32'd196];

assign ap_CS_fsm_state198 = ap_CS_fsm[32'd197];

assign ap_CS_fsm_state199 = ap_CS_fsm[32'd198];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state200 = ap_CS_fsm[32'd199];

assign ap_CS_fsm_state203 = ap_CS_fsm[32'd202];

assign ap_CS_fsm_state204 = ap_CS_fsm[32'd203];

assign ap_CS_fsm_state208 = ap_CS_fsm[32'd207];

assign ap_CS_fsm_state209 = ap_CS_fsm[32'd208];

assign ap_CS_fsm_state210 = ap_CS_fsm[32'd209];

assign ap_CS_fsm_state212 = ap_CS_fsm[32'd211];

assign ap_CS_fsm_state213 = ap_CS_fsm[32'd212];

assign ap_CS_fsm_state214 = ap_CS_fsm[32'd213];

assign ap_CS_fsm_state217 = ap_CS_fsm[32'd216];

assign ap_CS_fsm_state218 = ap_CS_fsm[32'd217];

assign ap_CS_fsm_state219 = ap_CS_fsm[32'd218];

assign ap_CS_fsm_state220 = ap_CS_fsm[32'd219];

assign ap_CS_fsm_state223 = ap_CS_fsm[32'd222];

assign ap_CS_fsm_state224 = ap_CS_fsm[32'd223];

assign ap_CS_fsm_state225 = ap_CS_fsm[32'd224];

assign ap_CS_fsm_state228 = ap_CS_fsm[32'd227];

assign ap_CS_fsm_state229 = ap_CS_fsm[32'd228];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state230 = ap_CS_fsm[32'd229];

assign ap_CS_fsm_state233 = ap_CS_fsm[32'd232];

assign ap_CS_fsm_state234 = ap_CS_fsm[32'd233];

assign ap_CS_fsm_state238 = ap_CS_fsm[32'd237];

assign ap_CS_fsm_state239 = ap_CS_fsm[32'd238];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state242 = ap_CS_fsm[32'd241];

assign ap_CS_fsm_state243 = ap_CS_fsm[32'd242];

assign ap_CS_fsm_state246 = ap_CS_fsm[32'd245];

assign ap_CS_fsm_state247 = ap_CS_fsm[32'd246];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state250 = ap_CS_fsm[32'd249];

assign ap_CS_fsm_state251 = ap_CS_fsm[32'd250];

assign ap_CS_fsm_state255 = ap_CS_fsm[32'd254];

assign ap_CS_fsm_state256 = ap_CS_fsm[32'd255];

assign ap_CS_fsm_state259 = ap_CS_fsm[32'd258];

assign ap_CS_fsm_state260 = ap_CS_fsm[32'd259];

assign ap_CS_fsm_state263 = ap_CS_fsm[32'd262];

assign ap_CS_fsm_state264 = ap_CS_fsm[32'd263];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd98];

assign ax_to_int_fu_979_p1 = ax;

assign ay_to_int_fu_1019_p1 = ay;

assign az_to_int_fu_1059_p1 = az;

assign grp_MadgwickAHRSupdateIM_fu_168_ap_start = ap_reg_grp_MadgwickAHRSupdateIM_fu_168_ap_start;

assign mx_to_int_fu_826_p1 = mx;

assign my_to_int_fu_868_p1 = my;

assign mz_to_int_fu_910_p1 = mz;

assign notlhs1_fu_928_p2 = ((tmp_321_fu_914_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs2_fu_996_p2 = ((tmp_326_fu_982_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs3_fu_1036_p2 = ((tmp_331_fu_1022_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs4_fu_1076_p2 = ((tmp_336_fu_1062_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs8_fu_886_p2 = ((tmp_133_fu_872_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs_fu_844_p2 = ((tmp_fu_830_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notrhs1_fu_934_p2 = ((tmp_322_fu_924_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs2_fu_1002_p2 = ((tmp_327_fu_992_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs3_fu_1042_p2 = ((tmp_332_fu_1032_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs4_fu_1082_p2 = ((tmp_337_fu_1072_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs9_fu_892_p2 = ((tmp_297_fu_882_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs_fu_850_p2 = ((tmp_121_fu_840_p1 == 23'd0) ? 1'b1 : 1'b0);

assign or_cond1_fu_958_p2 = (tmp_128_fu_862_p2 & tmp1_fu_952_p2);

assign or_cond3_fu_1105_p2 = (tmp_330_fu_1014_p2 & tmp2_fu_1099_p2);

assign tmp1_fu_952_p2 = (tmp_325_fu_946_p2 & tmp_320_fu_904_p2);

assign tmp2_fu_1099_p2 = (tmp_340_fu_1094_p2 & tmp_335_fu_1054_p2);

assign tmp_100_neg_fu_968_p2 = (tmp_100_to_int_fu_964_p1 ^ 32'd2147483648);

assign tmp_100_to_int_fu_964_p1 = q1;

assign tmp_121_fu_840_p1 = mx_to_int_fu_826_p1[22:0];

assign tmp_122_fu_856_p2 = (notrhs_fu_850_p2 | notlhs_fu_844_p2);

assign tmp_128_fu_862_p2 = (tmp_122_fu_856_p2 & grp_fu_265_p2);

assign tmp_133_fu_872_p4 = {{my_to_int_fu_868_p1[30:23]}};

assign tmp_172_fu_1177_p1 = tmp_174_neg_fu_1171_p2;

assign tmp_174_neg_fu_1171_p2 = (tmp_174_to_int_fu_1167_p1 ^ 32'd2147483648);

assign tmp_174_to_int_fu_1167_p1 = reg_484;

assign tmp_188_fu_1192_p1 = tmp_190_neg_fu_1186_p2;

assign tmp_190_neg_fu_1186_p2 = (tmp_190_to_int_fu_1182_p1 ^ 32'd2147483648);

assign tmp_190_to_int_fu_1182_p1 = reg_755;

assign tmp_1_i2_fu_1265_p1 = y_10_fu_1259_p2;

assign tmp_1_i3_fu_1317_p1 = y_12_fu_1311_p2;

assign tmp_1_i5_fu_1134_p1 = y_8_fu_1128_p2;

assign tmp_1_i_fu_1162_p1 = y_6_fu_1156_p2;

assign tmp_208_fu_1236_p1 = tmp_210_neg_fu_1230_p2;

assign tmp_210_neg_fu_1230_p2 = (tmp_210_to_int_fu_1227_p1 ^ 32'd2147483648);

assign tmp_210_to_int_fu_1227_p1 = p_2bx_reg_1558;

assign tmp_252_fu_1207_p1 = tmp_254_neg_fu_1201_p2;

assign tmp_254_neg_fu_1201_p2 = (tmp_254_to_int_fu_1197_p1 ^ 32'd2147483648);

assign tmp_254_to_int_fu_1197_p1 = reg_424;

assign tmp_259_fu_1222_p1 = tmp_261_neg_fu_1216_p2;

assign tmp_261_neg_fu_1216_p2 = (tmp_261_to_int_fu_1212_p1 ^ 32'd2147483648);

assign tmp_261_to_int_fu_1212_p1 = reg_474;

assign tmp_297_fu_882_p1 = my_to_int_fu_868_p1[22:0];

assign tmp_316_fu_898_p2 = (notrhs9_fu_892_p2 | notlhs8_fu_886_p2);

assign tmp_320_fu_904_p2 = (tmp_316_fu_898_p2 & grp_fu_271_p2);

assign tmp_321_fu_914_p4 = {{mz_to_int_fu_910_p1[30:23]}};

assign tmp_322_fu_924_p1 = mz_to_int_fu_910_p1[22:0];

assign tmp_323_fu_940_p2 = (notrhs1_fu_934_p2 | notlhs1_fu_928_p2);

assign tmp_325_fu_946_p2 = (tmp_323_fu_940_p2 & grp_fu_277_p2);

assign tmp_326_fu_982_p4 = {{ax_to_int_fu_979_p1[30:23]}};

assign tmp_327_fu_992_p1 = ax_to_int_fu_979_p1[22:0];

assign tmp_328_fu_1008_p2 = (notrhs2_fu_1002_p2 | notlhs2_fu_996_p2);

assign tmp_330_fu_1014_p2 = (tmp_329_reg_1427 & tmp_328_fu_1008_p2);

assign tmp_331_fu_1022_p4 = {{ay_to_int_fu_1019_p1[30:23]}};

assign tmp_332_fu_1032_p1 = ay_to_int_fu_1019_p1[22:0];

assign tmp_333_fu_1048_p2 = (notrhs3_fu_1042_p2 | notlhs3_fu_1036_p2);

assign tmp_335_fu_1054_p2 = (tmp_334_reg_1432 & tmp_333_fu_1048_p2);

assign tmp_336_fu_1062_p4 = {{az_to_int_fu_1059_p1[30:23]}};

assign tmp_337_fu_1072_p1 = az_to_int_fu_1059_p1[22:0];

assign tmp_338_fu_1088_p2 = (notrhs4_fu_1082_p2 | notlhs4_fu_1076_p2);

assign tmp_340_fu_1094_p2 = (tmp_339_reg_1437 & tmp_338_fu_1088_p2);

assign tmp_341_fu_1153_p1 = tmp_i_reg_1458;

assign tmp_342_fu_1125_p1 = tmp_i3_reg_1446;

assign tmp_343_fu_1256_p1 = tmp_i2_reg_1604;

assign tmp_344_fu_1308_p1 = tmp_i4_reg_1635;

assign tmp_fu_830_p4 = {{mx_to_int_fu_826_p1[30:23]}};

assign tmp_s_fu_974_p1 = tmp_100_neg_fu_968_p2;

assign y_10_fu_1259_p2 = (32'd1597463007 - tmp_343_fu_1256_p1);

assign y_11_fu_1294_p1 = reg_508;

assign y_12_fu_1311_p2 = (32'd1597463007 - tmp_344_fu_1308_p1);

assign y_6_fu_1156_p2 = (32'd1597463007 - tmp_341_fu_1153_p1);

assign y_7_fu_1111_p1 = reg_508;

assign y_8_fu_1128_p2 = (32'd1597463007 - tmp_342_fu_1125_p1);

assign y_9_fu_1242_p1 = reg_770;

assign y_fu_1139_p1 = reg_508;

always @ (posedge ap_clk) begin
    beta_load_reg_1615[31:0] <= 32'b00111101110011001100110011001101;
    beta_load_4_reg_1620[31:0] <= 32'b00111101110011001100110011001101;
    beta_load_5_reg_1625[31:0] <= 32'b00111101110011001100110011001101;
end

endmodule //MadgwickAHRSupdate
