-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.3.1
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity MadgwickAHRSupdate is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    gx : IN STD_LOGIC_VECTOR (31 downto 0);
    gy : IN STD_LOGIC_VECTOR (31 downto 0);
    gz : IN STD_LOGIC_VECTOR (31 downto 0);
    ax : IN STD_LOGIC_VECTOR (31 downto 0);
    ay : IN STD_LOGIC_VECTOR (31 downto 0);
    az : IN STD_LOGIC_VECTOR (31 downto 0);
    mx : IN STD_LOGIC_VECTOR (31 downto 0);
    my : IN STD_LOGIC_VECTOR (31 downto 0);
    mz : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of MadgwickAHRSupdate is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "MadgwickAHRSupdate,hls_ip_2017_3_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=10.541500,HLS_SYN_LAT=155,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=64,HLS_SYN_FF=10001,HLS_SYN_LUT=16499}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state86 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state87 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state88 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state89 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state90 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state91 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state92 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state93 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state94 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state95 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state96 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state97 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state98 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state99 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state100 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state101 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state102 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state103 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state104 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state105 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state106 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state107 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state108 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state109 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state110 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state111 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state112 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state113 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state114 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state115 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state116 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state117 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state118 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state119 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state120 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state121 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state122 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state123 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state124 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state125 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state126 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state127 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state128 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state129 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state130 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state131 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state132 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state133 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state134 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state135 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state136 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state137 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state138 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state139 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state140 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state141 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state142 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state143 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state144 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state145 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state146 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state147 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state148 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state149 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state150 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state151 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state152 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state153 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state154 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state155 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state156 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state157 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state158 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state159 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state160 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state161 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state162 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state163 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state164 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state165 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state166 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state167 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state168 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state169 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state170 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state171 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state172 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state173 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state174 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state175 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state176 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state177 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state178 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state179 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state180 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state181 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state182 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state183 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state184 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state185 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state186 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state187 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state188 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state189 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state190 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state191 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state192 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state193 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state194 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state195 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state196 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state197 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state198 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state199 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state200 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state201 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state202 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state203 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state204 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state205 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state206 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state207 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state208 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state209 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state210 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state211 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state212 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state213 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state214 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state215 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state216 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state217 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state218 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state219 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state220 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state221 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state222 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state223 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state224 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state225 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state226 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state227 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state228 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state229 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state230 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state231 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state232 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state233 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state234 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state235 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state236 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state237 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state238 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state239 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state240 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state241 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state242 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state243 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state244 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state245 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state246 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state247 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state248 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state249 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state250 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state251 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state252 : STD_LOGIC_VECTOR (263 downto 0) := "000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state253 : STD_LOGIC_VECTOR (263 downto 0) := "000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state254 : STD_LOGIC_VECTOR (263 downto 0) := "000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state255 : STD_LOGIC_VECTOR (263 downto 0) := "000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state256 : STD_LOGIC_VECTOR (263 downto 0) := "000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state257 : STD_LOGIC_VECTOR (263 downto 0) := "000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state258 : STD_LOGIC_VECTOR (263 downto 0) := "000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state259 : STD_LOGIC_VECTOR (263 downto 0) := "000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state260 : STD_LOGIC_VECTOR (263 downto 0) := "000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state261 : STD_LOGIC_VECTOR (263 downto 0) := "000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state262 : STD_LOGIC_VECTOR (263 downto 0) := "001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state263 : STD_LOGIC_VECTOR (263 downto 0) := "010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state264 : STD_LOGIC_VECTOR (263 downto 0) := "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_7C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111100";
    constant ap_const_lv32_D5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010101";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_103 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_82 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000010";
    constant ap_const_lv32_D4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010100";
    constant ap_const_lv32_DA : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_7D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111101";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_DB : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011011";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_7E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111110";
    constant ap_const_lv32_86 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_81 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000001";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_D3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010011";
    constant ap_const_lv32_DE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011110";
    constant ap_const_lv32_E3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100011";
    constant ap_const_lv32_E8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101000";
    constant ap_const_lv32_F1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110001";
    constant ap_const_lv32_F5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110101";
    constant ap_const_lv32_F9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111001";
    constant ap_const_lv32_102 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000010";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_5D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011101";
    constant ap_const_lv32_62 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100010";
    constant ap_const_lv32_67 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100111";
    constant ap_const_lv32_8B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001011";
    constant ap_const_lv32_9E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011110";
    constant ap_const_lv32_A3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100011";
    constant ap_const_lv32_A8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101000";
    constant ap_const_lv32_B1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110001";
    constant ap_const_lv32_B5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110101";
    constant ap_const_lv32_B9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111001";
    constant ap_const_lv32_C2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000010";
    constant ap_const_lv32_C6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000110";
    constant ap_const_lv32_CA : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001010";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_89 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001001";
    constant ap_const_lv32_8D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001101";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_5A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011010";
    constant ap_const_lv32_E4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100100";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010101";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv32_84 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000100";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_E5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100101";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_64 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100100";
    constant ap_const_lv32_87 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000111";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_95 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010101";
    constant ap_const_lv32_9A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011010";
    constant ap_const_lv32_D8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011000";
    constant ap_const_lv32_D9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011001";
    constant ap_const_lv32_ED : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101101";
    constant ap_const_lv32_FE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111110";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_88 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001000";
    constant ap_const_lv32_91 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010001";
    constant ap_const_lv32_96 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010110";
    constant ap_const_lv32_9B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_6C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101100";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_94 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010100";
    constant ap_const_lv32_99 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011001";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_85 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000101";
    constant ap_const_lv32_83 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000011";
    constant ap_const_lv32_8E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001110";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010110";
    constant ap_const_lv32_8C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001100";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010001";
    constant ap_const_lv32_59 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011001";
    constant ap_const_lv32_8F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001111";
    constant ap_const_lv32_52 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010010";
    constant ap_const_lv32_CF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001111";
    constant ap_const_lv32_5C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011100";
    constant ap_const_lv32_AD : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101101";
    constant ap_const_lv32_BE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111110";
    constant ap_const_lv32_5E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011110";
    constant ap_const_lv32_63 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100011";
    constant ap_const_lv32_6D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101101";
    constant ap_const_lv32_79 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111001";
    constant ap_const_lv32_8A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001010";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010100";
    constant ap_const_lv32_AE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101110";
    constant ap_const_lv32_B2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110010";
    constant ap_const_lv32_C4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000100";
    constant ap_const_lv32_C5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000101";
    constant ap_const_lv32_C7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000111";
    constant ap_const_lv32_EE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101110";
    constant ap_const_lv32_F2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110010";
    constant ap_const_lv32_D0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_107 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000111";
    constant ap_const_lv32_106 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000110";
    constant ap_const_lv32_3FC00000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111110000000000000000000000";
    constant ap_const_lv32_3F000000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111000000000000000000000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_5B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011011";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_69 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101001";
    constant ap_const_lv32_75 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110101";
    constant ap_const_lv32_92 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010010";
    constant ap_const_lv32_97 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010111";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100100";
    constant ap_const_lv32_A9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101001";
    constant ap_const_lv32_BA : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111010";
    constant ap_const_lv32_CB : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001011";
    constant ap_const_lv32_E9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101001";
    constant ap_const_lv32_FA : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111010";
    constant ap_const_lv32_40000000 : STD_LOGIC_VECTOR (31 downto 0) := "01000000000000000000000000000000";
    constant ap_const_lv32_40800000 : STD_LOGIC_VECTOR (31 downto 0) := "01000000100000000000000000000000";
    constant ap_const_lv32_3B000000 : STD_LOGIC_VECTOR (31 downto 0) := "00111011000000000000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_65 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100101";
    constant ap_const_lv32_7A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111010";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_A5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100101";
    constant ap_const_lv32_B6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110110";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000011";
    constant ap_const_lv32_D1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010001";
    constant ap_const_lv32_F6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110110";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_6E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101110";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_5F3759DF : STD_LOGIC_VECTOR (31 downto 0) := "01011111001101110101100111011111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (263 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal q1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal q2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal q3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal q0 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    signal beta : STD_LOGIC_VECTOR (31 downto 0) := "00111101110011001100110011001101";
    signal reg_344 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond1_fu_958_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal ap_CS_fsm_state125 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state125 : signal is "none";
    signal ap_CS_fsm_state214 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state214 : signal is "none";
    signal ap_CS_fsm_state224 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state224 : signal is "none";
    signal ap_CS_fsm_state260 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state260 : signal is "none";
    signal reg_353 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal ap_CS_fsm_state66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal ap_CS_fsm_state128 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state128 : signal is "none";
    signal ap_CS_fsm_state131 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state131 : signal is "none";
    signal ap_CS_fsm_state213 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state213 : signal is "none";
    signal ap_CS_fsm_state219 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state219 : signal is "none";
    signal reg_363 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal ap_CS_fsm_state64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal ap_CS_fsm_state126 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state126 : signal is "none";
    signal ap_CS_fsm_state225 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state225 : signal is "none";
    signal reg_370 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal ap_CS_fsm_state65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal ap_CS_fsm_state129 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state129 : signal is "none";
    signal ap_CS_fsm_state220 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state220 : signal is "none";
    signal reg_380 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal ap_CS_fsm_state127 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state127 : signal is "none";
    signal ap_CS_fsm_state135 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state135 : signal is "none";
    signal reg_390 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal ap_CS_fsm_state130 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state130 : signal is "none";
    signal reg_396 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal grp_fu_214_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_404 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state212 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state212 : signal is "none";
    signal ap_CS_fsm_state223 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state223 : signal is "none";
    signal ap_CS_fsm_state228 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state228 : signal is "none";
    signal ap_CS_fsm_state233 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state233 : signal is "none";
    signal ap_CS_fsm_state242 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state242 : signal is "none";
    signal ap_CS_fsm_state246 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state246 : signal is "none";
    signal ap_CS_fsm_state250 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state250 : signal is "none";
    signal ap_CS_fsm_state259 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state259 : signal is "none";
    signal grp_fu_219_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_416 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal reg_424 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal ap_CS_fsm_state67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal ap_CS_fsm_state75 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal ap_CS_fsm_state84 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state84 : signal is "none";
    signal ap_CS_fsm_state88 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state88 : signal is "none";
    signal ap_CS_fsm_state94 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state94 : signal is "none";
    signal ap_CS_fsm_state99 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state99 : signal is "none";
    signal ap_CS_fsm_state104 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state104 : signal is "none";
    signal ap_CS_fsm_state140 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state140 : signal is "none";
    signal ap_CS_fsm_state159 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state159 : signal is "none";
    signal ap_CS_fsm_state164 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state164 : signal is "none";
    signal ap_CS_fsm_state169 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state169 : signal is "none";
    signal ap_CS_fsm_state178 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state178 : signal is "none";
    signal ap_CS_fsm_state182 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state182 : signal is "none";
    signal ap_CS_fsm_state186 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state186 : signal is "none";
    signal ap_CS_fsm_state195 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state195 : signal is "none";
    signal ap_CS_fsm_state199 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state199 : signal is "none";
    signal ap_CS_fsm_state203 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state203 : signal is "none";
    signal reg_439 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal ap_CS_fsm_state138 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state138 : signal is "none";
    signal ap_CS_fsm_state142 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state142 : signal is "none";
    signal grp_fu_224_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_451 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_228_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_458 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_465 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state91 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state91 : signal is "none";
    signal ap_CS_fsm_state229 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state229 : signal is "none";
    signal reg_474 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state79 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state79 : signal is "none";
    signal ap_CS_fsm_state86 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state86 : signal is "none";
    signal ap_CS_fsm_state96 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state96 : signal is "none";
    signal ap_CS_fsm_state105 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state105 : signal is "none";
    signal ap_CS_fsm_state133 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state133 : signal is "none";
    signal reg_484 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state76 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal ap_CS_fsm_state81 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state81 : signal is "none";
    signal reg_492 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state80 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state80 : signal is "none";
    signal ap_CS_fsm_state230 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state230 : signal is "none";
    signal reg_500 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal grp_fu_194_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_508 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal ap_CS_fsm_state101 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state101 : signal is "none";
    signal ap_CS_fsm_state136 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state136 : signal is "none";
    signal ap_CS_fsm_state145 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state145 : signal is "none";
    signal ap_CS_fsm_state150 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state150 : signal is "none";
    signal ap_CS_fsm_state155 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state155 : signal is "none";
    signal ap_CS_fsm_state217 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state217 : signal is "none";
    signal ap_CS_fsm_state218 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state218 : signal is "none";
    signal ap_CS_fsm_state238 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state238 : signal is "none";
    signal ap_CS_fsm_state255 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state255 : signal is "none";
    signal reg_516 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state74 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal ap_CS_fsm_state137 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state137 : signal is "none";
    signal ap_CS_fsm_state146 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state146 : signal is "none";
    signal ap_CS_fsm_state151 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state151 : signal is "none";
    signal ap_CS_fsm_state156 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state156 : signal is "none";
    signal grp_fu_198_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_526 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state109 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state109 : signal is "none";
    signal reg_538 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state89 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state89 : signal is "none";
    signal ap_CS_fsm_state149 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state149 : signal is "none";
    signal ap_CS_fsm_state154 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state154 : signal is "none";
    signal reg_554 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal reg_560 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_571 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_236_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_581 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state134 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state134 : signal is "none";
    signal grp_fu_241_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_588 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_594 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state132 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state132 : signal is "none";
    signal reg_600 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_606 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state143 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state143 : signal is "none";
    signal reg_615 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal reg_623 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_633 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal ap_CS_fsm_state87 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state87 : signal is "none";
    signal ap_CS_fsm_state141 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state141 : signal is "none";
    signal reg_649 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_656 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_664 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_670 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_677 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state77 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state77 : signal is "none";
    signal ap_CS_fsm_state82 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state82 : signal is "none";
    signal ap_CS_fsm_state90 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state90 : signal is "none";
    signal ap_CS_fsm_state144 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state144 : signal is "none";
    signal reg_691 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_700 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_707 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_719 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_725 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_734 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_739 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_746 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_755 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state83 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state83 : signal is "none";
    signal reg_762 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state208 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state208 : signal is "none";
    signal reg_770 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state93 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state93 : signal is "none";
    signal ap_CS_fsm_state174 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state174 : signal is "none";
    signal ap_CS_fsm_state191 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state191 : signal is "none";
    signal reg_778 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_204_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_788 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_208_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_795 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_801 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state95 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state95 : signal is "none";
    signal ap_CS_fsm_state100 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state100 : signal is "none";
    signal ap_CS_fsm_state110 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state110 : signal is "none";
    signal ap_CS_fsm_state122 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state122 : signal is "none";
    signal ap_CS_fsm_state139 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state139 : signal is "none";
    signal reg_810 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_817 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond1_reg_1418 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_974_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_265_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_329_reg_1427 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal grp_fu_271_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_334_reg_1432 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_277_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_339_reg_1437 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_fu_1105_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_1442 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i3_reg_1446 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal tmp_1_i5_fu_1134_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_i5_reg_1451 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal tmp_i_reg_1458 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal tmp_1_i_fu_1162_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_i_reg_1463 : STD_LOGIC_VECTOR (31 downto 0);
    signal q0_load_16_reg_1469 : STD_LOGIC_VECTOR (31 downto 0);
    signal q3_load_21_reg_1484 : STD_LOGIC_VECTOR (31 downto 0);
    signal q3_load_22_reg_1489 : STD_LOGIC_VECTOR (31 downto 0);
    signal q1q3_reg_1504 : STD_LOGIC_VECTOR (31 downto 0);
    signal q2q3_reg_1511 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_193_reg_1516 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_172_fu_1177_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_2q1_reg_1526 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state73 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal tmp_188_fu_1192_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state85 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state85 : signal is "none";
    signal tmp_252_fu_1207_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_249_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_274_reg_1543 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_253_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_275_reg_1548 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_224_reg_1553 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_283_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_2bx_reg_1558 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_259_fu_1222_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_259_reg_1567 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_208_fu_1236_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_277_reg_1579 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_278_reg_1584 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_245_reg_1589 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_284_reg_1594 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_239_reg_1599 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i2_reg_1604 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state175 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state175 : signal is "none";
    signal tmp_1_i2_fu_1265_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_i2_reg_1609 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state179 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state179 : signal is "none";
    signal beta_load_reg_1615 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state197 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state197 : signal is "none";
    signal beta_load_4_reg_1620 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state198 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state198 : signal is "none";
    signal beta_load_5_reg_1625 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state200 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state200 : signal is "none";
    signal tmp_i4_reg_1635 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state239 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state239 : signal is "none";
    signal tmp_1_i3_fu_1317_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_i3_reg_1640 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state243 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state243 : signal is "none";
    signal grp_MadgwickAHRSupdateIM_fu_168_ap_start : STD_LOGIC;
    signal grp_MadgwickAHRSupdateIM_fu_168_ap_done : STD_LOGIC;
    signal grp_MadgwickAHRSupdateIM_fu_168_ap_idle : STD_LOGIC;
    signal grp_MadgwickAHRSupdateIM_fu_168_ap_ready : STD_LOGIC;
    signal grp_MadgwickAHRSupdateIM_fu_168_q1_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_MadgwickAHRSupdateIM_fu_168_q1_o_ap_vld : STD_LOGIC;
    signal grp_MadgwickAHRSupdateIM_fu_168_q2_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_MadgwickAHRSupdateIM_fu_168_q2_o_ap_vld : STD_LOGIC;
    signal grp_MadgwickAHRSupdateIM_fu_168_q3_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_MadgwickAHRSupdateIM_fu_168_q3_o_ap_vld : STD_LOGIC;
    signal grp_MadgwickAHRSupdateIM_fu_168_q0_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_MadgwickAHRSupdateIM_fu_168_q0_o_ap_vld : STD_LOGIC;
    signal ap_phi_mux_qDot_phi_fu_131_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal qDot_reg_128 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state209 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state209 : signal is "none";
    signal ap_phi_mux_qDot8_phi_fu_141_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal qDot8_reg_138 : STD_LOGIC_VECTOR (31 downto 0);
    signal qDot9_reg_148 : STD_LOGIC_VECTOR (31 downto 0);
    signal qDot5_reg_158 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_grp_MadgwickAHRSupdateIM_fu_168_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state264 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state264 : signal is "none";
    signal ap_CS_fsm_state263 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state263 : signal is "none";
    signal grp_fu_194_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_194_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal ap_CS_fsm_state92 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state92 : signal is "none";
    signal ap_CS_fsm_state97 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state97 : signal is "none";
    signal ap_CS_fsm_state106 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state106 : signal is "none";
    signal ap_CS_fsm_state118 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state118 : signal is "none";
    signal ap_CS_fsm_state147 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state147 : signal is "none";
    signal ap_CS_fsm_state152 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state152 : signal is "none";
    signal ap_CS_fsm_state160 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state160 : signal is "none";
    signal ap_CS_fsm_state165 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state165 : signal is "none";
    signal ap_CS_fsm_state170 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state170 : signal is "none";
    signal ap_CS_fsm_state187 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state187 : signal is "none";
    signal ap_CS_fsm_state204 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state204 : signal is "none";
    signal ap_CS_fsm_state234 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state234 : signal is "none";
    signal ap_CS_fsm_state251 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state251 : signal is "none";
    signal grp_fu_198_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_198_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_204_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_204_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_208_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_208_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_214_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_214_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal ap_CS_fsm_state78 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state78 : signal is "none";
    signal ap_CS_fsm_state102 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state102 : signal is "none";
    signal ap_CS_fsm_state123 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state123 : signal is "none";
    signal ap_CS_fsm_state161 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state161 : signal is "none";
    signal ap_CS_fsm_state166 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state166 : signal is "none";
    signal ap_CS_fsm_state183 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state183 : signal is "none";
    signal ap_CS_fsm_state192 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state192 : signal is "none";
    signal ap_CS_fsm_state196 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state196 : signal is "none";
    signal ap_CS_fsm_state210 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state210 : signal is "none";
    signal ap_CS_fsm_state247 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state247 : signal is "none";
    signal ap_CS_fsm_state256 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state256 : signal is "none";
    signal grp_fu_219_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_219_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_224_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_224_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_228_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_228_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_236_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_236_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_241_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_241_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_265_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_271_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_277_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state111 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state111 : signal is "none";
    signal mx_to_int_fu_826_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_830_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_121_fu_840_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs_fu_850_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs_fu_844_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_122_fu_856_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal my_to_int_fu_868_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_133_fu_872_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_297_fu_882_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs9_fu_892_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs8_fu_886_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_316_fu_898_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mz_to_int_fu_910_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_321_fu_914_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_322_fu_924_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs1_fu_934_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs1_fu_928_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_323_fu_940_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_320_fu_904_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_325_fu_946_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_952_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_128_fu_862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_100_to_int_fu_964_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_100_neg_fu_968_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ax_to_int_fu_979_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_326_fu_982_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_327_fu_992_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs2_fu_1002_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs2_fu_996_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_328_fu_1008_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ay_to_int_fu_1019_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_331_fu_1022_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_332_fu_1032_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs3_fu_1042_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs3_fu_1036_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_333_fu_1048_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal az_to_int_fu_1059_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_336_fu_1062_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_337_fu_1072_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs4_fu_1082_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs4_fu_1076_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_338_fu_1088_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_335_fu_1054_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_340_fu_1094_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp2_fu_1099_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_330_fu_1014_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_7_fu_1111_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_342_fu_1125_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_8_fu_1128_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_fu_1139_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_341_fu_1153_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_6_fu_1156_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_174_to_int_fu_1167_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_174_neg_fu_1171_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_190_to_int_fu_1182_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_190_neg_fu_1186_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_254_to_int_fu_1197_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_254_neg_fu_1201_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_261_to_int_fu_1212_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_261_neg_fu_1216_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_210_to_int_fu_1227_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_210_neg_fu_1230_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_9_fu_1242_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_343_fu_1256_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_10_fu_1259_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_11_fu_1294_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_344_fu_1308_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_12_fu_1311_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_194_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_198_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_204_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_208_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (263 downto 0);

    component MadgwickAHRSupdateIM IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        gx : IN STD_LOGIC_VECTOR (31 downto 0);
        gy : IN STD_LOGIC_VECTOR (31 downto 0);
        gz : IN STD_LOGIC_VECTOR (31 downto 0);
        ax : IN STD_LOGIC_VECTOR (31 downto 0);
        ay : IN STD_LOGIC_VECTOR (31 downto 0);
        az : IN STD_LOGIC_VECTOR (31 downto 0);
        q1_i : IN STD_LOGIC_VECTOR (31 downto 0);
        q1_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        q1_o_ap_vld : OUT STD_LOGIC;
        q2_i : IN STD_LOGIC_VECTOR (31 downto 0);
        q2_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        q2_o_ap_vld : OUT STD_LOGIC;
        q3_i : IN STD_LOGIC_VECTOR (31 downto 0);
        q3_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        q3_o_ap_vld : OUT STD_LOGIC;
        q0_i : IN STD_LOGIC_VECTOR (31 downto 0);
        q0_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        q0_o_ap_vld : OUT STD_LOGIC;
        beta : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MadgwickAHRSupdatbkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MadgwickAHRSupdatcud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MadgwickAHRSupdatdEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component MadgwickAHRSupdateOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_MadgwickAHRSupdateIM_fu_168 : component MadgwickAHRSupdateIM
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_MadgwickAHRSupdateIM_fu_168_ap_start,
        ap_done => grp_MadgwickAHRSupdateIM_fu_168_ap_done,
        ap_idle => grp_MadgwickAHRSupdateIM_fu_168_ap_idle,
        ap_ready => grp_MadgwickAHRSupdateIM_fu_168_ap_ready,
        gx => gx,
        gy => gy,
        gz => gz,
        ax => ax,
        ay => ay,
        az => az,
        q1_i => q1,
        q1_o => grp_MadgwickAHRSupdateIM_fu_168_q1_o,
        q1_o_ap_vld => grp_MadgwickAHRSupdateIM_fu_168_q1_o_ap_vld,
        q2_i => q2,
        q2_o => grp_MadgwickAHRSupdateIM_fu_168_q2_o,
        q2_o_ap_vld => grp_MadgwickAHRSupdateIM_fu_168_q2_o_ap_vld,
        q3_i => q3,
        q3_o => grp_MadgwickAHRSupdateIM_fu_168_q3_o,
        q3_o_ap_vld => grp_MadgwickAHRSupdateIM_fu_168_q3_o_ap_vld,
        q0_i => q0,
        q0_o => grp_MadgwickAHRSupdateIM_fu_168_q0_o,
        q0_o_ap_vld => grp_MadgwickAHRSupdateIM_fu_168_q0_o_ap_vld,
        beta => beta);

    MadgwickAHRSupdatbkb_U30 : component MadgwickAHRSupdatbkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_194_p0,
        din1 => grp_fu_194_p1,
        opcode => grp_fu_194_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_194_p2);

    MadgwickAHRSupdatbkb_U31 : component MadgwickAHRSupdatbkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_198_p0,
        din1 => grp_fu_198_p1,
        opcode => grp_fu_198_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_198_p2);

    MadgwickAHRSupdatbkb_U32 : component MadgwickAHRSupdatbkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_204_p0,
        din1 => grp_fu_204_p1,
        opcode => grp_fu_204_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_204_p2);

    MadgwickAHRSupdatbkb_U33 : component MadgwickAHRSupdatbkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_208_p0,
        din1 => grp_fu_208_p1,
        opcode => grp_fu_208_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_208_p2);

    MadgwickAHRSupdatcud_U34 : component MadgwickAHRSupdatcud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_214_p0,
        din1 => grp_fu_214_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_214_p2);

    MadgwickAHRSupdatcud_U35 : component MadgwickAHRSupdatcud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_219_p0,
        din1 => grp_fu_219_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_219_p2);

    MadgwickAHRSupdatcud_U36 : component MadgwickAHRSupdatcud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_224_p0,
        din1 => grp_fu_224_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_224_p2);

    MadgwickAHRSupdatcud_U37 : component MadgwickAHRSupdatcud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_228_p0,
        din1 => grp_fu_228_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_228_p2);

    MadgwickAHRSupdatcud_U38 : component MadgwickAHRSupdatcud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_236_p0,
        din1 => grp_fu_236_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_236_p2);

    MadgwickAHRSupdatcud_U39 : component MadgwickAHRSupdatcud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_241_p0,
        din1 => grp_fu_241_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_241_p2);

    MadgwickAHRSupdatcud_U40 : component MadgwickAHRSupdatcud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_2q1_reg_1526,
        din1 => reg_778,
        ce => ap_const_logic_1,
        dout => grp_fu_249_p2);

    MadgwickAHRSupdatcud_U41 : component MadgwickAHRSupdatcud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_755,
        din1 => reg_538,
        ce => ap_const_logic_1,
        dout => grp_fu_253_p2);

    MadgwickAHRSupdatdEe_U42 : component MadgwickAHRSupdatdEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_265_p0,
        din1 => ap_const_lv32_0,
        opcode => ap_const_lv5_1,
        dout => grp_fu_265_p2);

    MadgwickAHRSupdatdEe_U43 : component MadgwickAHRSupdatdEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_271_p0,
        din1 => ap_const_lv32_0,
        opcode => ap_const_lv5_1,
        dout => grp_fu_271_p2);

    MadgwickAHRSupdatdEe_U44 : component MadgwickAHRSupdatdEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_277_p0,
        din1 => ap_const_lv32_0,
        opcode => ap_const_lv5_1,
        dout => grp_fu_277_p2);

    MadgwickAHRSupdateOg_U45 : component MadgwickAHRSupdateOg
    generic map (
        ID => 1,
        NUM_STAGE => 12,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv32_0,
        din1 => reg_801,
        ce => ap_const_logic_1,
        dout => grp_fu_283_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_grp_MadgwickAHRSupdateIM_fu_168_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_MadgwickAHRSupdateIM_fu_168_ap_start <= ap_const_logic_0;
            else
                if (((or_cond1_fu_958_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_reg_grp_MadgwickAHRSupdateIM_fu_168_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_MadgwickAHRSupdateIM_fu_168_ap_ready)) then 
                    ap_reg_grp_MadgwickAHRSupdateIM_fu_168_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    beta_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    q0_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = or_cond1_reg_1418) and (ap_const_logic_1 = ap_CS_fsm_state263))) then 
                q0 <= grp_fu_214_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state218)) then 
                q0 <= reg_508;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state264) and (ap_const_logic_1 = grp_MadgwickAHRSupdateIM_fu_168_q0_o_ap_vld))) then 
                q0 <= grp_MadgwickAHRSupdateIM_fu_168_q0_o;
            end if; 
        end if;
    end process;

    q1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = or_cond1_reg_1418) and (ap_const_logic_1 = ap_CS_fsm_state263))) then 
                q1 <= grp_fu_219_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state218)) then 
                q1 <= reg_526;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state264) and (ap_const_logic_1 = grp_MadgwickAHRSupdateIM_fu_168_q1_o_ap_vld))) then 
                q1 <= grp_MadgwickAHRSupdateIM_fu_168_q1_o;
            end if; 
        end if;
    end process;

    q2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = or_cond1_reg_1418) and (ap_const_logic_1 = ap_CS_fsm_state263))) then 
                q2 <= grp_fu_224_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state219)) then 
                q2 <= reg_508;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state264) and (ap_const_logic_1 = grp_MadgwickAHRSupdateIM_fu_168_q2_o_ap_vld))) then 
                q2 <= grp_MadgwickAHRSupdateIM_fu_168_q2_o;
            end if; 
        end if;
    end process;

    q3_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = or_cond1_reg_1418) and (ap_const_logic_1 = ap_CS_fsm_state263))) then 
                q3 <= grp_fu_228_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state219)) then 
                q3 <= reg_526;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state264) and (ap_const_logic_1 = grp_MadgwickAHRSupdateIM_fu_168_q3_o_ap_vld))) then 
                q3 <= grp_MadgwickAHRSupdateIM_fu_168_q3_o;
            end if; 
        end if;
    end process;

    qDot5_reg_158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state20) and (or_cond3_fu_1105_p2 = ap_const_lv1_1))) then 
                qDot5_reg_158 <= grp_fu_228_p2;
            elsif (((ap_const_lv1_0 = or_cond3_reg_1442) and (ap_const_logic_1 = ap_CS_fsm_state209))) then 
                qDot5_reg_158 <= reg_795;
            end if; 
        end if;
    end process;

    qDot8_reg_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state20) and (or_cond3_fu_1105_p2 = ap_const_lv1_1))) then 
                qDot8_reg_138 <= grp_fu_219_p2;
            elsif (((ap_const_lv1_0 = or_cond3_reg_1442) and (ap_const_logic_1 = ap_CS_fsm_state209))) then 
                qDot8_reg_138 <= reg_762;
            end if; 
        end if;
    end process;

    qDot9_reg_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state20) and (or_cond3_fu_1105_p2 = ap_const_lv1_1))) then 
                qDot9_reg_148 <= grp_fu_224_p2;
            elsif (((ap_const_lv1_0 = or_cond3_reg_1442) and (ap_const_logic_1 = ap_CS_fsm_state209))) then 
                qDot9_reg_148 <= reg_788;
            end if; 
        end if;
    end process;

    qDot_reg_128_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state20) and (or_cond3_fu_1105_p2 = ap_const_lv1_1))) then 
                qDot_reg_128 <= grp_fu_214_p2;
            elsif (((ap_const_lv1_0 = or_cond3_reg_1442) and (ap_const_logic_1 = ap_CS_fsm_state209))) then 
                qDot_reg_128 <= reg_770;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                or_cond1_reg_1418 <= or_cond1_fu_958_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                or_cond3_reg_1442 <= or_cond3_fu_1105_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state122)) then
                p_2bx_reg_1558 <= grp_fu_283_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state73)) then
                p_2q1_reg_1526 <= grp_fu_214_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state56)) then
                q0_load_16_reg_1469 <= q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state70)) then
                q1q3_reg_1504 <= grp_fu_214_p2;
                q2q3_reg_1511 <= grp_fu_219_p2;
                tmp_193_reg_1516 <= grp_fu_224_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state61)) then
                q3_load_21_reg_1484 <= q3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state62)) then
                q3_load_22_reg_1489 <= q3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state260) or (ap_const_logic_1 = ap_CS_fsm_state224) or (ap_const_logic_1 = ap_CS_fsm_state214) or (ap_const_logic_1 = ap_CS_fsm_state125) or (ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((or_cond1_fu_958_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then
                reg_344 <= q2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state219) or (ap_const_logic_1 = ap_CS_fsm_state213) or (ap_const_logic_1 = ap_CS_fsm_state131) or (ap_const_logic_1 = ap_CS_fsm_state128) or (ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state260) or ((or_cond1_fu_958_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then
                reg_353 <= q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state225) or (ap_const_logic_1 = ap_CS_fsm_state126) or (ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state2))) then
                reg_363 <= q2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state220) or (ap_const_logic_1 = ap_CS_fsm_state129) or (ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state2))) then
                reg_370 <= q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state135) or (ap_const_logic_1 = ap_CS_fsm_state127) or (ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state219) or (ap_const_logic_1 = ap_CS_fsm_state213) or (ap_const_logic_1 = ap_CS_fsm_state260))) then
                reg_380 <= q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state130) or (ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state3))) then
                reg_390 <= q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state220) or (ap_const_logic_1 = ap_CS_fsm_state131) or (ap_const_logic_1 = ap_CS_fsm_state128))) then
                reg_396 <= q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state259) or (ap_const_logic_1 = ap_CS_fsm_state250) or (ap_const_logic_1 = ap_CS_fsm_state246) or (ap_const_logic_1 = ap_CS_fsm_state242) or (ap_const_logic_1 = ap_CS_fsm_state233) or (ap_const_logic_1 = ap_CS_fsm_state228) or (ap_const_logic_1 = ap_CS_fsm_state223) or (ap_const_logic_1 = ap_CS_fsm_state212) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state4))) then
                reg_404 <= grp_fu_214_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state223) or (ap_const_logic_1 = ap_CS_fsm_state212) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state4))) then
                reg_416 <= grp_fu_219_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state203) or (ap_const_logic_1 = ap_CS_fsm_state199) or (ap_const_logic_1 = ap_CS_fsm_state195) or (ap_const_logic_1 = ap_CS_fsm_state186) or (ap_const_logic_1 = ap_CS_fsm_state182) or (ap_const_logic_1 = ap_CS_fsm_state178) or (ap_const_logic_1 = ap_CS_fsm_state169) or (ap_const_logic_1 = ap_CS_fsm_state164) or (ap_const_logic_1 = ap_CS_fsm_state159) or (ap_const_logic_1 = ap_CS_fsm_state140) or (ap_const_logic_1 = ap_CS_fsm_state104) or (ap_const_logic_1 = ap_CS_fsm_state99) or (ap_const_logic_1 = ap_CS_fsm_state94) or (ap_const_logic_1 = ap_CS_fsm_state88) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state135) or (ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state126) or (ap_const_logic_1 = ap_CS_fsm_state213) or (ap_const_logic_1 = ap_CS_fsm_state131) or (ap_const_logic_1 = ap_CS_fsm_state58))) then
                reg_424 <= grp_fu_214_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state142) or (ap_const_logic_1 = ap_CS_fsm_state138) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state203) or (ap_const_logic_1 = ap_CS_fsm_state199) or (ap_const_logic_1 = ap_CS_fsm_state159) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state213) or (ap_const_logic_1 = ap_CS_fsm_state58))) then
                reg_439 <= grp_fu_219_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state20))) then
                reg_451 <= grp_fu_224_p2;
                reg_458 <= grp_fu_228_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state229) or (ap_const_logic_1 = ap_CS_fsm_state91) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state128) or (ap_const_logic_1 = ap_CS_fsm_state260) or (ap_const_logic_1 = ap_CS_fsm_state214))) then
                reg_465 <= q3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state133) or (ap_const_logic_1 = ap_CS_fsm_state105) or (ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state91) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state142) or (ap_const_logic_1 = ap_CS_fsm_state138) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state129) or (ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state128) or (ap_const_logic_1 = ap_CS_fsm_state60))) then
                reg_474 <= grp_fu_214_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state81) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state105) or (ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state91) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state140) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state126) or (ap_const_logic_1 = ap_CS_fsm_state131))) then
                reg_484 <= grp_fu_219_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state230) or (ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state129))) then
                reg_492 <= q3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state81) or (ap_const_logic_1 = ap_CS_fsm_state130) or (ap_const_logic_1 = ap_CS_fsm_state8))) then
                reg_500 <= q3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state255) or (ap_const_logic_1 = ap_CS_fsm_state238) or (ap_const_logic_1 = ap_CS_fsm_state218) or (ap_const_logic_1 = ap_CS_fsm_state217) or (ap_const_logic_1 = ap_CS_fsm_state155) or (ap_const_logic_1 = ap_CS_fsm_state150) or (ap_const_logic_1 = ap_CS_fsm_state145) or (ap_const_logic_1 = ap_CS_fsm_state136) or (ap_const_logic_1 = ap_CS_fsm_state101) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state81) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state105) or (ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state91) or (ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state233) or (ap_const_logic_1 = ap_CS_fsm_state228) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state131))) then
                reg_508 <= grp_fu_194_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state137) or (ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state156) or (ap_const_logic_1 = ap_CS_fsm_state151) or (ap_const_logic_1 = ap_CS_fsm_state146))) then
                reg_516 <= grp_fu_194_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state218) or (ap_const_logic_1 = ap_CS_fsm_state217) or (ap_const_logic_1 = ap_CS_fsm_state155) or (ap_const_logic_1 = ap_CS_fsm_state150) or (ap_const_logic_1 = ap_CS_fsm_state145) or (ap_const_logic_1 = ap_CS_fsm_state136) or (ap_const_logic_1 = ap_CS_fsm_state101) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state81) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state91) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state109) or (ap_const_logic_1 = ap_CS_fsm_state16))) then
                reg_526 <= grp_fu_198_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state138) or (ap_const_logic_1 = ap_CS_fsm_state159) or (ap_const_logic_1 = ap_CS_fsm_state104) or (ap_const_logic_1 = ap_CS_fsm_state99) or (ap_const_logic_1 = ap_CS_fsm_state94) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state154) or (ap_const_logic_1 = ap_CS_fsm_state149) or (ap_const_logic_1 = ap_CS_fsm_state89) or (ap_const_logic_1 = ap_CS_fsm_state109) or (ap_const_logic_1 = ap_CS_fsm_state16))) then
                reg_538 <= grp_fu_194_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state131) or (ap_const_logic_1 = ap_CS_fsm_state57))) then
                reg_554 <= q3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state142) or (ap_const_logic_1 = ap_CS_fsm_state203) or (ap_const_logic_1 = ap_CS_fsm_state199) or (ap_const_logic_1 = ap_CS_fsm_state58))) then
                reg_560 <= grp_fu_224_p2;
                reg_571 <= grp_fu_228_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state88) or (ap_const_logic_1 = ap_CS_fsm_state126) or (ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state134))) then
                reg_581 <= grp_fu_236_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state88) or (ap_const_logic_1 = ap_CS_fsm_state126) or (ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state134))) then
                reg_588 <= grp_fu_241_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state132))) then
                reg_594 <= q3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state63))) then
                reg_600 <= q3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state126) or (ap_const_logic_1 = ap_CS_fsm_state131) or (ap_const_logic_1 = ap_CS_fsm_state143))) then
                reg_606 <= grp_fu_224_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state127) or (ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state131) or (ap_const_logic_1 = ap_CS_fsm_state70))) then
                reg_615 <= q2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state88) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state135) or (ap_const_logic_1 = ap_CS_fsm_state126) or (ap_const_logic_1 = ap_CS_fsm_state131) or (ap_const_logic_1 = ap_CS_fsm_state143))) then
                reg_623 <= grp_fu_228_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state141) or (ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state132))) then
                reg_633 <= grp_fu_214_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state128) or (ap_const_logic_1 = ap_CS_fsm_state63))) then
                reg_649 <= q2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state143) or (ap_const_logic_1 = ap_CS_fsm_state132))) then
                reg_656 <= grp_fu_219_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state132))) then
                reg_664 <= q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state81) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state143) or (ap_const_logic_1 = ap_CS_fsm_state134) or (ap_const_logic_1 = ap_CS_fsm_state89))) then
                reg_670 <= grp_fu_214_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state144) or (ap_const_logic_1 = ap_CS_fsm_state90) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state77))) then
                reg_677 <= grp_fu_214_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state133) or (ap_const_logic_1 = ap_CS_fsm_state99) or (ap_const_logic_1 = ap_CS_fsm_state94) or (ap_const_logic_1 = ap_CS_fsm_state88) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state66))) then
                reg_691 <= grp_fu_219_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state133) or (ap_const_logic_1 = ap_CS_fsm_state88) or (ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state66))) then
                reg_700 <= grp_fu_224_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state133) or (ap_const_logic_1 = ap_CS_fsm_state66))) then
                reg_707 <= grp_fu_228_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state134))) then
                reg_719 <= grp_fu_219_p2;
                reg_725 <= grp_fu_224_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state135) or (ap_const_logic_1 = ap_CS_fsm_state69))) then
                reg_734 <= grp_fu_219_p2;
                reg_739 <= grp_fu_224_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state134))) then
                reg_746 <= grp_fu_228_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state83))) then
                reg_755 <= grp_fu_214_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state138) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state131) or (ap_const_logic_1 = ap_CS_fsm_state208))) then
                reg_762 <= grp_fu_198_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state169) or (ap_const_logic_1 = ap_CS_fsm_state164) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state191) or (ap_const_logic_1 = ap_CS_fsm_state174) or (ap_const_logic_1 = ap_CS_fsm_state93) or (ap_const_logic_1 = ap_CS_fsm_state208))) then
                reg_770 <= grp_fu_194_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state140) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state93))) then
                reg_778 <= grp_fu_198_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state140) or (ap_const_logic_1 = ap_CS_fsm_state93) or (ap_const_logic_1 = ap_CS_fsm_state208))) then
                reg_788 <= grp_fu_204_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state93) or (ap_const_logic_1 = ap_CS_fsm_state208))) then
                reg_795 <= grp_fu_208_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state139) or (ap_const_logic_1 = ap_CS_fsm_state122) or (ap_const_logic_1 = ap_CS_fsm_state110) or (ap_const_logic_1 = ap_CS_fsm_state100) or (ap_const_logic_1 = ap_CS_fsm_state95))) then
                reg_801 <= grp_fu_194_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state104) or (ap_const_logic_1 = ap_CS_fsm_state99) or (ap_const_logic_1 = ap_CS_fsm_state139) or (ap_const_logic_1 = ap_CS_fsm_state122))) then
                reg_810 <= grp_fu_198_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state136) or (ap_const_logic_1 = ap_CS_fsm_state131))) then
                reg_817 <= grp_fu_204_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state179)) then
                tmp_1_i2_reg_1609 <= tmp_1_i2_fu_1265_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state243)) then
                tmp_1_i3_reg_1640 <= tmp_1_i3_fu_1317_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state38)) then
                tmp_1_i5_reg_1451 <= tmp_1_i5_fu_1134_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state55)) then
                tmp_1_i_reg_1463 <= tmp_1_i_fu_1162_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state100)) then
                tmp_224_reg_1553 <= grp_fu_198_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state140)) then
                tmp_239_reg_1599 <= grp_fu_194_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state136)) then
                tmp_245_reg_1589 <= grp_fu_208_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state129)) then
                tmp_259_reg_1567 <= tmp_259_fu_1222_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state88)) then
                tmp_274_reg_1543 <= grp_fu_249_p2;
                tmp_275_reg_1548 <= grp_fu_253_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state135)) then
                tmp_277_reg_1579 <= grp_fu_236_p2;
                tmp_278_reg_1584 <= grp_fu_241_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state139)) then
                tmp_284_reg_1594 <= grp_fu_204_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                tmp_329_reg_1427 <= grp_fu_265_p2;
                tmp_334_reg_1432 <= grp_fu_271_p2;
                tmp_339_reg_1437 <= grp_fu_277_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state175)) then
                tmp_i2_reg_1604 <= y_9_fu_1242_p1(31 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then
                tmp_i3_reg_1446 <= y_7_fu_1111_p1(31 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state239)) then
                tmp_i4_reg_1635 <= y_11_fu_1294_p1(31 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state51)) then
                tmp_i_reg_1458 <= y_fu_1139_p1(31 downto 1);
            end if;
        end if;
    end process;
    beta_load_reg_1615(31 downto 0) <= "00111101110011001100110011001101";
    beta_load_4_reg_1620(31 downto 0) <= "00111101110011001100110011001101";
    beta_load_5_reg_1625(31 downto 0) <= "00111101110011001100110011001101";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, or_cond1_fu_958_p2, ap_CS_fsm_state20, or_cond3_fu_1105_p2, grp_MadgwickAHRSupdateIM_fu_168_ap_done, ap_CS_fsm_state264)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((or_cond1_fu_958_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state264;
                elsif (((or_cond1_fu_958_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state20) and (or_cond3_fu_1105_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state209;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state81 => 
                ap_NS_fsm <= ap_ST_fsm_state82;
            when ap_ST_fsm_state82 => 
                ap_NS_fsm <= ap_ST_fsm_state83;
            when ap_ST_fsm_state83 => 
                ap_NS_fsm <= ap_ST_fsm_state84;
            when ap_ST_fsm_state84 => 
                ap_NS_fsm <= ap_ST_fsm_state85;
            when ap_ST_fsm_state85 => 
                ap_NS_fsm <= ap_ST_fsm_state86;
            when ap_ST_fsm_state86 => 
                ap_NS_fsm <= ap_ST_fsm_state87;
            when ap_ST_fsm_state87 => 
                ap_NS_fsm <= ap_ST_fsm_state88;
            when ap_ST_fsm_state88 => 
                ap_NS_fsm <= ap_ST_fsm_state89;
            when ap_ST_fsm_state89 => 
                ap_NS_fsm <= ap_ST_fsm_state90;
            when ap_ST_fsm_state90 => 
                ap_NS_fsm <= ap_ST_fsm_state91;
            when ap_ST_fsm_state91 => 
                ap_NS_fsm <= ap_ST_fsm_state92;
            when ap_ST_fsm_state92 => 
                ap_NS_fsm <= ap_ST_fsm_state93;
            when ap_ST_fsm_state93 => 
                ap_NS_fsm <= ap_ST_fsm_state94;
            when ap_ST_fsm_state94 => 
                ap_NS_fsm <= ap_ST_fsm_state95;
            when ap_ST_fsm_state95 => 
                ap_NS_fsm <= ap_ST_fsm_state96;
            when ap_ST_fsm_state96 => 
                ap_NS_fsm <= ap_ST_fsm_state97;
            when ap_ST_fsm_state97 => 
                ap_NS_fsm <= ap_ST_fsm_state98;
            when ap_ST_fsm_state98 => 
                ap_NS_fsm <= ap_ST_fsm_state99;
            when ap_ST_fsm_state99 => 
                ap_NS_fsm <= ap_ST_fsm_state100;
            when ap_ST_fsm_state100 => 
                ap_NS_fsm <= ap_ST_fsm_state101;
            when ap_ST_fsm_state101 => 
                ap_NS_fsm <= ap_ST_fsm_state102;
            when ap_ST_fsm_state102 => 
                ap_NS_fsm <= ap_ST_fsm_state103;
            when ap_ST_fsm_state103 => 
                ap_NS_fsm <= ap_ST_fsm_state104;
            when ap_ST_fsm_state104 => 
                ap_NS_fsm <= ap_ST_fsm_state105;
            when ap_ST_fsm_state105 => 
                ap_NS_fsm <= ap_ST_fsm_state106;
            when ap_ST_fsm_state106 => 
                ap_NS_fsm <= ap_ST_fsm_state107;
            when ap_ST_fsm_state107 => 
                ap_NS_fsm <= ap_ST_fsm_state108;
            when ap_ST_fsm_state108 => 
                ap_NS_fsm <= ap_ST_fsm_state109;
            when ap_ST_fsm_state109 => 
                ap_NS_fsm <= ap_ST_fsm_state110;
            when ap_ST_fsm_state110 => 
                ap_NS_fsm <= ap_ST_fsm_state111;
            when ap_ST_fsm_state111 => 
                ap_NS_fsm <= ap_ST_fsm_state112;
            when ap_ST_fsm_state112 => 
                ap_NS_fsm <= ap_ST_fsm_state113;
            when ap_ST_fsm_state113 => 
                ap_NS_fsm <= ap_ST_fsm_state114;
            when ap_ST_fsm_state114 => 
                ap_NS_fsm <= ap_ST_fsm_state115;
            when ap_ST_fsm_state115 => 
                ap_NS_fsm <= ap_ST_fsm_state116;
            when ap_ST_fsm_state116 => 
                ap_NS_fsm <= ap_ST_fsm_state117;
            when ap_ST_fsm_state117 => 
                ap_NS_fsm <= ap_ST_fsm_state118;
            when ap_ST_fsm_state118 => 
                ap_NS_fsm <= ap_ST_fsm_state119;
            when ap_ST_fsm_state119 => 
                ap_NS_fsm <= ap_ST_fsm_state120;
            when ap_ST_fsm_state120 => 
                ap_NS_fsm <= ap_ST_fsm_state121;
            when ap_ST_fsm_state121 => 
                ap_NS_fsm <= ap_ST_fsm_state122;
            when ap_ST_fsm_state122 => 
                ap_NS_fsm <= ap_ST_fsm_state123;
            when ap_ST_fsm_state123 => 
                ap_NS_fsm <= ap_ST_fsm_state124;
            when ap_ST_fsm_state124 => 
                ap_NS_fsm <= ap_ST_fsm_state125;
            when ap_ST_fsm_state125 => 
                ap_NS_fsm <= ap_ST_fsm_state126;
            when ap_ST_fsm_state126 => 
                ap_NS_fsm <= ap_ST_fsm_state127;
            when ap_ST_fsm_state127 => 
                ap_NS_fsm <= ap_ST_fsm_state128;
            when ap_ST_fsm_state128 => 
                ap_NS_fsm <= ap_ST_fsm_state129;
            when ap_ST_fsm_state129 => 
                ap_NS_fsm <= ap_ST_fsm_state130;
            when ap_ST_fsm_state130 => 
                ap_NS_fsm <= ap_ST_fsm_state131;
            when ap_ST_fsm_state131 => 
                ap_NS_fsm <= ap_ST_fsm_state132;
            when ap_ST_fsm_state132 => 
                ap_NS_fsm <= ap_ST_fsm_state133;
            when ap_ST_fsm_state133 => 
                ap_NS_fsm <= ap_ST_fsm_state134;
            when ap_ST_fsm_state134 => 
                ap_NS_fsm <= ap_ST_fsm_state135;
            when ap_ST_fsm_state135 => 
                ap_NS_fsm <= ap_ST_fsm_state136;
            when ap_ST_fsm_state136 => 
                ap_NS_fsm <= ap_ST_fsm_state137;
            when ap_ST_fsm_state137 => 
                ap_NS_fsm <= ap_ST_fsm_state138;
            when ap_ST_fsm_state138 => 
                ap_NS_fsm <= ap_ST_fsm_state139;
            when ap_ST_fsm_state139 => 
                ap_NS_fsm <= ap_ST_fsm_state140;
            when ap_ST_fsm_state140 => 
                ap_NS_fsm <= ap_ST_fsm_state141;
            when ap_ST_fsm_state141 => 
                ap_NS_fsm <= ap_ST_fsm_state142;
            when ap_ST_fsm_state142 => 
                ap_NS_fsm <= ap_ST_fsm_state143;
            when ap_ST_fsm_state143 => 
                ap_NS_fsm <= ap_ST_fsm_state144;
            when ap_ST_fsm_state144 => 
                ap_NS_fsm <= ap_ST_fsm_state145;
            when ap_ST_fsm_state145 => 
                ap_NS_fsm <= ap_ST_fsm_state146;
            when ap_ST_fsm_state146 => 
                ap_NS_fsm <= ap_ST_fsm_state147;
            when ap_ST_fsm_state147 => 
                ap_NS_fsm <= ap_ST_fsm_state148;
            when ap_ST_fsm_state148 => 
                ap_NS_fsm <= ap_ST_fsm_state149;
            when ap_ST_fsm_state149 => 
                ap_NS_fsm <= ap_ST_fsm_state150;
            when ap_ST_fsm_state150 => 
                ap_NS_fsm <= ap_ST_fsm_state151;
            when ap_ST_fsm_state151 => 
                ap_NS_fsm <= ap_ST_fsm_state152;
            when ap_ST_fsm_state152 => 
                ap_NS_fsm <= ap_ST_fsm_state153;
            when ap_ST_fsm_state153 => 
                ap_NS_fsm <= ap_ST_fsm_state154;
            when ap_ST_fsm_state154 => 
                ap_NS_fsm <= ap_ST_fsm_state155;
            when ap_ST_fsm_state155 => 
                ap_NS_fsm <= ap_ST_fsm_state156;
            when ap_ST_fsm_state156 => 
                ap_NS_fsm <= ap_ST_fsm_state157;
            when ap_ST_fsm_state157 => 
                ap_NS_fsm <= ap_ST_fsm_state158;
            when ap_ST_fsm_state158 => 
                ap_NS_fsm <= ap_ST_fsm_state159;
            when ap_ST_fsm_state159 => 
                ap_NS_fsm <= ap_ST_fsm_state160;
            when ap_ST_fsm_state160 => 
                ap_NS_fsm <= ap_ST_fsm_state161;
            when ap_ST_fsm_state161 => 
                ap_NS_fsm <= ap_ST_fsm_state162;
            when ap_ST_fsm_state162 => 
                ap_NS_fsm <= ap_ST_fsm_state163;
            when ap_ST_fsm_state163 => 
                ap_NS_fsm <= ap_ST_fsm_state164;
            when ap_ST_fsm_state164 => 
                ap_NS_fsm <= ap_ST_fsm_state165;
            when ap_ST_fsm_state165 => 
                ap_NS_fsm <= ap_ST_fsm_state166;
            when ap_ST_fsm_state166 => 
                ap_NS_fsm <= ap_ST_fsm_state167;
            when ap_ST_fsm_state167 => 
                ap_NS_fsm <= ap_ST_fsm_state168;
            when ap_ST_fsm_state168 => 
                ap_NS_fsm <= ap_ST_fsm_state169;
            when ap_ST_fsm_state169 => 
                ap_NS_fsm <= ap_ST_fsm_state170;
            when ap_ST_fsm_state170 => 
                ap_NS_fsm <= ap_ST_fsm_state171;
            when ap_ST_fsm_state171 => 
                ap_NS_fsm <= ap_ST_fsm_state172;
            when ap_ST_fsm_state172 => 
                ap_NS_fsm <= ap_ST_fsm_state173;
            when ap_ST_fsm_state173 => 
                ap_NS_fsm <= ap_ST_fsm_state174;
            when ap_ST_fsm_state174 => 
                ap_NS_fsm <= ap_ST_fsm_state175;
            when ap_ST_fsm_state175 => 
                ap_NS_fsm <= ap_ST_fsm_state176;
            when ap_ST_fsm_state176 => 
                ap_NS_fsm <= ap_ST_fsm_state177;
            when ap_ST_fsm_state177 => 
                ap_NS_fsm <= ap_ST_fsm_state178;
            when ap_ST_fsm_state178 => 
                ap_NS_fsm <= ap_ST_fsm_state179;
            when ap_ST_fsm_state179 => 
                ap_NS_fsm <= ap_ST_fsm_state180;
            when ap_ST_fsm_state180 => 
                ap_NS_fsm <= ap_ST_fsm_state181;
            when ap_ST_fsm_state181 => 
                ap_NS_fsm <= ap_ST_fsm_state182;
            when ap_ST_fsm_state182 => 
                ap_NS_fsm <= ap_ST_fsm_state183;
            when ap_ST_fsm_state183 => 
                ap_NS_fsm <= ap_ST_fsm_state184;
            when ap_ST_fsm_state184 => 
                ap_NS_fsm <= ap_ST_fsm_state185;
            when ap_ST_fsm_state185 => 
                ap_NS_fsm <= ap_ST_fsm_state186;
            when ap_ST_fsm_state186 => 
                ap_NS_fsm <= ap_ST_fsm_state187;
            when ap_ST_fsm_state187 => 
                ap_NS_fsm <= ap_ST_fsm_state188;
            when ap_ST_fsm_state188 => 
                ap_NS_fsm <= ap_ST_fsm_state189;
            when ap_ST_fsm_state189 => 
                ap_NS_fsm <= ap_ST_fsm_state190;
            when ap_ST_fsm_state190 => 
                ap_NS_fsm <= ap_ST_fsm_state191;
            when ap_ST_fsm_state191 => 
                ap_NS_fsm <= ap_ST_fsm_state192;
            when ap_ST_fsm_state192 => 
                ap_NS_fsm <= ap_ST_fsm_state193;
            when ap_ST_fsm_state193 => 
                ap_NS_fsm <= ap_ST_fsm_state194;
            when ap_ST_fsm_state194 => 
                ap_NS_fsm <= ap_ST_fsm_state195;
            when ap_ST_fsm_state195 => 
                ap_NS_fsm <= ap_ST_fsm_state196;
            when ap_ST_fsm_state196 => 
                ap_NS_fsm <= ap_ST_fsm_state197;
            when ap_ST_fsm_state197 => 
                ap_NS_fsm <= ap_ST_fsm_state198;
            when ap_ST_fsm_state198 => 
                ap_NS_fsm <= ap_ST_fsm_state199;
            when ap_ST_fsm_state199 => 
                ap_NS_fsm <= ap_ST_fsm_state200;
            when ap_ST_fsm_state200 => 
                ap_NS_fsm <= ap_ST_fsm_state201;
            when ap_ST_fsm_state201 => 
                ap_NS_fsm <= ap_ST_fsm_state202;
            when ap_ST_fsm_state202 => 
                ap_NS_fsm <= ap_ST_fsm_state203;
            when ap_ST_fsm_state203 => 
                ap_NS_fsm <= ap_ST_fsm_state204;
            when ap_ST_fsm_state204 => 
                ap_NS_fsm <= ap_ST_fsm_state205;
            when ap_ST_fsm_state205 => 
                ap_NS_fsm <= ap_ST_fsm_state206;
            when ap_ST_fsm_state206 => 
                ap_NS_fsm <= ap_ST_fsm_state207;
            when ap_ST_fsm_state207 => 
                ap_NS_fsm <= ap_ST_fsm_state208;
            when ap_ST_fsm_state208 => 
                ap_NS_fsm <= ap_ST_fsm_state209;
            when ap_ST_fsm_state209 => 
                ap_NS_fsm <= ap_ST_fsm_state210;
            when ap_ST_fsm_state210 => 
                ap_NS_fsm <= ap_ST_fsm_state211;
            when ap_ST_fsm_state211 => 
                ap_NS_fsm <= ap_ST_fsm_state212;
            when ap_ST_fsm_state212 => 
                ap_NS_fsm <= ap_ST_fsm_state213;
            when ap_ST_fsm_state213 => 
                ap_NS_fsm <= ap_ST_fsm_state214;
            when ap_ST_fsm_state214 => 
                ap_NS_fsm <= ap_ST_fsm_state215;
            when ap_ST_fsm_state215 => 
                ap_NS_fsm <= ap_ST_fsm_state216;
            when ap_ST_fsm_state216 => 
                ap_NS_fsm <= ap_ST_fsm_state217;
            when ap_ST_fsm_state217 => 
                ap_NS_fsm <= ap_ST_fsm_state218;
            when ap_ST_fsm_state218 => 
                ap_NS_fsm <= ap_ST_fsm_state219;
            when ap_ST_fsm_state219 => 
                ap_NS_fsm <= ap_ST_fsm_state220;
            when ap_ST_fsm_state220 => 
                ap_NS_fsm <= ap_ST_fsm_state221;
            when ap_ST_fsm_state221 => 
                ap_NS_fsm <= ap_ST_fsm_state222;
            when ap_ST_fsm_state222 => 
                ap_NS_fsm <= ap_ST_fsm_state223;
            when ap_ST_fsm_state223 => 
                ap_NS_fsm <= ap_ST_fsm_state224;
            when ap_ST_fsm_state224 => 
                ap_NS_fsm <= ap_ST_fsm_state225;
            when ap_ST_fsm_state225 => 
                ap_NS_fsm <= ap_ST_fsm_state226;
            when ap_ST_fsm_state226 => 
                ap_NS_fsm <= ap_ST_fsm_state227;
            when ap_ST_fsm_state227 => 
                ap_NS_fsm <= ap_ST_fsm_state228;
            when ap_ST_fsm_state228 => 
                ap_NS_fsm <= ap_ST_fsm_state229;
            when ap_ST_fsm_state229 => 
                ap_NS_fsm <= ap_ST_fsm_state230;
            when ap_ST_fsm_state230 => 
                ap_NS_fsm <= ap_ST_fsm_state231;
            when ap_ST_fsm_state231 => 
                ap_NS_fsm <= ap_ST_fsm_state232;
            when ap_ST_fsm_state232 => 
                ap_NS_fsm <= ap_ST_fsm_state233;
            when ap_ST_fsm_state233 => 
                ap_NS_fsm <= ap_ST_fsm_state234;
            when ap_ST_fsm_state234 => 
                ap_NS_fsm <= ap_ST_fsm_state235;
            when ap_ST_fsm_state235 => 
                ap_NS_fsm <= ap_ST_fsm_state236;
            when ap_ST_fsm_state236 => 
                ap_NS_fsm <= ap_ST_fsm_state237;
            when ap_ST_fsm_state237 => 
                ap_NS_fsm <= ap_ST_fsm_state238;
            when ap_ST_fsm_state238 => 
                ap_NS_fsm <= ap_ST_fsm_state239;
            when ap_ST_fsm_state239 => 
                ap_NS_fsm <= ap_ST_fsm_state240;
            when ap_ST_fsm_state240 => 
                ap_NS_fsm <= ap_ST_fsm_state241;
            when ap_ST_fsm_state241 => 
                ap_NS_fsm <= ap_ST_fsm_state242;
            when ap_ST_fsm_state242 => 
                ap_NS_fsm <= ap_ST_fsm_state243;
            when ap_ST_fsm_state243 => 
                ap_NS_fsm <= ap_ST_fsm_state244;
            when ap_ST_fsm_state244 => 
                ap_NS_fsm <= ap_ST_fsm_state245;
            when ap_ST_fsm_state245 => 
                ap_NS_fsm <= ap_ST_fsm_state246;
            when ap_ST_fsm_state246 => 
                ap_NS_fsm <= ap_ST_fsm_state247;
            when ap_ST_fsm_state247 => 
                ap_NS_fsm <= ap_ST_fsm_state248;
            when ap_ST_fsm_state248 => 
                ap_NS_fsm <= ap_ST_fsm_state249;
            when ap_ST_fsm_state249 => 
                ap_NS_fsm <= ap_ST_fsm_state250;
            when ap_ST_fsm_state250 => 
                ap_NS_fsm <= ap_ST_fsm_state251;
            when ap_ST_fsm_state251 => 
                ap_NS_fsm <= ap_ST_fsm_state252;
            when ap_ST_fsm_state252 => 
                ap_NS_fsm <= ap_ST_fsm_state253;
            when ap_ST_fsm_state253 => 
                ap_NS_fsm <= ap_ST_fsm_state254;
            when ap_ST_fsm_state254 => 
                ap_NS_fsm <= ap_ST_fsm_state255;
            when ap_ST_fsm_state255 => 
                ap_NS_fsm <= ap_ST_fsm_state256;
            when ap_ST_fsm_state256 => 
                ap_NS_fsm <= ap_ST_fsm_state257;
            when ap_ST_fsm_state257 => 
                ap_NS_fsm <= ap_ST_fsm_state258;
            when ap_ST_fsm_state258 => 
                ap_NS_fsm <= ap_ST_fsm_state259;
            when ap_ST_fsm_state259 => 
                ap_NS_fsm <= ap_ST_fsm_state260;
            when ap_ST_fsm_state260 => 
                ap_NS_fsm <= ap_ST_fsm_state261;
            when ap_ST_fsm_state261 => 
                ap_NS_fsm <= ap_ST_fsm_state262;
            when ap_ST_fsm_state262 => 
                ap_NS_fsm <= ap_ST_fsm_state263;
            when ap_ST_fsm_state263 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when ap_ST_fsm_state264 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state264) and (grp_MadgwickAHRSupdateIM_fu_168_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state263;
                else
                    ap_NS_fsm <= ap_ST_fsm_state264;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state100 <= ap_CS_fsm(99);
    ap_CS_fsm_state101 <= ap_CS_fsm(100);
    ap_CS_fsm_state102 <= ap_CS_fsm(101);
    ap_CS_fsm_state104 <= ap_CS_fsm(103);
    ap_CS_fsm_state105 <= ap_CS_fsm(104);
    ap_CS_fsm_state106 <= ap_CS_fsm(105);
    ap_CS_fsm_state109 <= ap_CS_fsm(108);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state110 <= ap_CS_fsm(109);
    ap_CS_fsm_state111 <= ap_CS_fsm(110);
    ap_CS_fsm_state118 <= ap_CS_fsm(117);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state122 <= ap_CS_fsm(121);
    ap_CS_fsm_state123 <= ap_CS_fsm(122);
    ap_CS_fsm_state125 <= ap_CS_fsm(124);
    ap_CS_fsm_state126 <= ap_CS_fsm(125);
    ap_CS_fsm_state127 <= ap_CS_fsm(126);
    ap_CS_fsm_state128 <= ap_CS_fsm(127);
    ap_CS_fsm_state129 <= ap_CS_fsm(128);
    ap_CS_fsm_state130 <= ap_CS_fsm(129);
    ap_CS_fsm_state131 <= ap_CS_fsm(130);
    ap_CS_fsm_state132 <= ap_CS_fsm(131);
    ap_CS_fsm_state133 <= ap_CS_fsm(132);
    ap_CS_fsm_state134 <= ap_CS_fsm(133);
    ap_CS_fsm_state135 <= ap_CS_fsm(134);
    ap_CS_fsm_state136 <= ap_CS_fsm(135);
    ap_CS_fsm_state137 <= ap_CS_fsm(136);
    ap_CS_fsm_state138 <= ap_CS_fsm(137);
    ap_CS_fsm_state139 <= ap_CS_fsm(138);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state140 <= ap_CS_fsm(139);
    ap_CS_fsm_state141 <= ap_CS_fsm(140);
    ap_CS_fsm_state142 <= ap_CS_fsm(141);
    ap_CS_fsm_state143 <= ap_CS_fsm(142);
    ap_CS_fsm_state144 <= ap_CS_fsm(143);
    ap_CS_fsm_state145 <= ap_CS_fsm(144);
    ap_CS_fsm_state146 <= ap_CS_fsm(145);
    ap_CS_fsm_state147 <= ap_CS_fsm(146);
    ap_CS_fsm_state149 <= ap_CS_fsm(148);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state150 <= ap_CS_fsm(149);
    ap_CS_fsm_state151 <= ap_CS_fsm(150);
    ap_CS_fsm_state152 <= ap_CS_fsm(151);
    ap_CS_fsm_state154 <= ap_CS_fsm(153);
    ap_CS_fsm_state155 <= ap_CS_fsm(154);
    ap_CS_fsm_state156 <= ap_CS_fsm(155);
    ap_CS_fsm_state159 <= ap_CS_fsm(158);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state160 <= ap_CS_fsm(159);
    ap_CS_fsm_state161 <= ap_CS_fsm(160);
    ap_CS_fsm_state164 <= ap_CS_fsm(163);
    ap_CS_fsm_state165 <= ap_CS_fsm(164);
    ap_CS_fsm_state166 <= ap_CS_fsm(165);
    ap_CS_fsm_state169 <= ap_CS_fsm(168);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state170 <= ap_CS_fsm(169);
    ap_CS_fsm_state174 <= ap_CS_fsm(173);
    ap_CS_fsm_state175 <= ap_CS_fsm(174);
    ap_CS_fsm_state178 <= ap_CS_fsm(177);
    ap_CS_fsm_state179 <= ap_CS_fsm(178);
    ap_CS_fsm_state182 <= ap_CS_fsm(181);
    ap_CS_fsm_state183 <= ap_CS_fsm(182);
    ap_CS_fsm_state186 <= ap_CS_fsm(185);
    ap_CS_fsm_state187 <= ap_CS_fsm(186);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state191 <= ap_CS_fsm(190);
    ap_CS_fsm_state192 <= ap_CS_fsm(191);
    ap_CS_fsm_state195 <= ap_CS_fsm(194);
    ap_CS_fsm_state196 <= ap_CS_fsm(195);
    ap_CS_fsm_state197 <= ap_CS_fsm(196);
    ap_CS_fsm_state198 <= ap_CS_fsm(197);
    ap_CS_fsm_state199 <= ap_CS_fsm(198);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state200 <= ap_CS_fsm(199);
    ap_CS_fsm_state203 <= ap_CS_fsm(202);
    ap_CS_fsm_state204 <= ap_CS_fsm(203);
    ap_CS_fsm_state208 <= ap_CS_fsm(207);
    ap_CS_fsm_state209 <= ap_CS_fsm(208);
    ap_CS_fsm_state210 <= ap_CS_fsm(209);
    ap_CS_fsm_state212 <= ap_CS_fsm(211);
    ap_CS_fsm_state213 <= ap_CS_fsm(212);
    ap_CS_fsm_state214 <= ap_CS_fsm(213);
    ap_CS_fsm_state217 <= ap_CS_fsm(216);
    ap_CS_fsm_state218 <= ap_CS_fsm(217);
    ap_CS_fsm_state219 <= ap_CS_fsm(218);
    ap_CS_fsm_state220 <= ap_CS_fsm(219);
    ap_CS_fsm_state223 <= ap_CS_fsm(222);
    ap_CS_fsm_state224 <= ap_CS_fsm(223);
    ap_CS_fsm_state225 <= ap_CS_fsm(224);
    ap_CS_fsm_state228 <= ap_CS_fsm(227);
    ap_CS_fsm_state229 <= ap_CS_fsm(228);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state230 <= ap_CS_fsm(229);
    ap_CS_fsm_state233 <= ap_CS_fsm(232);
    ap_CS_fsm_state234 <= ap_CS_fsm(233);
    ap_CS_fsm_state238 <= ap_CS_fsm(237);
    ap_CS_fsm_state239 <= ap_CS_fsm(238);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state242 <= ap_CS_fsm(241);
    ap_CS_fsm_state243 <= ap_CS_fsm(242);
    ap_CS_fsm_state246 <= ap_CS_fsm(245);
    ap_CS_fsm_state247 <= ap_CS_fsm(246);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state250 <= ap_CS_fsm(249);
    ap_CS_fsm_state251 <= ap_CS_fsm(250);
    ap_CS_fsm_state255 <= ap_CS_fsm(254);
    ap_CS_fsm_state256 <= ap_CS_fsm(255);
    ap_CS_fsm_state259 <= ap_CS_fsm(258);
    ap_CS_fsm_state260 <= ap_CS_fsm(259);
    ap_CS_fsm_state263 <= ap_CS_fsm(262);
    ap_CS_fsm_state264 <= ap_CS_fsm(263);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57);
    ap_CS_fsm_state59 <= ap_CS_fsm(58);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62);
    ap_CS_fsm_state64 <= ap_CS_fsm(63);
    ap_CS_fsm_state65 <= ap_CS_fsm(64);
    ap_CS_fsm_state66 <= ap_CS_fsm(65);
    ap_CS_fsm_state67 <= ap_CS_fsm(66);
    ap_CS_fsm_state68 <= ap_CS_fsm(67);
    ap_CS_fsm_state69 <= ap_CS_fsm(68);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state70 <= ap_CS_fsm(69);
    ap_CS_fsm_state71 <= ap_CS_fsm(70);
    ap_CS_fsm_state72 <= ap_CS_fsm(71);
    ap_CS_fsm_state73 <= ap_CS_fsm(72);
    ap_CS_fsm_state74 <= ap_CS_fsm(73);
    ap_CS_fsm_state75 <= ap_CS_fsm(74);
    ap_CS_fsm_state76 <= ap_CS_fsm(75);
    ap_CS_fsm_state77 <= ap_CS_fsm(76);
    ap_CS_fsm_state78 <= ap_CS_fsm(77);
    ap_CS_fsm_state79 <= ap_CS_fsm(78);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state80 <= ap_CS_fsm(79);
    ap_CS_fsm_state81 <= ap_CS_fsm(80);
    ap_CS_fsm_state82 <= ap_CS_fsm(81);
    ap_CS_fsm_state83 <= ap_CS_fsm(82);
    ap_CS_fsm_state84 <= ap_CS_fsm(83);
    ap_CS_fsm_state85 <= ap_CS_fsm(84);
    ap_CS_fsm_state86 <= ap_CS_fsm(85);
    ap_CS_fsm_state87 <= ap_CS_fsm(86);
    ap_CS_fsm_state88 <= ap_CS_fsm(87);
    ap_CS_fsm_state89 <= ap_CS_fsm(88);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_CS_fsm_state90 <= ap_CS_fsm(89);
    ap_CS_fsm_state91 <= ap_CS_fsm(90);
    ap_CS_fsm_state92 <= ap_CS_fsm(91);
    ap_CS_fsm_state93 <= ap_CS_fsm(92);
    ap_CS_fsm_state94 <= ap_CS_fsm(93);
    ap_CS_fsm_state95 <= ap_CS_fsm(94);
    ap_CS_fsm_state96 <= ap_CS_fsm(95);
    ap_CS_fsm_state97 <= ap_CS_fsm(96);
    ap_CS_fsm_state99 <= ap_CS_fsm(98);

    ap_done_assign_proc : process(ap_CS_fsm_state263)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state263)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_qDot8_phi_fu_141_p4_assign_proc : process(reg_762, or_cond3_reg_1442, ap_CS_fsm_state209, qDot8_reg_138)
    begin
        if (((ap_const_lv1_0 = or_cond3_reg_1442) and (ap_const_logic_1 = ap_CS_fsm_state209))) then 
            ap_phi_mux_qDot8_phi_fu_141_p4 <= reg_762;
        else 
            ap_phi_mux_qDot8_phi_fu_141_p4 <= qDot8_reg_138;
        end if; 
    end process;


    ap_phi_mux_qDot_phi_fu_131_p4_assign_proc : process(reg_770, or_cond3_reg_1442, qDot_reg_128, ap_CS_fsm_state209)
    begin
        if (((ap_const_lv1_0 = or_cond3_reg_1442) and (ap_const_logic_1 = ap_CS_fsm_state209))) then 
            ap_phi_mux_qDot_phi_fu_131_p4 <= reg_770;
        else 
            ap_phi_mux_qDot_phi_fu_131_p4 <= qDot_reg_128;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state263)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state263)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ax_to_int_fu_979_p1 <= ax;
    ay_to_int_fu_1019_p1 <= ay;
    az_to_int_fu_1059_p1 <= az;
    grp_MadgwickAHRSupdateIM_fu_168_ap_start <= ap_reg_grp_MadgwickAHRSupdateIM_fu_168_ap_start;

    grp_fu_194_opcode_assign_proc : process(ap_CS_fsm_state214, ap_CS_fsm_state224, ap_CS_fsm_state63, ap_CS_fsm_state213, ap_CS_fsm_state71, ap_CS_fsm_state127, ap_CS_fsm_state135, ap_CS_fsm_state11, ap_CS_fsm_state5, ap_CS_fsm_state10, ap_CS_fsm_state41, ap_CS_fsm_state67, ap_CS_fsm_state75, ap_CS_fsm_state142, ap_CS_fsm_state6, ap_CS_fsm_state91, ap_CS_fsm_state229, ap_CS_fsm_state96, ap_CS_fsm_state105, ap_CS_fsm_state133, ap_CS_fsm_state76, ap_CS_fsm_state7, ap_CS_fsm_state80, ap_CS_fsm_state101, ap_CS_fsm_state136, ap_CS_fsm_state145, ap_CS_fsm_state150, ap_CS_fsm_state155, ap_CS_fsm_state146, ap_CS_fsm_state151, ap_CS_fsm_state89, ap_CS_fsm_state134, ap_CS_fsm_state132, ap_CS_fsm_state70, ap_CS_fsm_state72, ap_CS_fsm_state87, ap_CS_fsm_state141, ap_CS_fsm_state77, ap_CS_fsm_state82, ap_CS_fsm_state90, ap_CS_fsm_state95, ap_CS_fsm_state100, ap_CS_fsm_state85, ap_CS_fsm_state12, ap_CS_fsm_state24, ap_CS_fsm_state29, ap_CS_fsm_state46, ap_CS_fsm_state92, ap_CS_fsm_state97, ap_CS_fsm_state106, ap_CS_fsm_state118, ap_CS_fsm_state147, ap_CS_fsm_state152, ap_CS_fsm_state160, ap_CS_fsm_state165, ap_CS_fsm_state170, ap_CS_fsm_state187, ap_CS_fsm_state204, ap_CS_fsm_state234, ap_CS_fsm_state251)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state136) or (ap_const_logic_1 = ap_CS_fsm_state101) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state133) or (ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state91) or (ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state251) or (ap_const_logic_1 = ap_CS_fsm_state204) or (ap_const_logic_1 = ap_CS_fsm_state187) or (ap_const_logic_1 = ap_CS_fsm_state118) or (ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state92) or (ap_const_logic_1 = ap_CS_fsm_state100) or (ap_const_logic_1 = ap_CS_fsm_state90) or (ap_const_logic_1 = ap_CS_fsm_state141) or (ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state132) or (ap_const_logic_1 = ap_CS_fsm_state134))) then 
            grp_fu_194_opcode <= ap_const_lv2_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state155) or (ap_const_logic_1 = ap_CS_fsm_state150) or (ap_const_logic_1 = ap_CS_fsm_state145) or (ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state105) or (ap_const_logic_1 = ap_CS_fsm_state229) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state142) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state135) or (ap_const_logic_1 = ap_CS_fsm_state127) or (ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state213) or (ap_const_logic_1 = ap_CS_fsm_state224) or (ap_const_logic_1 = ap_CS_fsm_state214) or (ap_const_logic_1 = ap_CS_fsm_state234) or (ap_const_logic_1 = ap_CS_fsm_state170) or (ap_const_logic_1 = ap_CS_fsm_state165) or (ap_const_logic_1 = ap_CS_fsm_state160) or (ap_const_logic_1 = ap_CS_fsm_state152) or (ap_const_logic_1 = ap_CS_fsm_state147) or (ap_const_logic_1 = ap_CS_fsm_state106) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state95) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state89) or (ap_const_logic_1 = ap_CS_fsm_state151) or (ap_const_logic_1 = ap_CS_fsm_state146))) then 
            grp_fu_194_opcode <= ap_const_lv2_0;
        else 
            grp_fu_194_opcode <= "XX";
        end if; 
    end process;


    grp_fu_194_p0_assign_proc : process(q2, q0, ap_CS_fsm_state214, ap_CS_fsm_state224, ap_CS_fsm_state63, ap_CS_fsm_state213, ap_CS_fsm_state71, ap_CS_fsm_state127, ap_CS_fsm_state135, reg_404, ap_CS_fsm_state11, reg_424, ap_CS_fsm_state5, ap_CS_fsm_state10, ap_CS_fsm_state41, ap_CS_fsm_state67, ap_CS_fsm_state75, ap_CS_fsm_state142, ap_CS_fsm_state6, ap_CS_fsm_state91, ap_CS_fsm_state229, reg_474, ap_CS_fsm_state96, ap_CS_fsm_state105, ap_CS_fsm_state133, ap_CS_fsm_state76, ap_CS_fsm_state7, ap_CS_fsm_state80, reg_508, ap_CS_fsm_state101, ap_CS_fsm_state136, ap_CS_fsm_state145, ap_CS_fsm_state150, ap_CS_fsm_state155, reg_516, ap_CS_fsm_state146, ap_CS_fsm_state151, reg_526, reg_538, ap_CS_fsm_state89, ap_CS_fsm_state134, ap_CS_fsm_state132, ap_CS_fsm_state70, reg_633, ap_CS_fsm_state72, ap_CS_fsm_state87, ap_CS_fsm_state141, reg_670, ap_CS_fsm_state77, ap_CS_fsm_state82, ap_CS_fsm_state90, reg_691, reg_739, reg_755, reg_770, reg_778, reg_795, reg_801, ap_CS_fsm_state95, ap_CS_fsm_state100, q1q3_reg_1504, tmp_193_reg_1516, ap_CS_fsm_state85, ap_CS_fsm_state12, ap_CS_fsm_state24, ap_CS_fsm_state29, ap_CS_fsm_state46, ap_CS_fsm_state92, ap_CS_fsm_state97, ap_CS_fsm_state106, ap_CS_fsm_state118, ap_CS_fsm_state147, ap_CS_fsm_state152, ap_CS_fsm_state160, ap_CS_fsm_state165, ap_CS_fsm_state170, ap_CS_fsm_state187, ap_CS_fsm_state204, ap_CS_fsm_state234, ap_CS_fsm_state251)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state214)) then 
            grp_fu_194_p0 <= q2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state213)) then 
            grp_fu_194_p0 <= q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state145)) then 
            grp_fu_194_p0 <= reg_795;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state136) or (ap_const_logic_1 = ap_CS_fsm_state142))) then 
            grp_fu_194_p0 <= reg_778;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state135)) then 
            grp_fu_194_p0 <= reg_670;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state133)) then 
            grp_fu_194_p0 <= reg_633;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state118)) then 
            grp_fu_194_p0 <= q1q3_reg_1504;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            grp_fu_194_p0 <= reg_801;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state91))) then 
            grp_fu_194_p0 <= ap_const_lv32_3F000000;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state170) or (ap_const_logic_1 = ap_CS_fsm_state165) or (ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state141))) then 
            grp_fu_194_p0 <= reg_770;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state155) or (ap_const_logic_1 = ap_CS_fsm_state150) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state105) or (ap_const_logic_1 = ap_CS_fsm_state100) or (ap_const_logic_1 = ap_CS_fsm_state95) or (ap_const_logic_1 = ap_CS_fsm_state90))) then 
            grp_fu_194_p0 <= reg_538;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            grp_fu_194_p0 <= reg_755;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            grp_fu_194_p0 <= tmp_193_reg_1516;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            grp_fu_194_p0 <= reg_739;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            grp_fu_194_p0 <= reg_691;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state251) or (ap_const_logic_1 = ap_CS_fsm_state187))) then 
            grp_fu_194_p0 <= ap_const_lv32_3FC00000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_194_p0 <= reg_526;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state152) or (ap_const_logic_1 = ap_CS_fsm_state147))) then 
            grp_fu_194_p0 <= reg_516;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state229) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state234) or (ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state92) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state132) or (ap_const_logic_1 = ap_CS_fsm_state151) or (ap_const_logic_1 = ap_CS_fsm_state146))) then 
            grp_fu_194_p0 <= reg_508;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state106) or (ap_const_logic_1 = ap_CS_fsm_state134))) then 
            grp_fu_194_p0 <= reg_474;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state127) or (ap_const_logic_1 = ap_CS_fsm_state160) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state89))) then 
            grp_fu_194_p0 <= reg_424;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state224) or (ap_const_logic_1 = ap_CS_fsm_state204))) then 
            grp_fu_194_p0 <= reg_404;
        else 
            grp_fu_194_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_194_p1_assign_proc : process(ap_CS_fsm_state214, ap_CS_fsm_state224, ap_CS_fsm_state63, ap_CS_fsm_state213, ap_CS_fsm_state71, ap_CS_fsm_state127, ap_CS_fsm_state135, reg_404, reg_416, ap_CS_fsm_state11, reg_424, ap_CS_fsm_state5, ap_CS_fsm_state10, ap_CS_fsm_state41, ap_CS_fsm_state67, ap_CS_fsm_state75, reg_439, ap_CS_fsm_state142, ap_CS_fsm_state6, ap_CS_fsm_state91, ap_CS_fsm_state229, reg_474, ap_CS_fsm_state96, ap_CS_fsm_state105, ap_CS_fsm_state133, reg_484, ap_CS_fsm_state76, ap_CS_fsm_state7, ap_CS_fsm_state80, ap_CS_fsm_state101, ap_CS_fsm_state136, ap_CS_fsm_state145, ap_CS_fsm_state150, ap_CS_fsm_state155, ap_CS_fsm_state146, ap_CS_fsm_state151, ap_CS_fsm_state89, reg_560, reg_571, ap_CS_fsm_state134, ap_CS_fsm_state132, reg_606, ap_CS_fsm_state70, reg_623, reg_633, ap_CS_fsm_state72, ap_CS_fsm_state87, ap_CS_fsm_state141, reg_656, reg_670, reg_677, ap_CS_fsm_state77, ap_CS_fsm_state82, ap_CS_fsm_state90, reg_691, reg_700, reg_719, reg_725, reg_734, reg_746, ap_CS_fsm_state95, ap_CS_fsm_state100, ap_CS_fsm_state85, ap_CS_fsm_state12, ap_CS_fsm_state24, ap_CS_fsm_state29, ap_CS_fsm_state46, ap_CS_fsm_state92, ap_CS_fsm_state97, ap_CS_fsm_state106, ap_CS_fsm_state118, ap_CS_fsm_state147, ap_CS_fsm_state152, ap_CS_fsm_state160, ap_CS_fsm_state165, ap_CS_fsm_state170, ap_CS_fsm_state187, ap_CS_fsm_state204, ap_CS_fsm_state234, ap_CS_fsm_state251)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state155)) then 
            grp_fu_194_p1 <= reg_571;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state152)) then 
            grp_fu_194_p1 <= reg_560;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state150)) then 
            grp_fu_194_p1 <= reg_623;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state145)) then 
            grp_fu_194_p1 <= reg_677;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state142)) then 
            grp_fu_194_p1 <= reg_633;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state135) or (ap_const_logic_1 = ap_CS_fsm_state118))) then 
            grp_fu_194_p1 <= reg_719;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state101) or (ap_const_logic_1 = ap_CS_fsm_state133))) then 
            grp_fu_194_p1 <= reg_656;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state96)) then 
            grp_fu_194_p1 <= reg_746;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            grp_fu_194_p1 <= reg_725;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state147) or (ap_const_logic_1 = ap_CS_fsm_state85))) then 
            grp_fu_194_p1 <= reg_606;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state134) or (ap_const_logic_1 = ap_CS_fsm_state89))) then 
            grp_fu_194_p1 <= reg_691;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state90) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state146))) then 
            grp_fu_194_p1 <= reg_670;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state136) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state70))) then 
            grp_fu_194_p1 <= reg_734;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            grp_fu_194_p1 <= reg_700;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state92) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state151))) then 
            grp_fu_194_p1 <= reg_474;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state105) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state214) or (ap_const_logic_1 = ap_CS_fsm_state204) or (ap_const_logic_1 = ap_CS_fsm_state187) or (ap_const_logic_1 = ap_CS_fsm_state170) or (ap_const_logic_1 = ap_CS_fsm_state165) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state100) or (ap_const_logic_1 = ap_CS_fsm_state95) or (ap_const_logic_1 = ap_CS_fsm_state141))) then 
            grp_fu_194_p1 <= reg_424;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state229) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state213) or (ap_const_logic_1 = ap_CS_fsm_state251) or (ap_const_logic_1 = ap_CS_fsm_state234))) then 
            grp_fu_194_p1 <= reg_404;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state127) or (ap_const_logic_1 = ap_CS_fsm_state106) or (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            grp_fu_194_p1 <= reg_484;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state160) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state132))) then 
            grp_fu_194_p1 <= reg_439;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state224))) then 
            grp_fu_194_p1 <= reg_416;
        else 
            grp_fu_194_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_198_opcode_assign_proc : process(ap_CS_fsm_state214, ap_CS_fsm_state213, ap_CS_fsm_state71, ap_CS_fsm_state127, ap_CS_fsm_state135, ap_CS_fsm_state67, ap_CS_fsm_state75, ap_CS_fsm_state6, ap_CS_fsm_state96, ap_CS_fsm_state105, ap_CS_fsm_state80, ap_CS_fsm_state136, ap_CS_fsm_state146, ap_CS_fsm_state151, ap_CS_fsm_state89, ap_CS_fsm_state134, ap_CS_fsm_state132, ap_CS_fsm_state72, ap_CS_fsm_state87, ap_CS_fsm_state141, ap_CS_fsm_state77, ap_CS_fsm_state82, ap_CS_fsm_state95, ap_CS_fsm_state100, ap_CS_fsm_state12, ap_CS_fsm_state46, ap_CS_fsm_state92, ap_CS_fsm_state97, ap_CS_fsm_state118, ap_CS_fsm_state204)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state136) or (ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state105) or (ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state204) or (ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state100) or (ap_const_logic_1 = ap_CS_fsm_state95) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state132) or (ap_const_logic_1 = ap_CS_fsm_state134))) then 
            grp_fu_198_opcode <= ap_const_lv2_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state135) or (ap_const_logic_1 = ap_CS_fsm_state127) or (ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state213) or (ap_const_logic_1 = ap_CS_fsm_state214) or (ap_const_logic_1 = ap_CS_fsm_state118) or (ap_const_logic_1 = ap_CS_fsm_state92) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state141) or (ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state89) or (ap_const_logic_1 = ap_CS_fsm_state151) or (ap_const_logic_1 = ap_CS_fsm_state146))) then 
            grp_fu_198_opcode <= ap_const_lv2_0;
        else 
            grp_fu_198_opcode <= "XX";
        end if; 
    end process;


    grp_fu_198_p0_assign_proc : process(q1, q3, ap_CS_fsm_state214, ap_CS_fsm_state213, ap_CS_fsm_state71, ap_CS_fsm_state127, ap_CS_fsm_state135, reg_416, ap_CS_fsm_state67, ap_CS_fsm_state75, reg_451, ap_CS_fsm_state6, ap_CS_fsm_state96, ap_CS_fsm_state105, ap_CS_fsm_state80, ap_CS_fsm_state136, ap_CS_fsm_state146, ap_CS_fsm_state151, reg_526, reg_538, ap_CS_fsm_state89, ap_CS_fsm_state134, ap_CS_fsm_state132, reg_606, ap_CS_fsm_state72, ap_CS_fsm_state87, ap_CS_fsm_state141, reg_677, ap_CS_fsm_state77, ap_CS_fsm_state82, reg_700, reg_707, reg_719, reg_725, reg_762, reg_778, reg_788, reg_801, ap_CS_fsm_state95, ap_CS_fsm_state100, reg_810, tmp_239_reg_1599, ap_CS_fsm_state12, ap_CS_fsm_state46, ap_CS_fsm_state92, ap_CS_fsm_state97, ap_CS_fsm_state118, ap_CS_fsm_state204)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state214)) then 
            grp_fu_198_p0 <= q3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state213)) then 
            grp_fu_198_p0 <= q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state204)) then 
            grp_fu_198_p0 <= reg_416;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state141)) then 
            grp_fu_198_p0 <= tmp_239_reg_1599;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state136)) then 
            grp_fu_198_p0 <= reg_788;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state135)) then 
            grp_fu_198_p0 <= reg_725;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state132)) then 
            grp_fu_198_p0 <= reg_762;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state118)) then 
            grp_fu_198_p0 <= reg_719;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state105) or (ap_const_logic_1 = ap_CS_fsm_state100))) then 
            grp_fu_198_p0 <= reg_810;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state96)) then 
            grp_fu_198_p0 <= reg_801;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            grp_fu_198_p0 <= ap_const_lv32_3F800000;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state134) or (ap_const_logic_1 = ap_CS_fsm_state89))) then 
            grp_fu_198_p0 <= reg_700;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            grp_fu_198_p0 <= reg_778;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state127))) then 
            grp_fu_198_p0 <= reg_606;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state92) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state151) or (ap_const_logic_1 = ap_CS_fsm_state146))) then 
            grp_fu_198_p0 <= reg_526;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            grp_fu_198_p0 <= reg_677;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            grp_fu_198_p0 <= reg_707;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            grp_fu_198_p0 <= ap_const_lv32_3FC00000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_198_p0 <= reg_538;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_198_p0 <= reg_451;
        else 
            grp_fu_198_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_198_p1_assign_proc : process(ap_CS_fsm_state214, ap_CS_fsm_state213, ap_CS_fsm_state71, ap_CS_fsm_state127, ap_CS_fsm_state135, reg_416, reg_424, ap_CS_fsm_state67, ap_CS_fsm_state75, reg_439, reg_458, ap_CS_fsm_state6, reg_474, ap_CS_fsm_state96, ap_CS_fsm_state105, reg_484, ap_CS_fsm_state80, ap_CS_fsm_state136, ap_CS_fsm_state146, ap_CS_fsm_state151, ap_CS_fsm_state89, reg_560, reg_581, ap_CS_fsm_state134, ap_CS_fsm_state132, reg_623, ap_CS_fsm_state72, ap_CS_fsm_state87, ap_CS_fsm_state141, reg_656, ap_CS_fsm_state77, ap_CS_fsm_state82, reg_691, reg_700, reg_707, reg_739, reg_746, ap_CS_fsm_state95, ap_CS_fsm_state100, q1q3_reg_1504, q2q3_reg_1511, ap_CS_fsm_state12, ap_CS_fsm_state46, ap_CS_fsm_state92, ap_CS_fsm_state97, ap_CS_fsm_state118, ap_CS_fsm_state204)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state146)) then 
            grp_fu_198_p1 <= reg_656;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state134)) then 
            grp_fu_198_p1 <= reg_707;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state132)) then 
            grp_fu_198_p1 <= reg_560;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state118)) then 
            grp_fu_198_p1 <= q1q3_reg_1504;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            grp_fu_198_p1 <= reg_739;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state135))) then 
            grp_fu_198_p1 <= reg_746;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state100) or (ap_const_logic_1 = ap_CS_fsm_state95))) then 
            grp_fu_198_p1 <= reg_691;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state136) or (ap_const_logic_1 = ap_CS_fsm_state127) or (ap_const_logic_1 = ap_CS_fsm_state89))) then 
            grp_fu_198_p1 <= reg_623;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            grp_fu_198_p1 <= reg_424;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state92) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state141) or (ap_const_logic_1 = ap_CS_fsm_state87))) then 
            grp_fu_198_p1 <= reg_484;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            grp_fu_198_p1 <= reg_474;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            grp_fu_198_p1 <= reg_700;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            grp_fu_198_p1 <= q2q3_reg_1511;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            grp_fu_198_p1 <= reg_581;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state214) or (ap_const_logic_1 = ap_CS_fsm_state204) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state151))) then 
            grp_fu_198_p1 <= reg_439;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state213) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            grp_fu_198_p1 <= reg_416;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_198_p1 <= reg_458;
        else 
            grp_fu_198_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_204_opcode_assign_proc : process(ap_CS_fsm_state127, ap_CS_fsm_state135, ap_CS_fsm_state136, ap_CS_fsm_state89, ap_CS_fsm_state132, ap_CS_fsm_state204)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state204) or (ap_const_logic_1 = ap_CS_fsm_state132))) then 
            grp_fu_204_opcode <= ap_const_lv2_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state136) or (ap_const_logic_1 = ap_CS_fsm_state135) or (ap_const_logic_1 = ap_CS_fsm_state127) or (ap_const_logic_1 = ap_CS_fsm_state89))) then 
            grp_fu_204_opcode <= ap_const_lv2_0;
        else 
            grp_fu_204_opcode <= "XX";
        end if; 
    end process;


    grp_fu_204_p0_assign_proc : process(ap_CS_fsm_state127, ap_CS_fsm_state135, reg_451, ap_CS_fsm_state136, ap_CS_fsm_state89, reg_581, ap_CS_fsm_state132, reg_817, tmp_277_reg_1579, ap_CS_fsm_state204)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state204)) then 
            grp_fu_204_p0 <= reg_451;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state136)) then 
            grp_fu_204_p0 <= tmp_277_reg_1579;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state132)) then 
            grp_fu_204_p0 <= reg_817;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state135) or (ap_const_logic_1 = ap_CS_fsm_state127) or (ap_const_logic_1 = ap_CS_fsm_state89))) then 
            grp_fu_204_p0 <= reg_581;
        else 
            grp_fu_204_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_204_p1_assign_proc : process(ap_CS_fsm_state127, ap_CS_fsm_state135, ap_CS_fsm_state136, ap_CS_fsm_state89, reg_560, reg_571, reg_588, ap_CS_fsm_state132, tmp_278_reg_1584, ap_CS_fsm_state204)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state204)) then 
            grp_fu_204_p1 <= reg_560;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state136)) then 
            grp_fu_204_p1 <= tmp_278_reg_1584;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state132)) then 
            grp_fu_204_p1 <= reg_571;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state135) or (ap_const_logic_1 = ap_CS_fsm_state127) or (ap_const_logic_1 = ap_CS_fsm_state89))) then 
            grp_fu_204_p1 <= reg_588;
        else 
            grp_fu_204_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_208_opcode_assign_proc : process(ap_CS_fsm_state89, ap_CS_fsm_state132, ap_CS_fsm_state204)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state204)) then 
            grp_fu_208_opcode <= ap_const_lv2_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state132) or (ap_const_logic_1 = ap_CS_fsm_state89))) then 
            grp_fu_208_opcode <= ap_const_lv2_0;
        else 
            grp_fu_208_opcode <= "XX";
        end if; 
    end process;


    grp_fu_208_p0_assign_proc : process(reg_458, reg_484, ap_CS_fsm_state89, ap_CS_fsm_state132, tmp_274_reg_1543, ap_CS_fsm_state204)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state204)) then 
            grp_fu_208_p0 <= reg_458;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state132)) then 
            grp_fu_208_p0 <= reg_484;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            grp_fu_208_p0 <= tmp_274_reg_1543;
        else 
            grp_fu_208_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_208_p1_assign_proc : process(ap_CS_fsm_state89, reg_571, ap_CS_fsm_state132, reg_606, tmp_275_reg_1548, ap_CS_fsm_state204)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state204)) then 
            grp_fu_208_p1 <= reg_571;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state132)) then 
            grp_fu_208_p1 <= reg_606;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            grp_fu_208_p1 <= tmp_275_reg_1548;
        else 
            grp_fu_208_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_214_p0_assign_proc : process(ap_CS_fsm_state1, ax, az, mx, mz, q1, q2, q3, q0, reg_344, ap_CS_fsm_state8, ap_CS_fsm_state60, ap_CS_fsm_state125, ap_CS_fsm_state260, reg_353, ap_CS_fsm_state63, ap_CS_fsm_state66, ap_CS_fsm_state128, ap_CS_fsm_state131, ap_CS_fsm_state2, ap_CS_fsm_state61, ap_CS_fsm_state64, ap_CS_fsm_state69, ap_CS_fsm_state126, ap_CS_fsm_state225, ap_CS_fsm_state59, ap_CS_fsm_state65, ap_CS_fsm_state129, ap_CS_fsm_state220, reg_380, ap_CS_fsm_state68, ap_CS_fsm_state71, ap_CS_fsm_state135, reg_390, ap_CS_fsm_state3, ap_CS_fsm_state55, ap_CS_fsm_state130, reg_396, ap_CS_fsm_state62, reg_404, ap_CS_fsm_state20, reg_424, ap_CS_fsm_state37, ap_CS_fsm_state67, ap_CS_fsm_state84, ap_CS_fsm_state88, ap_CS_fsm_state140, reg_439, ap_CS_fsm_state138, reg_465, ap_CS_fsm_state6, ap_CS_fsm_state91, reg_474, ap_CS_fsm_state79, ap_CS_fsm_state86, ap_CS_fsm_state96, ap_CS_fsm_state76, ap_CS_fsm_state81, ap_CS_fsm_state7, ap_CS_fsm_state80, ap_CS_fsm_state230, reg_508, ap_CS_fsm_state101, reg_516, ap_CS_fsm_state74, ap_CS_fsm_state137, ap_CS_fsm_state156, reg_538, ap_CS_fsm_state57, reg_571, ap_CS_fsm_state132, ap_CS_fsm_state70, reg_633, ap_CS_fsm_state72, ap_CS_fsm_state87, ap_CS_fsm_state141, reg_670, reg_677, reg_755, ap_CS_fsm_state83, reg_770, ap_CS_fsm_state93, reg_778, reg_788, reg_801, ap_CS_fsm_state139, tmp_s_fu_974_p1, ap_CS_fsm_state34, ap_CS_fsm_state38, ap_CS_fsm_state51, tmp_1_i_reg_1463, q0_load_16_reg_1469, p_2q1_reg_1526, ap_CS_fsm_state73, ap_CS_fsm_state85, p_2bx_reg_1558, ap_CS_fsm_state175, tmp_1_i2_reg_1609, ap_CS_fsm_state179, beta_load_reg_1615, ap_CS_fsm_state200, ap_CS_fsm_state239, tmp_1_i3_reg_1640, ap_CS_fsm_state243, ap_phi_mux_qDot_phi_fu_131_p4, ap_CS_fsm_state209, qDot9_reg_148, ap_CS_fsm_state17, ap_CS_fsm_state25, ap_CS_fsm_state42, ap_CS_fsm_state78, ap_CS_fsm_state102, ap_CS_fsm_state123, ap_CS_fsm_state161, ap_CS_fsm_state166, ap_CS_fsm_state183, ap_CS_fsm_state192, ap_CS_fsm_state196, ap_CS_fsm_state210, ap_CS_fsm_state247, ap_CS_fsm_state256)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state256)) then 
            grp_fu_214_p0 <= tmp_1_i3_reg_1640;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state247) or (ap_const_logic_1 = ap_CS_fsm_state243))) then 
            grp_fu_214_p0 <= reg_404;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state210)) then 
            grp_fu_214_p0 <= qDot9_reg_148;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state209)) then 
            grp_fu_214_p0 <= ap_phi_mux_qDot_phi_fu_131_p4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state200)) then 
            grp_fu_214_p0 <= beta_load_reg_1615;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state192)) then 
            grp_fu_214_p0 <= tmp_1_i2_reg_1609;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state175)) then 
            grp_fu_214_p0 <= reg_770;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state141)) then 
            grp_fu_214_p0 <= reg_788;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state140)) then 
            grp_fu_214_p0 <= reg_801;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state138) or (ap_const_logic_1 = ap_CS_fsm_state161))) then 
            grp_fu_214_p0 <= reg_516;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state230) or (ap_const_logic_1 = ap_CS_fsm_state131))) then 
            grp_fu_214_p0 <= reg_465;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state126) or (ap_const_logic_1 = ap_CS_fsm_state166) or (ap_const_logic_1 = ap_CS_fsm_state132))) then 
            grp_fu_214_p0 <= reg_538;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state130) or (ap_const_logic_1 = ap_CS_fsm_state135) or (ap_const_logic_1 = ap_CS_fsm_state125) or (ap_const_logic_1 = ap_CS_fsm_state123))) then 
            grp_fu_214_p0 <= p_2bx_reg_1558;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            grp_fu_214_p0 <= reg_778;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state87))) then 
            grp_fu_214_p0 <= reg_755;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            grp_fu_214_p0 <= q0_load_16_reg_1469;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state225))) then 
            grp_fu_214_p0 <= reg_344;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state91) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state83))) then 
            grp_fu_214_p0 <= reg_677;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state101) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state86))) then 
            grp_fu_214_p0 <= reg_571;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state79))) then 
            grp_fu_214_p0 <= p_2q1_reg_1526;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state88) or (ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state93))) then 
            grp_fu_214_p0 <= reg_439;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            grp_fu_214_p0 <= reg_396;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            grp_fu_214_p0 <= tmp_1_i_reg_1463;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state128))) then 
            grp_fu_214_p0 <= q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            grp_fu_214_p0 <= reg_670;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            grp_fu_214_p0 <= reg_380;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state64))) then 
            grp_fu_214_p0 <= reg_633;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state129))) then 
            grp_fu_214_p0 <= q2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state139))) then 
            grp_fu_214_p0 <= reg_474;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            grp_fu_214_p0 <= reg_390;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_214_p0 <= az;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state137) or (ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state183) or (ap_const_logic_1 = ap_CS_fsm_state179) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            grp_fu_214_p0 <= reg_424;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_fu_214_p0 <= ax;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            grp_fu_214_p0 <= mz;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_214_p0 <= mx;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state196) or (ap_const_logic_1 = ap_CS_fsm_state102) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state239) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state156))) then 
            grp_fu_214_p0 <= reg_508;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            grp_fu_214_p0 <= q3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state260) or (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            grp_fu_214_p0 <= q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state220) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            grp_fu_214_p0 <= reg_353;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_fu_214_p0 <= tmp_s_fu_974_p1;
        else 
            grp_fu_214_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_214_p1_assign_proc : process(ap_CS_fsm_state1, gx, gy, gz, ax, az, mx, mz, q1, q2, q3, q0, reg_344, ap_CS_fsm_state8, ap_CS_fsm_state60, ap_CS_fsm_state125, ap_CS_fsm_state260, ap_CS_fsm_state63, ap_CS_fsm_state66, ap_CS_fsm_state128, ap_CS_fsm_state131, reg_363, ap_CS_fsm_state2, ap_CS_fsm_state61, ap_CS_fsm_state64, ap_CS_fsm_state69, ap_CS_fsm_state126, ap_CS_fsm_state225, ap_CS_fsm_state59, ap_CS_fsm_state65, ap_CS_fsm_state129, ap_CS_fsm_state220, ap_CS_fsm_state68, ap_CS_fsm_state71, ap_CS_fsm_state135, ap_CS_fsm_state3, ap_CS_fsm_state55, ap_CS_fsm_state130, ap_CS_fsm_state62, reg_404, ap_CS_fsm_state20, reg_424, ap_CS_fsm_state37, ap_CS_fsm_state67, ap_CS_fsm_state84, ap_CS_fsm_state88, ap_CS_fsm_state140, reg_439, ap_CS_fsm_state138, ap_CS_fsm_state6, ap_CS_fsm_state91, ap_CS_fsm_state79, ap_CS_fsm_state86, ap_CS_fsm_state96, ap_CS_fsm_state76, ap_CS_fsm_state81, reg_492, ap_CS_fsm_state7, ap_CS_fsm_state80, ap_CS_fsm_state230, reg_508, ap_CS_fsm_state101, reg_516, ap_CS_fsm_state74, ap_CS_fsm_state137, ap_CS_fsm_state156, reg_526, reg_538, reg_554, ap_CS_fsm_state57, reg_560, reg_571, ap_CS_fsm_state132, ap_CS_fsm_state70, reg_623, ap_CS_fsm_state72, ap_CS_fsm_state87, ap_CS_fsm_state141, reg_656, reg_725, reg_746, ap_CS_fsm_state83, reg_770, ap_CS_fsm_state93, ap_CS_fsm_state139, reg_817, ap_CS_fsm_state34, tmp_1_i5_fu_1134_p1, ap_CS_fsm_state38, ap_CS_fsm_state51, tmp_1_i_fu_1162_p1, tmp_1_i_reg_1463, q3_load_22_reg_1489, tmp_172_fu_1177_p1, ap_CS_fsm_state73, tmp_188_fu_1192_p1, ap_CS_fsm_state85, tmp_259_fu_1222_p1, tmp_208_fu_1236_p1, ap_CS_fsm_state175, tmp_1_i2_fu_1265_p1, tmp_1_i2_reg_1609, ap_CS_fsm_state179, ap_CS_fsm_state200, ap_CS_fsm_state239, tmp_1_i3_fu_1317_p1, tmp_1_i3_reg_1640, ap_CS_fsm_state243, ap_CS_fsm_state209, ap_CS_fsm_state17, ap_CS_fsm_state25, ap_CS_fsm_state42, ap_CS_fsm_state78, ap_CS_fsm_state102, ap_CS_fsm_state123, ap_CS_fsm_state161, ap_CS_fsm_state166, ap_CS_fsm_state183, ap_CS_fsm_state192, ap_CS_fsm_state196, ap_CS_fsm_state210, ap_CS_fsm_state247, ap_CS_fsm_state256)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state260)) then 
            grp_fu_214_p1 <= reg_404;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state247)) then 
            grp_fu_214_p1 <= tmp_1_i3_reg_1640;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state243)) then 
            grp_fu_214_p1 <= tmp_1_i3_fu_1317_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state220)) then 
            grp_fu_214_p1 <= q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state210) or (ap_const_logic_1 = ap_CS_fsm_state209))) then 
            grp_fu_214_p1 <= ap_const_lv32_3B000000;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state196) or (ap_const_logic_1 = ap_CS_fsm_state200))) then 
            grp_fu_214_p1 <= reg_424;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state192)) then 
            grp_fu_214_p1 <= reg_770;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state183)) then 
            grp_fu_214_p1 <= tmp_1_i2_reg_1609;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state179)) then 
            grp_fu_214_p1 <= tmp_1_i2_fu_1265_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state166)) then 
            grp_fu_214_p1 <= reg_538;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state161)) then 
            grp_fu_214_p1 <= reg_516;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state140)) then 
            grp_fu_214_p1 <= reg_526;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state139)) then 
            grp_fu_214_p1 <= reg_817;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state132)) then 
            grp_fu_214_p1 <= reg_344;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state131)) then 
            grp_fu_214_p1 <= tmp_208_fu_1236_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state129)) then 
            grp_fu_214_p1 <= tmp_259_fu_1222_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state128)) then 
            grp_fu_214_p1 <= ap_const_lv32_40800000;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state101) or (ap_const_logic_1 = ap_CS_fsm_state93))) then 
            grp_fu_214_p1 <= reg_656;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state230) or (ap_const_logic_1 = ap_CS_fsm_state91) or (ap_const_logic_1 = ap_CS_fsm_state130))) then 
            grp_fu_214_p1 <= q3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state88))) then 
            grp_fu_214_p1 <= reg_746;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            grp_fu_214_p1 <= tmp_188_fu_1192_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            grp_fu_214_p1 <= q3_load_22_reg_1489;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state135) or (ap_const_logic_1 = ap_CS_fsm_state78))) then 
            grp_fu_214_p1 <= reg_363;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            grp_fu_214_p1 <= reg_623;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state87))) then 
            grp_fu_214_p1 <= reg_560;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state73))) then 
            grp_fu_214_p1 <= reg_725;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            grp_fu_214_p1 <= tmp_172_fu_1177_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            grp_fu_214_p1 <= reg_439;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state137) or (ap_const_logic_1 = ap_CS_fsm_state138) or (ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state256) or (ap_const_logic_1 = ap_CS_fsm_state123) or (ap_const_logic_1 = ap_CS_fsm_state102) or (ap_const_logic_1 = ap_CS_fsm_state141) or (ap_const_logic_1 = ap_CS_fsm_state156))) then 
            grp_fu_214_p1 <= reg_508;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            grp_fu_214_p1 <= reg_554;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            grp_fu_214_p1 <= reg_492;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state64))) then 
            grp_fu_214_p1 <= reg_571;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            grp_fu_214_p1 <= q1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state225) or (ap_const_logic_1 = ap_CS_fsm_state61))) then 
            grp_fu_214_p1 <= q2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            grp_fu_214_p1 <= tmp_1_i_reg_1463;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state81) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state126) or (ap_const_logic_1 = ap_CS_fsm_state125) or (ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            grp_fu_214_p1 <= ap_const_lv32_40000000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_fu_214_p1 <= tmp_1_i_fu_1162_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_214_p1 <= az;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            grp_fu_214_p1 <= tmp_1_i5_fu_1134_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            grp_fu_214_p1 <= ax;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            grp_fu_214_p1 <= mz;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_214_p1 <= mx;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state239) or (ap_const_logic_1 = ap_CS_fsm_state175) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state34))) then 
            grp_fu_214_p1 <= ap_const_lv32_3F000000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_214_p1 <= gy;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            grp_fu_214_p1 <= gz;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            grp_fu_214_p1 <= gx;
        else 
            grp_fu_214_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_219_p0_assign_proc : process(ap_CS_fsm_state1, ay, my, q1, q2, q0, ap_CS_fsm_state8, ap_CS_fsm_state60, ap_CS_fsm_state260, ap_CS_fsm_state63, ap_CS_fsm_state66, ap_CS_fsm_state128, ap_CS_fsm_state131, ap_CS_fsm_state2, ap_CS_fsm_state59, ap_CS_fsm_state65, ap_CS_fsm_state129, ap_CS_fsm_state220, reg_380, ap_CS_fsm_state68, ap_CS_fsm_state71, ap_CS_fsm_state135, ap_CS_fsm_state3, ap_CS_fsm_state55, ap_CS_fsm_state130, ap_CS_fsm_state20, reg_424, ap_CS_fsm_state37, ap_CS_fsm_state67, ap_CS_fsm_state88, ap_CS_fsm_state140, reg_439, reg_465, ap_CS_fsm_state91, reg_474, ap_CS_fsm_state96, ap_CS_fsm_state81, reg_516, ap_CS_fsm_state137, ap_CS_fsm_state156, reg_526, reg_538, reg_560, reg_581, ap_CS_fsm_state132, reg_600, reg_606, reg_633, ap_CS_fsm_state72, reg_725, reg_739, reg_746, ap_CS_fsm_state83, ap_CS_fsm_state93, ap_CS_fsm_state139, tmp_1_i5_reg_1451, ap_CS_fsm_state51, p_2q1_reg_1526, ap_CS_fsm_state73, ap_CS_fsm_state85, p_2bx_reg_1558, tmp_245_reg_1589, beta_load_4_reg_1620, ap_CS_fsm_state200, ap_CS_fsm_state209, ap_phi_mux_qDot8_phi_fu_141_p4, qDot5_reg_158, ap_CS_fsm_state17, ap_CS_fsm_state42, ap_CS_fsm_state78, ap_CS_fsm_state102, ap_CS_fsm_state123, ap_CS_fsm_state196, ap_CS_fsm_state210)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state220)) then 
            grp_fu_219_p0 <= reg_380;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state210)) then 
            grp_fu_219_p0 <= qDot5_reg_158;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state209)) then 
            grp_fu_219_p0 <= ap_phi_mux_qDot8_phi_fu_141_p4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state200)) then 
            grp_fu_219_p0 <= beta_load_4_reg_1620;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state140)) then 
            grp_fu_219_p0 <= tmp_245_reg_1589;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state137)) then 
            grp_fu_219_p0 <= reg_739;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state130)) then 
            grp_fu_219_p0 <= reg_474;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state135) or (ap_const_logic_1 = ap_CS_fsm_state128))) then 
            grp_fu_219_p0 <= p_2bx_reg_1558;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state129) or (ap_const_logic_1 = ap_CS_fsm_state131) or (ap_const_logic_1 = ap_CS_fsm_state123) or (ap_const_logic_1 = ap_CS_fsm_state139))) then 
            grp_fu_219_p0 <= reg_538;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state196) or (ap_const_logic_1 = ap_CS_fsm_state102) or (ap_const_logic_1 = ap_CS_fsm_state156))) then 
            grp_fu_219_p0 <= reg_526;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state96)) then 
            grp_fu_219_p0 <= reg_746;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            grp_fu_219_p0 <= reg_725;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            grp_fu_219_p0 <= p_2q1_reg_1526;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            grp_fu_219_p0 <= reg_465;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state93) or (ap_const_logic_1 = ap_CS_fsm_state83))) then 
            grp_fu_219_p0 <= reg_560;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state88) or (ap_const_logic_1 = ap_CS_fsm_state73))) then 
            grp_fu_219_p0 <= reg_633;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            grp_fu_219_p0 <= reg_606;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            grp_fu_219_p0 <= q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            grp_fu_219_p0 <= reg_600;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            grp_fu_219_p0 <= reg_581;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state63))) then 
            grp_fu_219_p0 <= reg_439;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            grp_fu_219_p0 <= tmp_1_i5_reg_1451;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state132))) then 
            grp_fu_219_p0 <= reg_424;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_fu_219_p0 <= ay;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_219_p0 <= my;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_219_p0 <= reg_516;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state260))) then 
            grp_fu_219_p0 <= q1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            grp_fu_219_p0 <= q2;
        else 
            grp_fu_219_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_219_p1_assign_proc : process(ap_CS_fsm_state1, gx, gy, gz, ay, mx, my, q1, q2, q3, q0, ap_CS_fsm_state8, ap_CS_fsm_state60, ap_CS_fsm_state260, ap_CS_fsm_state63, ap_CS_fsm_state66, ap_CS_fsm_state128, ap_CS_fsm_state131, ap_CS_fsm_state2, ap_CS_fsm_state59, ap_CS_fsm_state65, ap_CS_fsm_state129, ap_CS_fsm_state220, reg_380, ap_CS_fsm_state68, ap_CS_fsm_state71, ap_CS_fsm_state135, ap_CS_fsm_state3, ap_CS_fsm_state55, ap_CS_fsm_state130, reg_404, ap_CS_fsm_state20, reg_424, ap_CS_fsm_state37, ap_CS_fsm_state67, ap_CS_fsm_state88, ap_CS_fsm_state140, reg_439, ap_CS_fsm_state91, ap_CS_fsm_state96, ap_CS_fsm_state81, reg_492, reg_500, reg_508, ap_CS_fsm_state137, ap_CS_fsm_state156, reg_526, reg_538, reg_594, ap_CS_fsm_state132, reg_615, reg_623, ap_CS_fsm_state72, reg_649, reg_656, reg_725, reg_746, ap_CS_fsm_state83, ap_CS_fsm_state93, reg_801, ap_CS_fsm_state139, reg_817, tmp_1_i5_reg_1451, ap_CS_fsm_state51, ap_CS_fsm_state73, ap_CS_fsm_state85, ap_CS_fsm_state200, ap_CS_fsm_state209, ap_CS_fsm_state17, ap_CS_fsm_state42, ap_CS_fsm_state78, ap_CS_fsm_state102, ap_CS_fsm_state123, ap_CS_fsm_state196, ap_CS_fsm_state210)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state260)) then 
            grp_fu_219_p1 <= reg_404;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state210) or (ap_const_logic_1 = ap_CS_fsm_state209))) then 
            grp_fu_219_p1 <= ap_const_lv32_3B000000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state196)) then 
            grp_fu_219_p1 <= reg_424;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state139)) then 
            grp_fu_219_p1 <= reg_817;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state137)) then 
            grp_fu_219_p1 <= reg_508;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state131)) then 
            grp_fu_219_p1 <= reg_380;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state129)) then 
            grp_fu_219_p1 <= q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state123)) then 
            grp_fu_219_p1 <= reg_801;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            grp_fu_219_p1 <= reg_656;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            grp_fu_219_p1 <= reg_492;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            grp_fu_219_p1 <= reg_538;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            grp_fu_219_p1 <= reg_746;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state81) or (ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state91))) then 
            grp_fu_219_p1 <= ap_const_lv32_40000000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            grp_fu_219_p1 <= reg_725;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state128) or (ap_const_logic_1 = ap_CS_fsm_state73))) then 
            grp_fu_219_p1 <= reg_615;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state130) or (ap_const_logic_1 = ap_CS_fsm_state135) or (ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state220))) then 
            grp_fu_219_p1 <= q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            grp_fu_219_p1 <= q2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            grp_fu_219_p1 <= reg_594;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            grp_fu_219_p1 <= reg_500;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            grp_fu_219_p1 <= reg_649;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            grp_fu_219_p1 <= reg_623;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            grp_fu_219_p1 <= q3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state200))) then 
            grp_fu_219_p1 <= reg_439;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_fu_219_p1 <= mx;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state140) or (ap_const_logic_1 = ap_CS_fsm_state102) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state132) or (ap_const_logic_1 = ap_CS_fsm_state156))) then 
            grp_fu_219_p1 <= reg_526;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_219_p1 <= tmp_1_i5_reg_1451;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            grp_fu_219_p1 <= ay;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_219_p1 <= my;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_219_p1 <= ap_const_lv32_3F000000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_219_p1 <= gx;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_219_p1 <= gz;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            grp_fu_219_p1 <= gy;
        else 
            grp_fu_219_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_224_p0_assign_proc : process(q1, q2, q0, ap_CS_fsm_state260, ap_CS_fsm_state63, ap_CS_fsm_state66, ap_CS_fsm_state128, ap_CS_fsm_state131, ap_CS_fsm_state2, ap_CS_fsm_state59, ap_CS_fsm_state65, ap_CS_fsm_state68, ap_CS_fsm_state71, ap_CS_fsm_state55, ap_CS_fsm_state130, reg_424, ap_CS_fsm_state67, ap_CS_fsm_state140, reg_439, ap_CS_fsm_state81, reg_516, reg_538, reg_588, ap_CS_fsm_state132, reg_606, reg_633, ap_CS_fsm_state72, reg_664, reg_677, reg_691, reg_762, ap_CS_fsm_state139, reg_810, q1q3_reg_1504, ap_CS_fsm_state85, p_2bx_reg_1558, beta_load_5_reg_1625, ap_CS_fsm_state200, ap_CS_fsm_state17, ap_CS_fsm_state123, ap_CS_fsm_state196)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state260)) then 
            grp_fu_224_p0 <= q2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state200)) then 
            grp_fu_224_p0 <= beta_load_5_reg_1625;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state196)) then 
            grp_fu_224_p0 <= reg_516;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state140)) then 
            grp_fu_224_p0 <= reg_810;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state139)) then 
            grp_fu_224_p0 <= reg_762;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state130) or (ap_const_logic_1 = ap_CS_fsm_state131) or (ap_const_logic_1 = ap_CS_fsm_state123))) then 
            grp_fu_224_p0 <= p_2bx_reg_1558;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            grp_fu_224_p0 <= reg_691;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            grp_fu_224_p0 <= reg_633;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            grp_fu_224_p0 <= q1q3_reg_1504;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            grp_fu_224_p0 <= reg_424;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            grp_fu_224_p0 <= reg_677;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            grp_fu_224_p0 <= q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            grp_fu_224_p0 <= reg_664;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            grp_fu_224_p0 <= reg_606;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            grp_fu_224_p0 <= reg_588;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_fu_224_p0 <= reg_439;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state128) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state132))) then 
            grp_fu_224_p0 <= reg_538;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_224_p0 <= q0;
        else 
            grp_fu_224_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_224_p1_assign_proc : process(gy, az, my, q1, q3, q0, ap_CS_fsm_state260, ap_CS_fsm_state63, ap_CS_fsm_state66, ap_CS_fsm_state128, ap_CS_fsm_state131, reg_363, ap_CS_fsm_state2, ap_CS_fsm_state59, ap_CS_fsm_state65, ap_CS_fsm_state68, ap_CS_fsm_state71, ap_CS_fsm_state55, ap_CS_fsm_state130, reg_404, reg_424, ap_CS_fsm_state67, ap_CS_fsm_state140, ap_CS_fsm_state81, reg_492, reg_516, reg_526, reg_560, ap_CS_fsm_state132, ap_CS_fsm_state72, reg_778, ap_CS_fsm_state139, reg_817, q3_load_21_reg_1484, ap_CS_fsm_state85, ap_CS_fsm_state200, ap_CS_fsm_state17, ap_CS_fsm_state123, ap_CS_fsm_state196)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state260)) then 
            grp_fu_224_p1 <= reg_404;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state196)) then 
            grp_fu_224_p1 <= reg_424;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state140)) then 
            grp_fu_224_p1 <= reg_526;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state139)) then 
            grp_fu_224_p1 <= reg_817;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state132)) then 
            grp_fu_224_p1 <= reg_492;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state130) or (ap_const_logic_1 = ap_CS_fsm_state128))) then 
            grp_fu_224_p1 <= q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state123)) then 
            grp_fu_224_p1 <= reg_516;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            grp_fu_224_p1 <= reg_778;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            grp_fu_224_p1 <= q3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            grp_fu_224_p1 <= az;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state71))) then 
            grp_fu_224_p1 <= ap_const_lv32_40000000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            grp_fu_224_p1 <= reg_363;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state131))) then 
            grp_fu_224_p1 <= q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            grp_fu_224_p1 <= q3_load_21_reg_1484;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state200))) then 
            grp_fu_224_p1 <= reg_560;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_fu_224_p1 <= my;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_224_p1 <= ap_const_lv32_3F000000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_224_p1 <= gy;
        else 
            grp_fu_224_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_228_p0_assign_proc : process(q1, q2, q3, beta, ap_CS_fsm_state260, reg_353, ap_CS_fsm_state63, ap_CS_fsm_state66, ap_CS_fsm_state128, ap_CS_fsm_state131, ap_CS_fsm_state2, ap_CS_fsm_state59, ap_CS_fsm_state55, ap_CS_fsm_state130, reg_424, ap_CS_fsm_state140, reg_439, reg_474, reg_484, reg_526, reg_538, ap_CS_fsm_state132, reg_615, reg_623, ap_CS_fsm_state139, ap_CS_fsm_state85, tmp_284_reg_1594, ap_CS_fsm_state200, ap_CS_fsm_state17, ap_CS_fsm_state123, ap_CS_fsm_state196)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state260)) then 
            grp_fu_228_p0 <= q3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state200)) then 
            grp_fu_228_p0 <= beta;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state140)) then 
            grp_fu_228_p0 <= tmp_284_reg_1594;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state132)) then 
            grp_fu_228_p0 <= reg_623;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state130)) then 
            grp_fu_228_p0 <= reg_474;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state128)) then 
            grp_fu_228_p0 <= q2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state131) or (ap_const_logic_1 = ap_CS_fsm_state196) or (ap_const_logic_1 = ap_CS_fsm_state123))) then 
            grp_fu_228_p0 <= reg_538;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            grp_fu_228_p0 <= reg_424;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            grp_fu_228_p0 <= reg_615;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            grp_fu_228_p0 <= reg_484;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            grp_fu_228_p0 <= reg_353;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state139))) then 
            grp_fu_228_p0 <= reg_439;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_228_p0 <= reg_526;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_228_p0 <= q1;
        else 
            grp_fu_228_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_228_p1_assign_proc : process(gz, mz, q2, q3, q0, ap_CS_fsm_state260, ap_CS_fsm_state63, ap_CS_fsm_state66, ap_CS_fsm_state128, ap_CS_fsm_state131, ap_CS_fsm_state2, ap_CS_fsm_state59, ap_CS_fsm_state55, ap_CS_fsm_state130, reg_404, reg_424, ap_CS_fsm_state140, reg_526, reg_538, reg_571, ap_CS_fsm_state132, reg_762, ap_CS_fsm_state139, reg_817, ap_CS_fsm_state85, ap_CS_fsm_state200, ap_CS_fsm_state17, ap_CS_fsm_state123, ap_CS_fsm_state196)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state260)) then 
            grp_fu_228_p1 <= reg_404;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state200)) then 
            grp_fu_228_p1 <= reg_571;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state196)) then 
            grp_fu_228_p1 <= reg_424;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state139)) then 
            grp_fu_228_p1 <= reg_817;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state140) or (ap_const_logic_1 = ap_CS_fsm_state132))) then 
            grp_fu_228_p1 <= reg_526;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state128)) then 
            grp_fu_228_p1 <= ap_const_lv32_40800000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state123)) then 
            grp_fu_228_p1 <= reg_762;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            grp_fu_228_p1 <= reg_538;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state130) or (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            grp_fu_228_p1 <= q2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state131) or (ap_const_logic_1 = ap_CS_fsm_state63))) then 
            grp_fu_228_p1 <= q3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            grp_fu_228_p1 <= q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_fu_228_p1 <= mz;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_228_p1 <= ap_const_lv32_3F000000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_228_p1 <= gz;
        else 
            grp_fu_228_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_236_p0_assign_proc : process(q3, q0, reg_353, ap_CS_fsm_state63, ap_CS_fsm_state131, ap_CS_fsm_state55, reg_560, ap_CS_fsm_state132, reg_778, ap_CS_fsm_state85, p_2bx_reg_1558, ap_CS_fsm_state123)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state132)) then 
            grp_fu_236_p0 <= q3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state131)) then 
            grp_fu_236_p0 <= q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state123)) then 
            grp_fu_236_p0 <= p_2bx_reg_1558;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            grp_fu_236_p0 <= reg_778;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            grp_fu_236_p0 <= reg_560;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_fu_236_p0 <= reg_353;
        else 
            grp_fu_236_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_236_p1_assign_proc : process(ap_CS_fsm_state63, ap_CS_fsm_state131, ap_CS_fsm_state55, ap_CS_fsm_state132, reg_623, reg_810, ap_CS_fsm_state85, tmp_252_fu_1207_p1, tmp_259_reg_1567, tmp_208_fu_1236_p1, ap_CS_fsm_state123)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state132)) then 
            grp_fu_236_p1 <= tmp_259_reg_1567;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state131)) then 
            grp_fu_236_p1 <= tmp_208_fu_1236_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state123)) then 
            grp_fu_236_p1 <= reg_810;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            grp_fu_236_p1 <= tmp_252_fu_1207_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            grp_fu_236_p1 <= reg_623;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_fu_236_p1 <= ap_const_lv32_40000000;
        else 
            grp_fu_236_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_241_p0_assign_proc : process(ap_CS_fsm_state131, reg_370, ap_CS_fsm_state55, reg_538, ap_CS_fsm_state132, reg_691, ap_CS_fsm_state85, ap_CS_fsm_state123)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state131) or (ap_const_logic_1 = ap_CS_fsm_state123) or (ap_const_logic_1 = ap_CS_fsm_state132))) then 
            grp_fu_241_p0 <= reg_538;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            grp_fu_241_p0 <= reg_691;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_fu_241_p0 <= reg_370;
        else 
            grp_fu_241_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_241_p1_assign_proc : process(q1, q2, ap_CS_fsm_state131, ap_CS_fsm_state55, reg_538, ap_CS_fsm_state132, ap_CS_fsm_state85, tmp_224_reg_1553, ap_CS_fsm_state123)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state132)) then 
            grp_fu_241_p1 <= q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state131)) then 
            grp_fu_241_p1 <= q2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state123)) then 
            grp_fu_241_p1 <= tmp_224_reg_1553;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            grp_fu_241_p1 <= reg_538;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_fu_241_p1 <= ap_const_lv32_40000000;
        else 
            grp_fu_241_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_265_p0_assign_proc : process(ap_CS_fsm_state1, ax, mx, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_fu_265_p0 <= ax;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_fu_265_p0 <= mx;
        else 
            grp_fu_265_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_271_p0_assign_proc : process(ap_CS_fsm_state1, ay, my, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_fu_271_p0 <= ay;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_fu_271_p0 <= my;
        else 
            grp_fu_271_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_277_p0_assign_proc : process(ap_CS_fsm_state1, az, mz, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_fu_277_p0 <= az;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_fu_277_p0 <= mz;
        else 
            grp_fu_277_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    mx_to_int_fu_826_p1 <= mx;
    my_to_int_fu_868_p1 <= my;
    mz_to_int_fu_910_p1 <= mz;
    notlhs1_fu_928_p2 <= "0" when (tmp_321_fu_914_p4 = ap_const_lv8_FF) else "1";
    notlhs2_fu_996_p2 <= "0" when (tmp_326_fu_982_p4 = ap_const_lv8_FF) else "1";
    notlhs3_fu_1036_p2 <= "0" when (tmp_331_fu_1022_p4 = ap_const_lv8_FF) else "1";
    notlhs4_fu_1076_p2 <= "0" when (tmp_336_fu_1062_p4 = ap_const_lv8_FF) else "1";
    notlhs8_fu_886_p2 <= "0" when (tmp_133_fu_872_p4 = ap_const_lv8_FF) else "1";
    notlhs_fu_844_p2 <= "0" when (tmp_fu_830_p4 = ap_const_lv8_FF) else "1";
    notrhs1_fu_934_p2 <= "1" when (tmp_322_fu_924_p1 = ap_const_lv23_0) else "0";
    notrhs2_fu_1002_p2 <= "1" when (tmp_327_fu_992_p1 = ap_const_lv23_0) else "0";
    notrhs3_fu_1042_p2 <= "1" when (tmp_332_fu_1032_p1 = ap_const_lv23_0) else "0";
    notrhs4_fu_1082_p2 <= "1" when (tmp_337_fu_1072_p1 = ap_const_lv23_0) else "0";
    notrhs9_fu_892_p2 <= "1" when (tmp_297_fu_882_p1 = ap_const_lv23_0) else "0";
    notrhs_fu_850_p2 <= "1" when (tmp_121_fu_840_p1 = ap_const_lv23_0) else "0";
    or_cond1_fu_958_p2 <= (tmp_128_fu_862_p2 and tmp1_fu_952_p2);
    or_cond3_fu_1105_p2 <= (tmp_330_fu_1014_p2 and tmp2_fu_1099_p2);
    tmp1_fu_952_p2 <= (tmp_325_fu_946_p2 and tmp_320_fu_904_p2);
    tmp2_fu_1099_p2 <= (tmp_340_fu_1094_p2 and tmp_335_fu_1054_p2);
    tmp_100_neg_fu_968_p2 <= (tmp_100_to_int_fu_964_p1 xor ap_const_lv32_80000000);
    tmp_100_to_int_fu_964_p1 <= q1;
    tmp_121_fu_840_p1 <= mx_to_int_fu_826_p1(23 - 1 downto 0);
    tmp_122_fu_856_p2 <= (notrhs_fu_850_p2 or notlhs_fu_844_p2);
    tmp_128_fu_862_p2 <= (tmp_122_fu_856_p2 and grp_fu_265_p2);
    tmp_133_fu_872_p4 <= my_to_int_fu_868_p1(30 downto 23);
    tmp_172_fu_1177_p1 <= tmp_174_neg_fu_1171_p2;
    tmp_174_neg_fu_1171_p2 <= (tmp_174_to_int_fu_1167_p1 xor ap_const_lv32_80000000);
    tmp_174_to_int_fu_1167_p1 <= reg_484;
    tmp_188_fu_1192_p1 <= tmp_190_neg_fu_1186_p2;
    tmp_190_neg_fu_1186_p2 <= (tmp_190_to_int_fu_1182_p1 xor ap_const_lv32_80000000);
    tmp_190_to_int_fu_1182_p1 <= reg_755;
    tmp_1_i2_fu_1265_p1 <= y_10_fu_1259_p2;
    tmp_1_i3_fu_1317_p1 <= y_12_fu_1311_p2;
    tmp_1_i5_fu_1134_p1 <= y_8_fu_1128_p2;
    tmp_1_i_fu_1162_p1 <= y_6_fu_1156_p2;
    tmp_208_fu_1236_p1 <= tmp_210_neg_fu_1230_p2;
    tmp_210_neg_fu_1230_p2 <= (tmp_210_to_int_fu_1227_p1 xor ap_const_lv32_80000000);
    tmp_210_to_int_fu_1227_p1 <= p_2bx_reg_1558;
    tmp_252_fu_1207_p1 <= tmp_254_neg_fu_1201_p2;
    tmp_254_neg_fu_1201_p2 <= (tmp_254_to_int_fu_1197_p1 xor ap_const_lv32_80000000);
    tmp_254_to_int_fu_1197_p1 <= reg_424;
    tmp_259_fu_1222_p1 <= tmp_261_neg_fu_1216_p2;
    tmp_261_neg_fu_1216_p2 <= (tmp_261_to_int_fu_1212_p1 xor ap_const_lv32_80000000);
    tmp_261_to_int_fu_1212_p1 <= reg_474;
    tmp_297_fu_882_p1 <= my_to_int_fu_868_p1(23 - 1 downto 0);
    tmp_316_fu_898_p2 <= (notrhs9_fu_892_p2 or notlhs8_fu_886_p2);
    tmp_320_fu_904_p2 <= (tmp_316_fu_898_p2 and grp_fu_271_p2);
    tmp_321_fu_914_p4 <= mz_to_int_fu_910_p1(30 downto 23);
    tmp_322_fu_924_p1 <= mz_to_int_fu_910_p1(23 - 1 downto 0);
    tmp_323_fu_940_p2 <= (notrhs1_fu_934_p2 or notlhs1_fu_928_p2);
    tmp_325_fu_946_p2 <= (tmp_323_fu_940_p2 and grp_fu_277_p2);
    tmp_326_fu_982_p4 <= ax_to_int_fu_979_p1(30 downto 23);
    tmp_327_fu_992_p1 <= ax_to_int_fu_979_p1(23 - 1 downto 0);
    tmp_328_fu_1008_p2 <= (notrhs2_fu_1002_p2 or notlhs2_fu_996_p2);
    tmp_330_fu_1014_p2 <= (tmp_329_reg_1427 and tmp_328_fu_1008_p2);
    tmp_331_fu_1022_p4 <= ay_to_int_fu_1019_p1(30 downto 23);
    tmp_332_fu_1032_p1 <= ay_to_int_fu_1019_p1(23 - 1 downto 0);
    tmp_333_fu_1048_p2 <= (notrhs3_fu_1042_p2 or notlhs3_fu_1036_p2);
    tmp_335_fu_1054_p2 <= (tmp_334_reg_1432 and tmp_333_fu_1048_p2);
    tmp_336_fu_1062_p4 <= az_to_int_fu_1059_p1(30 downto 23);
    tmp_337_fu_1072_p1 <= az_to_int_fu_1059_p1(23 - 1 downto 0);
    tmp_338_fu_1088_p2 <= (notrhs4_fu_1082_p2 or notlhs4_fu_1076_p2);
    tmp_340_fu_1094_p2 <= (tmp_339_reg_1437 and tmp_338_fu_1088_p2);
    tmp_341_fu_1153_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_i_reg_1458),32));
    tmp_342_fu_1125_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_i3_reg_1446),32));
    tmp_343_fu_1256_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_i2_reg_1604),32));
    tmp_344_fu_1308_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_i4_reg_1635),32));
    tmp_fu_830_p4 <= mx_to_int_fu_826_p1(30 downto 23);
    tmp_s_fu_974_p1 <= tmp_100_neg_fu_968_p2;
    y_10_fu_1259_p2 <= std_logic_vector(unsigned(ap_const_lv32_5F3759DF) - unsigned(tmp_343_fu_1256_p1));
    y_11_fu_1294_p1 <= reg_508;
    y_12_fu_1311_p2 <= std_logic_vector(unsigned(ap_const_lv32_5F3759DF) - unsigned(tmp_344_fu_1308_p1));
    y_6_fu_1156_p2 <= std_logic_vector(unsigned(ap_const_lv32_5F3759DF) - unsigned(tmp_341_fu_1153_p1));
    y_7_fu_1111_p1 <= reg_508;
    y_8_fu_1128_p2 <= std_logic_vector(unsigned(ap_const_lv32_5F3759DF) - unsigned(tmp_342_fu_1125_p1));
    y_9_fu_1242_p1 <= reg_770;
    y_fu_1139_p1 <= reg_508;
end behav;
