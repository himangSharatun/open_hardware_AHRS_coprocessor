-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.3.1
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity feedbackStep is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    qDot_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    qDot_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    qDot_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
    qDot_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
    beta : IN STD_LOGIC_VECTOR (31 downto 0);
    s_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    s_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    s_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
    s_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of feedbackStep is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal qDot_3_read_1_reg_178 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_pp0_iter1_qDot_3_read_1_reg_178 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_pp0_iter2_qDot_3_read_1_reg_178 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_pp0_iter3_qDot_3_read_1_reg_178 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_pp0_iter4_qDot_3_read_1_reg_178 : STD_LOGIC_VECTOR (31 downto 0);
    signal qDot_2_read_1_reg_183 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_pp0_iter1_qDot_2_read_1_reg_183 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_pp0_iter2_qDot_2_read_1_reg_183 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_pp0_iter3_qDot_2_read_1_reg_183 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_pp0_iter4_qDot_2_read_1_reg_183 : STD_LOGIC_VECTOR (31 downto 0);
    signal qDot_1_read_1_reg_188 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_pp0_iter1_qDot_1_read_1_reg_188 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_pp0_iter2_qDot_1_read_1_reg_188 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_pp0_iter3_qDot_1_read_1_reg_188 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_pp0_iter4_qDot_1_read_1_reg_188 : STD_LOGIC_VECTOR (31 downto 0);
    signal qDot_0_read_1_reg_193 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_pp0_iter1_qDot_0_read_1_reg_193 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_pp0_iter2_qDot_0_read_1_reg_193 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_pp0_iter3_qDot_0_read_1_reg_193 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_pp0_iter4_qDot_0_read_1_reg_193 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_102_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_198 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_108_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_reg_203 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_114_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_208 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_120_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_reg_213 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal grp_fu_86_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_90_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_94_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_98_p2 : STD_LOGIC_VECTOR (31 downto 0);

    component MadgwickAHRSupdateOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MadgwickAHRSupdatcud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    MadgwickAHRSupdateOg_U15 : component MadgwickAHRSupdateOg
    generic map (
        ID => 1,
        NUM_STAGE => 9,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_reg_pp0_iter4_qDot_0_read_1_reg_193,
        din1 => tmp_s_reg_198,
        ce => ap_const_logic_1,
        dout => grp_fu_86_p2);

    MadgwickAHRSupdateOg_U16 : component MadgwickAHRSupdateOg
    generic map (
        ID => 1,
        NUM_STAGE => 9,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_reg_pp0_iter4_qDot_1_read_1_reg_188,
        din1 => tmp_1_reg_203,
        ce => ap_const_logic_1,
        dout => grp_fu_90_p2);

    MadgwickAHRSupdateOg_U17 : component MadgwickAHRSupdateOg
    generic map (
        ID => 1,
        NUM_STAGE => 9,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_reg_pp0_iter4_qDot_2_read_1_reg_183,
        din1 => tmp_2_reg_208,
        ce => ap_const_logic_1,
        dout => grp_fu_94_p2);

    MadgwickAHRSupdateOg_U18 : component MadgwickAHRSupdateOg
    generic map (
        ID => 1,
        NUM_STAGE => 9,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_reg_pp0_iter4_qDot_3_read_1_reg_178,
        din1 => tmp_3_reg_213,
        ce => ap_const_logic_1,
        dout => grp_fu_98_p2);

    MadgwickAHRSupdatcud_U19 : component MadgwickAHRSupdatcud
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => s_0_read,
        din1 => beta,
        ce => ap_const_logic_1,
        dout => grp_fu_102_p2);

    MadgwickAHRSupdatcud_U20 : component MadgwickAHRSupdatcud
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => s_1_read,
        din1 => beta,
        ce => ap_const_logic_1,
        dout => grp_fu_108_p2);

    MadgwickAHRSupdatcud_U21 : component MadgwickAHRSupdatcud
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => s_2_read,
        din1 => beta,
        ce => ap_const_logic_1,
        dout => grp_fu_114_p2);

    MadgwickAHRSupdatcud_U22 : component MadgwickAHRSupdatcud
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => s_3_read,
        din1 => beta,
        ce => ap_const_logic_1,
        dout => grp_fu_120_p2);




    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_block_pp0_stage0_11001 = ap_const_boolean_0)) then
                ap_reg_pp0_iter1_qDot_0_read_1_reg_193 <= qDot_0_read_1_reg_193;
                ap_reg_pp0_iter1_qDot_1_read_1_reg_188 <= qDot_1_read_1_reg_188;
                ap_reg_pp0_iter1_qDot_2_read_1_reg_183 <= qDot_2_read_1_reg_183;
                ap_reg_pp0_iter1_qDot_3_read_1_reg_178 <= qDot_3_read_1_reg_178;
                ap_reg_pp0_iter2_qDot_0_read_1_reg_193 <= ap_reg_pp0_iter1_qDot_0_read_1_reg_193;
                ap_reg_pp0_iter2_qDot_1_read_1_reg_188 <= ap_reg_pp0_iter1_qDot_1_read_1_reg_188;
                ap_reg_pp0_iter2_qDot_2_read_1_reg_183 <= ap_reg_pp0_iter1_qDot_2_read_1_reg_183;
                ap_reg_pp0_iter2_qDot_3_read_1_reg_178 <= ap_reg_pp0_iter1_qDot_3_read_1_reg_178;
                ap_reg_pp0_iter3_qDot_0_read_1_reg_193 <= ap_reg_pp0_iter2_qDot_0_read_1_reg_193;
                ap_reg_pp0_iter3_qDot_1_read_1_reg_188 <= ap_reg_pp0_iter2_qDot_1_read_1_reg_188;
                ap_reg_pp0_iter3_qDot_2_read_1_reg_183 <= ap_reg_pp0_iter2_qDot_2_read_1_reg_183;
                ap_reg_pp0_iter3_qDot_3_read_1_reg_178 <= ap_reg_pp0_iter2_qDot_3_read_1_reg_178;
                ap_reg_pp0_iter4_qDot_0_read_1_reg_193 <= ap_reg_pp0_iter3_qDot_0_read_1_reg_193;
                ap_reg_pp0_iter4_qDot_1_read_1_reg_188 <= ap_reg_pp0_iter3_qDot_1_read_1_reg_188;
                ap_reg_pp0_iter4_qDot_2_read_1_reg_183 <= ap_reg_pp0_iter3_qDot_2_read_1_reg_183;
                ap_reg_pp0_iter4_qDot_3_read_1_reg_178 <= ap_reg_pp0_iter3_qDot_3_read_1_reg_178;
                qDot_0_read_1_reg_193 <= qDot_0_read;
                qDot_1_read_1_reg_188 <= qDot_1_read;
                qDot_2_read_1_reg_183 <= qDot_2_read;
                qDot_3_read_1_reg_178 <= qDot_3_read;
                tmp_1_reg_203 <= grp_fu_108_p2;
                tmp_2_reg_208 <= grp_fu_114_p2;
                tmp_3_reg_213 <= grp_fu_120_p2;
                tmp_s_reg_198 <= grp_fu_102_p2;
            end if;
        end if;
    end process;
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
    ap_return_0 <= grp_fu_86_p2;
    ap_return_1 <= grp_fu_90_p2;
    ap_return_2 <= grp_fu_94_p2;
    ap_return_3 <= grp_fu_98_p2;
end behav;
