// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.3.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MadgwickAHRSupdateIM (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        g_address0,
        g_ce0,
        g_q0,
        g_address1,
        g_ce1,
        g_q1,
        a_address0,
        a_ce0,
        a_we0,
        a_d0,
        a_q0,
        beta,
        q_address0,
        q_ce0,
        q_we0,
        q_d0,
        q_q0,
        q_address1,
        q_ce1,
        q_we1,
        q_d1,
        q_q1
);

parameter    ap_ST_fsm_state1 = 154'd1;
parameter    ap_ST_fsm_state2 = 154'd2;
parameter    ap_ST_fsm_state3 = 154'd4;
parameter    ap_ST_fsm_state4 = 154'd8;
parameter    ap_ST_fsm_state5 = 154'd16;
parameter    ap_ST_fsm_state6 = 154'd32;
parameter    ap_ST_fsm_state7 = 154'd64;
parameter    ap_ST_fsm_state8 = 154'd128;
parameter    ap_ST_fsm_state9 = 154'd256;
parameter    ap_ST_fsm_state10 = 154'd512;
parameter    ap_ST_fsm_state11 = 154'd1024;
parameter    ap_ST_fsm_state12 = 154'd2048;
parameter    ap_ST_fsm_state13 = 154'd4096;
parameter    ap_ST_fsm_state14 = 154'd8192;
parameter    ap_ST_fsm_state15 = 154'd16384;
parameter    ap_ST_fsm_state16 = 154'd32768;
parameter    ap_ST_fsm_state17 = 154'd65536;
parameter    ap_ST_fsm_state18 = 154'd131072;
parameter    ap_ST_fsm_state19 = 154'd262144;
parameter    ap_ST_fsm_state20 = 154'd524288;
parameter    ap_ST_fsm_state21 = 154'd1048576;
parameter    ap_ST_fsm_state22 = 154'd2097152;
parameter    ap_ST_fsm_state23 = 154'd4194304;
parameter    ap_ST_fsm_state24 = 154'd8388608;
parameter    ap_ST_fsm_state25 = 154'd16777216;
parameter    ap_ST_fsm_state26 = 154'd33554432;
parameter    ap_ST_fsm_state27 = 154'd67108864;
parameter    ap_ST_fsm_state28 = 154'd134217728;
parameter    ap_ST_fsm_state29 = 154'd268435456;
parameter    ap_ST_fsm_state30 = 154'd536870912;
parameter    ap_ST_fsm_state31 = 154'd1073741824;
parameter    ap_ST_fsm_state32 = 154'd2147483648;
parameter    ap_ST_fsm_state33 = 154'd4294967296;
parameter    ap_ST_fsm_state34 = 154'd8589934592;
parameter    ap_ST_fsm_state35 = 154'd17179869184;
parameter    ap_ST_fsm_state36 = 154'd34359738368;
parameter    ap_ST_fsm_state37 = 154'd68719476736;
parameter    ap_ST_fsm_state38 = 154'd137438953472;
parameter    ap_ST_fsm_state39 = 154'd274877906944;
parameter    ap_ST_fsm_state40 = 154'd549755813888;
parameter    ap_ST_fsm_state41 = 154'd1099511627776;
parameter    ap_ST_fsm_state42 = 154'd2199023255552;
parameter    ap_ST_fsm_state43 = 154'd4398046511104;
parameter    ap_ST_fsm_state44 = 154'd8796093022208;
parameter    ap_ST_fsm_state45 = 154'd17592186044416;
parameter    ap_ST_fsm_state46 = 154'd35184372088832;
parameter    ap_ST_fsm_state47 = 154'd70368744177664;
parameter    ap_ST_fsm_state48 = 154'd140737488355328;
parameter    ap_ST_fsm_state49 = 154'd281474976710656;
parameter    ap_ST_fsm_state50 = 154'd562949953421312;
parameter    ap_ST_fsm_state51 = 154'd1125899906842624;
parameter    ap_ST_fsm_state52 = 154'd2251799813685248;
parameter    ap_ST_fsm_state53 = 154'd4503599627370496;
parameter    ap_ST_fsm_state54 = 154'd9007199254740992;
parameter    ap_ST_fsm_state55 = 154'd18014398509481984;
parameter    ap_ST_fsm_state56 = 154'd36028797018963968;
parameter    ap_ST_fsm_state57 = 154'd72057594037927936;
parameter    ap_ST_fsm_state58 = 154'd144115188075855872;
parameter    ap_ST_fsm_state59 = 154'd288230376151711744;
parameter    ap_ST_fsm_state60 = 154'd576460752303423488;
parameter    ap_ST_fsm_state61 = 154'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 154'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 154'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 154'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 154'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 154'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 154'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 154'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 154'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 154'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 154'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 154'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 154'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 154'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 154'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 154'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 154'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 154'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 154'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 154'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 154'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 154'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 154'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 154'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 154'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 154'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 154'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 154'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 154'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 154'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 154'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 154'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 154'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 154'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 154'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 154'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 154'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 154'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 154'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 154'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 154'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 154'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 154'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 154'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 154'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 154'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 154'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 154'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 154'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 154'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 154'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 154'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 154'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 154'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 154'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 154'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 154'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 154'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 154'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 154'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 154'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 154'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 154'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 154'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 154'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 154'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 154'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 154'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 154'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 154'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 154'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 154'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 154'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 154'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 154'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 154'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 154'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 154'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 154'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 154'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 154'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 154'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 154'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 154'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 154'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 154'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state147 = 154'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state148 = 154'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state149 = 154'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_state150 = 154'd713623846352979940529142984724747568191373312;
parameter    ap_ST_fsm_state151 = 154'd1427247692705959881058285969449495136382746624;
parameter    ap_ST_fsm_state152 = 154'd2854495385411919762116571938898990272765493248;
parameter    ap_ST_fsm_state153 = 154'd5708990770823839524233143877797980545530986496;
parameter    ap_ST_fsm_state154 = 154'd11417981541647679048466287755595961091061972992;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [1:0] g_address0;
output   g_ce0;
input  [31:0] g_q0;
output  [1:0] g_address1;
output   g_ce1;
input  [31:0] g_q1;
output  [1:0] a_address0;
output   a_ce0;
output   a_we0;
output  [31:0] a_d0;
input  [31:0] a_q0;
input  [31:0] beta;
output  [1:0] q_address0;
output   q_ce0;
output   q_we0;
output  [31:0] q_d0;
input  [31:0] q_q0;
output  [1:0] q_address1;
output   q_ce1;
output   q_we1;
output  [31:0] q_d1;
input  [31:0] q_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[1:0] g_address0;
reg g_ce0;
reg g_ce1;
reg[1:0] a_address0;
reg a_ce0;
reg a_we0;
reg[1:0] q_address0;
reg q_ce0;
reg q_we0;
reg[31:0] q_d0;
reg[1:0] q_address1;
reg q_ce1;
reg q_we1;

(* fsm_encoding = "none" *) reg   [153:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_320;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state43;
reg   [31:0] reg_331;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state48;
reg   [31:0] reg_341;
wire   [31:0] grp_fu_254_p2;
reg   [31:0] reg_354;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state31;
wire   [31:0] grp_fu_258_p2;
reg   [31:0] reg_362;
wire   [31:0] grp_fu_262_p2;
reg   [31:0] reg_370;
wire   [31:0] grp_fu_266_p2;
reg   [31:0] reg_378;
wire   [31:0] grp_fu_270_p2;
reg   [31:0] reg_386;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state89;
wire    ap_CS_fsm_state94;
wire   [31:0] grp_fu_274_p2;
reg   [31:0] reg_396;
wire   [31:0] grp_fu_278_p2;
reg   [31:0] reg_406;
wire   [31:0] grp_fu_282_p2;
reg   [31:0] reg_413;
wire   [31:0] grp_fu_234_p2;
reg   [31:0] reg_419;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_state76;
wire    ap_CS_fsm_state85;
wire    ap_CS_fsm_state103;
wire    ap_CS_fsm_state112;
wire    ap_CS_fsm_state121;
wire   [31:0] grp_fu_238_p2;
reg   [31:0] reg_427;
wire   [31:0] grp_fu_242_p2;
reg   [31:0] reg_435;
wire   [31:0] grp_fu_246_p2;
reg   [31:0] reg_442;
reg   [31:0] reg_450;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state107;
reg   [31:0] reg_459;
reg   [31:0] reg_470;
reg   [31:0] reg_479;
reg   [31:0] reg_488;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state84;
wire    ap_CS_fsm_state99;
reg   [31:0] reg_499;
reg   [31:0] reg_505;
reg   [31:0] g_load_reg_688;
wire   [31:0] tmp_neg_fu_517_p2;
reg   [31:0] tmp_neg_reg_705;
reg   [31:0] g_load_1_reg_710;
reg   [31:0] g_load_2_reg_717;
wire   [31:0] tmp_fu_523_p1;
wire    ap_CS_fsm_state4;
wire   [1:0] a_addr_reg_730;
wire   [0:0] notlhs_fu_545_p2;
reg   [0:0] notlhs_reg_735;
wire    ap_CS_fsm_state28;
wire   [0:0] notrhs_fu_551_p2;
reg   [0:0] notrhs_reg_740;
wire   [0:0] tmp_65_fu_561_p2;
reg   [0:0] tmp_65_reg_745;
wire   [0:0] notlhs3_fu_585_p2;
reg   [0:0] notlhs3_reg_754;
wire    ap_CS_fsm_state33;
wire   [0:0] notrhs4_fu_591_p2;
reg   [0:0] notrhs4_reg_759;
wire   [0:0] tmp_70_fu_601_p2;
reg   [0:0] tmp_70_reg_764;
wire    ap_CS_fsm_state36;
wire   [0:0] notlhs5_fu_625_p2;
reg   [0:0] notlhs5_reg_773;
wire    ap_CS_fsm_state38;
wire   [0:0] notrhs6_fu_631_p2;
reg   [0:0] notrhs6_reg_778;
wire   [0:0] tmp_75_fu_641_p2;
reg   [0:0] tmp_75_reg_783;
wire    ap_CS_fsm_state41;
reg   [31:0] q_load_6_reg_787;
reg   [31:0] p_4q1_reg_797;
reg   [31:0] tmp_44_reg_803;
reg   [31:0] p_4q2_reg_808;
wire    ap_CS_fsm_state62;
wire   [1:0] a_addr_3_gep_fu_134_p3;
wire    ap_CS_fsm_state70;
reg   [31:0] a_load_4_reg_819;
wire    ap_CS_fsm_state71;
wire   [31:0] grp_fu_298_p2;
reg   [31:0] tmp_57_reg_827;
wire   [31:0] grp_fu_302_p2;
reg   [31:0] tmp_58_reg_832;
wire   [31:0] grp_fu_306_p2;
reg   [31:0] tmp_60_reg_837;
wire   [31:0] grp_fu_311_p2;
reg   [31:0] tmp_63_reg_842;
wire   [1:0] a_addr_4_gep_fu_143_p3;
wire    ap_CS_fsm_state106;
reg   [31:0] qDot_0_1_reg_852;
wire    ap_CS_fsm_state135;
reg   [31:0] qDot_1_1_reg_857;
reg   [31:0] qDot_2_1_reg_862;
reg   [31:0] qDot_3_1_reg_867;
wire   [31:0] grp_feedbackStep_fu_192_ap_return_0;
wire   [31:0] grp_feedbackStep_fu_192_ap_return_1;
wire   [31:0] grp_feedbackStep_fu_192_ap_return_2;
wire   [31:0] grp_feedbackStep_fu_192_ap_return_3;
wire    grp_normalise_1_fu_205_ap_start;
wire    grp_normalise_1_fu_205_ap_done;
wire    grp_normalise_1_fu_205_ap_idle;
wire    grp_normalise_1_fu_205_ap_ready;
wire   [31:0] grp_normalise_1_fu_205_ap_return_0;
wire   [31:0] grp_normalise_1_fu_205_ap_return_1;
wire   [31:0] grp_normalise_1_fu_205_ap_return_2;
wire    grp_normalise_fu_213_ap_start;
wire    grp_normalise_fu_213_ap_done;
wire    grp_normalise_fu_213_ap_idle;
wire    grp_normalise_fu_213_ap_ready;
wire   [1:0] grp_normalise_fu_213_in_r_address0;
wire    grp_normalise_fu_213_in_r_ce0;
wire    grp_normalise_fu_213_in_r_we0;
wire   [31:0] grp_normalise_fu_213_in_r_d0;
reg   [31:0] grp_normalise_fu_213_in_r_q0;
wire    grp_integrateQdot_fu_220_ap_start;
wire    grp_integrateQdot_fu_220_ap_done;
wire    grp_integrateQdot_fu_220_ap_idle;
wire    grp_integrateQdot_fu_220_ap_ready;
wire   [1:0] grp_integrateQdot_fu_220_q_address0;
wire    grp_integrateQdot_fu_220_q_ce0;
wire    grp_integrateQdot_fu_220_q_we0;
wire   [31:0] grp_integrateQdot_fu_220_q_d0;
wire   [1:0] grp_integrateQdot_fu_220_q_address1;
wire    grp_integrateQdot_fu_220_q_ce1;
wire    grp_integrateQdot_fu_220_q_we1;
wire   [31:0] grp_integrateQdot_fu_220_q_d1;
reg   [31:0] ap_phi_mux_qDot_3_10_phi_fu_155_p4;
reg   [31:0] qDot_3_10_reg_152;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state136;
reg   [31:0] ap_phi_mux_qDot_2_11_phi_fu_165_p4;
reg   [31:0] qDot_2_11_reg_162;
reg   [31:0] ap_phi_mux_qDot_1_12_phi_fu_175_p4;
reg   [31:0] qDot_1_12_reg_172;
reg   [31:0] ap_phi_mux_qDot_phi_fu_185_p4;
reg   [31:0] qDot_reg_182;
wire    ap_CS_fsm_state122;
reg    ap_reg_grp_normalise_1_fu_205_ap_start;
reg    ap_reg_grp_normalise_fu_213_ap_start;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state153;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state154;
reg    ap_reg_grp_integrateQdot_fu_220_ap_start;
reg   [153:0] ap_NS_fsm;
wire    ap_NS_fsm_state136;
wire    ap_CS_fsm_state140;
wire    ap_CS_fsm_state141;
wire    ap_CS_fsm_state142;
wire    ap_CS_fsm_state143;
wire    ap_CS_fsm_state144;
wire    ap_CS_fsm_state149;
wire    ap_CS_fsm_state150;
wire    ap_CS_fsm_state151;
wire    ap_CS_fsm_state152;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state52;
reg   [31:0] grp_fu_234_p0;
reg   [31:0] grp_fu_234_p1;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state68;
wire    ap_CS_fsm_state77;
wire    ap_CS_fsm_state86;
wire    ap_CS_fsm_state95;
wire    ap_CS_fsm_state104;
wire    ap_CS_fsm_state113;
reg   [31:0] grp_fu_238_p0;
reg   [31:0] grp_fu_238_p1;
reg   [31:0] grp_fu_242_p0;
reg   [31:0] grp_fu_242_p1;
reg   [31:0] grp_fu_246_p0;
reg   [31:0] grp_fu_246_p1;
reg   [31:0] grp_fu_254_p0;
reg   [31:0] grp_fu_254_p1;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state72;
wire    ap_CS_fsm_state80;
wire    ap_CS_fsm_state90;
wire    ap_CS_fsm_state108;
reg   [31:0] grp_fu_258_p0;
reg   [31:0] grp_fu_258_p1;
reg   [31:0] grp_fu_262_p0;
reg   [31:0] grp_fu_262_p1;
reg   [31:0] grp_fu_266_p0;
reg   [31:0] grp_fu_266_p1;
reg   [31:0] grp_fu_270_p0;
reg   [31:0] grp_fu_270_p1;
reg   [31:0] grp_fu_274_p0;
reg   [31:0] grp_fu_274_p1;
reg   [31:0] grp_fu_278_p0;
reg   [31:0] grp_fu_278_p1;
reg   [31:0] grp_fu_282_p0;
reg   [31:0] grp_fu_282_p1;
wire   [31:0] tmp_to_int_fu_513_p1;
wire   [31:0] a_load_to_int_fu_527_p1;
wire   [7:0] tmp_20_fu_531_p4;
wire   [22:0] tmp_21_fu_541_p1;
wire   [0:0] tmp_22_fu_557_p2;
wire   [0:0] grp_fu_315_p2;
wire   [31:0] a_load_1_to_int_fu_567_p1;
wire   [7:0] tmp_66_fu_571_p4;
wire   [22:0] tmp_67_fu_581_p1;
wire   [0:0] tmp_68_fu_597_p2;
wire   [31:0] a_load_2_to_int_fu_607_p1;
wire   [7:0] tmp_71_fu_611_p4;
wire   [22:0] tmp_72_fu_621_p1;
wire   [0:0] tmp_73_fu_637_p2;
reg   [1:0] grp_fu_234_opcode;
reg   [1:0] grp_fu_238_opcode;
reg   [1:0] grp_fu_242_opcode;
reg   [1:0] grp_fu_246_opcode;
reg    grp_fu_254_ce;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state73;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state75;
wire    ap_CS_fsm_state81;
wire    ap_CS_fsm_state82;
wire    ap_CS_fsm_state83;
wire    ap_CS_fsm_state87;
wire    ap_CS_fsm_state88;
wire    ap_CS_fsm_state91;
wire    ap_CS_fsm_state92;
wire    ap_CS_fsm_state93;
wire    ap_CS_fsm_state96;
wire    ap_CS_fsm_state97;
wire    ap_CS_fsm_state98;
wire    ap_CS_fsm_state109;
wire    ap_CS_fsm_state110;
wire    ap_CS_fsm_state111;
reg    grp_fu_258_ce;
reg    grp_fu_262_ce;
reg    grp_fu_266_ce;
reg    grp_fu_270_ce;

// power-on initialization
initial begin
#0 ap_CS_fsm = 154'd1;
#0 ap_reg_grp_normalise_1_fu_205_ap_start = 1'b0;
#0 ap_reg_grp_normalise_fu_213_ap_start = 1'b0;
#0 ap_reg_grp_integrateQdot_fu_220_ap_start = 1'b0;
end

feedbackStep grp_feedbackStep_fu_192(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .qDot_0_read(reg_354),
    .qDot_1_read(reg_362),
    .qDot_2_read(reg_370),
    .qDot_3_read(reg_378),
    .beta(beta),
    .s_0_read(grp_normalise_1_fu_205_ap_return_2),
    .s_1_read(grp_normalise_1_fu_205_ap_return_0),
    .s_2_read(grp_normalise_1_fu_205_ap_return_1),
    .s_3_read(reg_442),
    .ap_return_0(grp_feedbackStep_fu_192_ap_return_0),
    .ap_return_1(grp_feedbackStep_fu_192_ap_return_1),
    .ap_return_2(grp_feedbackStep_fu_192_ap_return_2),
    .ap_return_3(grp_feedbackStep_fu_192_ap_return_3)
);

normalise_1 grp_normalise_1_fu_205(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_normalise_1_fu_205_ap_start),
    .ap_done(grp_normalise_1_fu_205_ap_done),
    .ap_idle(grp_normalise_1_fu_205_ap_idle),
    .ap_ready(grp_normalise_1_fu_205_ap_ready),
    .in_0_read(reg_419),
    .in_1_read(reg_427),
    .in_2_read(reg_435),
    .in_3_read(reg_442),
    .ap_return_0(grp_normalise_1_fu_205_ap_return_0),
    .ap_return_1(grp_normalise_1_fu_205_ap_return_1),
    .ap_return_2(grp_normalise_1_fu_205_ap_return_2)
);

normalise grp_normalise_fu_213(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_normalise_fu_213_ap_start),
    .ap_done(grp_normalise_fu_213_ap_done),
    .ap_idle(grp_normalise_fu_213_ap_idle),
    .ap_ready(grp_normalise_fu_213_ap_ready),
    .in_r_address0(grp_normalise_fu_213_in_r_address0),
    .in_r_ce0(grp_normalise_fu_213_in_r_ce0),
    .in_r_we0(grp_normalise_fu_213_in_r_we0),
    .in_r_d0(grp_normalise_fu_213_in_r_d0),
    .in_r_q0(grp_normalise_fu_213_in_r_q0)
);

integrateQdot grp_integrateQdot_fu_220(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_integrateQdot_fu_220_ap_start),
    .ap_done(grp_integrateQdot_fu_220_ap_done),
    .ap_idle(grp_integrateQdot_fu_220_ap_idle),
    .ap_ready(grp_integrateQdot_fu_220_ap_ready),
    .q_address0(grp_integrateQdot_fu_220_q_address0),
    .q_ce0(grp_integrateQdot_fu_220_q_ce0),
    .q_we0(grp_integrateQdot_fu_220_q_we0),
    .q_d0(grp_integrateQdot_fu_220_q_d0),
    .q_q0(q_q0),
    .q_address1(grp_integrateQdot_fu_220_q_address1),
    .q_ce1(grp_integrateQdot_fu_220_q_ce1),
    .q_we1(grp_integrateQdot_fu_220_q_we1),
    .q_d1(grp_integrateQdot_fu_220_q_d1),
    .q_q1(q_q1),
    .p_read(ap_phi_mux_qDot_phi_fu_185_p4),
    .p_read1(ap_phi_mux_qDot_1_12_phi_fu_175_p4),
    .p_read2(ap_phi_mux_qDot_2_11_phi_fu_165_p4),
    .p_read3(ap_phi_mux_qDot_3_10_phi_fu_155_p4)
);

MadgwickAHRSupdatbkb #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatbkb_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_234_p0),
    .din1(grp_fu_234_p1),
    .opcode(grp_fu_234_opcode),
    .ce(1'b1),
    .dout(grp_fu_234_p2)
);

MadgwickAHRSupdatbkb #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatbkb_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_238_p0),
    .din1(grp_fu_238_p1),
    .opcode(grp_fu_238_opcode),
    .ce(1'b1),
    .dout(grp_fu_238_p2)
);

MadgwickAHRSupdatbkb #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatbkb_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_242_p0),
    .din1(grp_fu_242_p1),
    .opcode(grp_fu_242_opcode),
    .ce(1'b1),
    .dout(grp_fu_242_p2)
);

MadgwickAHRSupdatbkb #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatbkb_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_246_p0),
    .din1(grp_fu_246_p1),
    .opcode(grp_fu_246_opcode),
    .ce(1'b1),
    .dout(grp_fu_246_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U45(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_254_p0),
    .din1(grp_fu_254_p1),
    .ce(grp_fu_254_ce),
    .dout(grp_fu_254_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U46(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_258_p0),
    .din1(grp_fu_258_p1),
    .ce(grp_fu_258_ce),
    .dout(grp_fu_258_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_262_p0),
    .din1(grp_fu_262_p1),
    .ce(grp_fu_262_ce),
    .dout(grp_fu_262_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_266_p0),
    .din1(grp_fu_266_p1),
    .ce(grp_fu_266_ce),
    .dout(grp_fu_266_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_270_p0),
    .din1(grp_fu_270_p1),
    .ce(grp_fu_270_ce),
    .dout(grp_fu_270_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_274_p0),
    .din1(grp_fu_274_p1),
    .ce(1'b1),
    .dout(grp_fu_274_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U51(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_278_p0),
    .din1(grp_fu_278_p1),
    .ce(1'b1),
    .dout(grp_fu_278_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U52(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_282_p0),
    .din1(grp_fu_282_p1),
    .ce(1'b1),
    .dout(grp_fu_282_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_406),
    .din1(reg_341),
    .ce(1'b1),
    .dout(grp_fu_298_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_459),
    .din1(reg_450),
    .ce(1'b1),
    .dout(grp_fu_302_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U55(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_396),
    .din1(32'd1082130432),
    .ce(1'b1),
    .dout(grp_fu_306_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_470),
    .din1(a_load_4_reg_819),
    .ce(1'b1),
    .dout(grp_fu_311_p2)
);

MadgwickAHRSupdatdEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
MadgwickAHRSupdatdEe_U57(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_450),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd1),
    .dout(grp_fu_315_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_integrateQdot_fu_220_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_NS_fsm_state136) & ((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state135)))) begin
            ap_reg_grp_integrateQdot_fu_220_ap_start <= 1'b1;
        end else if ((1'b1 == grp_integrateQdot_fu_220_ap_ready)) begin
            ap_reg_grp_integrateQdot_fu_220_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_normalise_1_fu_205_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state121)) begin
            ap_reg_grp_normalise_1_fu_205_ap_start <= 1'b1;
        end else if ((1'b1 == grp_normalise_1_fu_205_ap_ready)) begin
            ap_reg_grp_normalise_1_fu_205_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_normalise_fu_213_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state153) | (1'b1 == ap_CS_fsm_state50))) begin
            ap_reg_grp_normalise_fu_213_ap_start <= 1'b1;
        end else if ((1'b1 == grp_normalise_fu_213_ap_ready)) begin
            ap_reg_grp_normalise_fu_213_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state136) & ((tmp_75_reg_783 == 1'd0) | (tmp_70_reg_764 == 1'd0) | (tmp_65_reg_745 == 1'd0)))) begin
        qDot_1_12_reg_172 <= qDot_1_1_reg_857;
    end else if (((1'd1 == tmp_75_reg_783) & (1'd1 == tmp_70_reg_764) & (tmp_65_reg_745 == 1'd1) & (1'b1 == ap_CS_fsm_state42))) begin
        qDot_1_12_reg_172 <= reg_362;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state136) & ((tmp_75_reg_783 == 1'd0) | (tmp_70_reg_764 == 1'd0) | (tmp_65_reg_745 == 1'd0)))) begin
        qDot_2_11_reg_162 <= qDot_2_1_reg_862;
    end else if (((1'd1 == tmp_75_reg_783) & (1'd1 == tmp_70_reg_764) & (tmp_65_reg_745 == 1'd1) & (1'b1 == ap_CS_fsm_state42))) begin
        qDot_2_11_reg_162 <= reg_370;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state136) & ((tmp_75_reg_783 == 1'd0) | (tmp_70_reg_764 == 1'd0) | (tmp_65_reg_745 == 1'd0)))) begin
        qDot_3_10_reg_152 <= qDot_3_1_reg_867;
    end else if (((1'd1 == tmp_75_reg_783) & (1'd1 == tmp_70_reg_764) & (tmp_65_reg_745 == 1'd1) & (1'b1 == ap_CS_fsm_state42))) begin
        qDot_3_10_reg_152 <= reg_378;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state136) & ((tmp_75_reg_783 == 1'd0) | (tmp_70_reg_764 == 1'd0) | (tmp_65_reg_745 == 1'd0)))) begin
        qDot_reg_182 <= qDot_0_1_reg_852;
    end else if (((1'd1 == tmp_75_reg_783) & (1'd1 == tmp_70_reg_764) & (tmp_65_reg_745 == 1'd1) & (1'b1 == ap_CS_fsm_state42))) begin
        qDot_reg_182 <= reg_354;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        reg_320 <= q_q1;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state2))) begin
        reg_320 <= q_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        reg_331 <= q_q1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        reg_331 <= q_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        reg_341 <= q_q0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        reg_341 <= q_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        a_load_4_reg_819 <= a_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        g_load_1_reg_710 <= g_q0;
        g_load_2_reg_717 <= g_q1;
        tmp_neg_reg_705 <= tmp_neg_fu_517_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        g_load_reg_688 <= g_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        notlhs3_reg_754 <= notlhs3_fu_585_p2;
        notrhs4_reg_759 <= notrhs4_fu_591_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        notlhs5_reg_773 <= notlhs5_fu_625_p2;
        notrhs6_reg_778 <= notrhs6_fu_631_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        notlhs_reg_735 <= notlhs_fu_545_p2;
        notrhs_reg_740 <= notrhs_fu_551_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        p_4q1_reg_797 <= grp_fu_262_p2;
        q_load_6_reg_787 <= q_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        p_4q2_reg_808 <= grp_fu_254_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state135)) begin
        qDot_0_1_reg_852 <= grp_feedbackStep_fu_192_ap_return_0;
        qDot_1_1_reg_857 <= grp_feedbackStep_fu_192_ap_return_1;
        qDot_2_1_reg_862 <= grp_feedbackStep_fu_192_ap_return_2;
        qDot_3_1_reg_867 <= grp_feedbackStep_fu_192_ap_return_3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state8))) begin
        reg_354 <= grp_fu_254_p2;
        reg_362 <= grp_fu_258_p2;
        reg_370 <= grp_fu_262_p2;
        reg_378 <= grp_fu_266_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state8))) begin
        reg_386 <= grp_fu_270_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state8))) begin
        reg_396 <= grp_fu_274_p2;
        reg_406 <= grp_fu_278_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state8))) begin
        reg_413 <= grp_fu_282_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_419 <= grp_fu_234_p2;
        reg_427 <= grp_fu_238_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_435 <= grp_fu_242_p2;
        reg_442 <= grp_fu_246_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state53))) begin
        reg_450 <= a_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state48))) begin
        reg_459 <= grp_fu_254_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state53))) begin
        reg_470 <= grp_fu_258_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state53))) begin
        reg_479 <= grp_fu_266_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state67))) begin
        reg_488 <= grp_fu_254_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state67))) begin
        reg_499 <= grp_fu_258_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state89))) begin
        reg_505 <= grp_fu_262_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        tmp_44_reg_803 <= grp_fu_266_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state94)) begin
        tmp_57_reg_827 <= grp_fu_298_p2;
        tmp_58_reg_832 <= grp_fu_302_p2;
        tmp_60_reg_837 <= grp_fu_306_p2;
        tmp_63_reg_842 <= grp_fu_311_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        tmp_65_reg_745 <= tmp_65_fu_561_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        tmp_70_reg_764 <= tmp_70_fu_601_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        tmp_75_reg_783 <= tmp_75_fu_641_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        a_address0 = a_addr_4_gep_fu_143_p3;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        a_address0 = a_addr_3_gep_fu_134_p3;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        a_address0 = a_addr_reg_730;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        a_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        a_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        a_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        a_address0 = grp_normalise_fu_213_in_r_address0;
    end else begin
        a_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state31))) begin
        a_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        a_ce0 = grp_normalise_fu_213_in_r_ce0;
    end else begin
        a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        a_we0 = grp_normalise_fu_213_in_r_we0;
    end else begin
        a_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((grp_normalise_fu_213_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state154)) | ((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state136) & ((tmp_75_reg_783 == 1'd0) | (tmp_70_reg_764 == 1'd0) | (tmp_65_reg_745 == 1'd0)))) begin
        ap_phi_mux_qDot_1_12_phi_fu_175_p4 = qDot_1_1_reg_857;
    end else begin
        ap_phi_mux_qDot_1_12_phi_fu_175_p4 = qDot_1_12_reg_172;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state136) & ((tmp_75_reg_783 == 1'd0) | (tmp_70_reg_764 == 1'd0) | (tmp_65_reg_745 == 1'd0)))) begin
        ap_phi_mux_qDot_2_11_phi_fu_165_p4 = qDot_2_1_reg_862;
    end else begin
        ap_phi_mux_qDot_2_11_phi_fu_165_p4 = qDot_2_11_reg_162;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state136) & ((tmp_75_reg_783 == 1'd0) | (tmp_70_reg_764 == 1'd0) | (tmp_65_reg_745 == 1'd0)))) begin
        ap_phi_mux_qDot_3_10_phi_fu_155_p4 = qDot_3_1_reg_867;
    end else begin
        ap_phi_mux_qDot_3_10_phi_fu_155_p4 = qDot_3_10_reg_152;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state136) & ((tmp_75_reg_783 == 1'd0) | (tmp_70_reg_764 == 1'd0) | (tmp_65_reg_745 == 1'd0)))) begin
        ap_phi_mux_qDot_phi_fu_185_p4 = qDot_0_1_reg_852;
    end else begin
        ap_phi_mux_qDot_phi_fu_185_p4 = qDot_reg_182;
    end
end

always @ (*) begin
    if (((grp_normalise_fu_213_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state154))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        g_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        g_address0 = 64'd1;
    end else begin
        g_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        g_ce0 = 1'b1;
    end else begin
        g_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        g_ce1 = 1'b1;
    end else begin
        g_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_234_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state68))) begin
        grp_fu_234_opcode = 2'd0;
    end else begin
        grp_fu_234_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_fu_234_p0 = reg_459;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        grp_fu_234_p0 = reg_488;
    end else if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_234_p0 = reg_419;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_234_p0 = reg_354;
    end else begin
        grp_fu_234_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        grp_fu_234_p1 = reg_479;
    end else if ((1'b1 == ap_CS_fsm_state104)) begin
        grp_fu_234_p1 = reg_505;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_fu_234_p1 = reg_470;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        grp_fu_234_p1 = p_4q1_reg_797;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_fu_234_p1 = reg_459;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        grp_fu_234_p1 = reg_488;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        grp_fu_234_p1 = reg_499;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_234_p1 = reg_354;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_234_p1 = reg_362;
    end else begin
        grp_fu_234_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_238_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_238_opcode = 2'd0;
    end else begin
        grp_fu_238_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_fu_238_p0 = reg_419;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        grp_fu_238_p0 = reg_505;
    end else if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_238_p0 = reg_427;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_238_p0 = reg_370;
    end else begin
        grp_fu_238_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        grp_fu_238_p1 = reg_459;
    end else if ((1'b1 == ap_CS_fsm_state104)) begin
        grp_fu_238_p1 = reg_396;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_fu_238_p1 = reg_386;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        grp_fu_238_p1 = p_4q2_reg_808;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_fu_238_p1 = reg_470;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        grp_fu_238_p1 = reg_499;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        grp_fu_238_p1 = tmp_44_reg_803;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_238_p1 = reg_362;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_238_p1 = reg_378;
    end else begin
        grp_fu_238_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_242_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_242_opcode = 2'd0;
    end else begin
        grp_fu_242_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_fu_242_p0 = reg_427;
    end else if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_242_p0 = reg_435;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_242_p0 = reg_386;
    end else begin
        grp_fu_242_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        grp_fu_242_p1 = reg_470;
    end else if ((1'b1 == ap_CS_fsm_state104)) begin
        grp_fu_242_p1 = reg_413;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_fu_242_p1 = reg_406;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_242_p1 = reg_370;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_242_p1 = reg_396;
    end else begin
        grp_fu_242_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_246_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_246_opcode = 2'd0;
    end else begin
        grp_fu_246_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_fu_246_p0 = tmp_57_reg_827;
    end else if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_246_p0 = reg_442;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_246_p0 = reg_406;
    end else begin
        grp_fu_246_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        grp_fu_246_p1 = tmp_63_reg_842;
    end else if ((1'b1 == ap_CS_fsm_state104)) begin
        grp_fu_246_p1 = reg_488;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_fu_246_p1 = tmp_58_reg_832;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_246_p1 = reg_378;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_246_p1 = reg_413;
    end else begin
        grp_fu_246_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | ((grp_normalise_fu_213_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state51)))) begin
        grp_fu_254_ce = 1'b1;
    end else begin
        grp_fu_254_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_fu_254_p0 = tmp_60_reg_837;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_254_p0 = reg_505;
    end else if (((1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state85))) begin
        grp_fu_254_p0 = reg_331;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        grp_fu_254_p0 = reg_459;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        grp_fu_254_p0 = reg_386;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_fu_254_p0 = q_load_6_reg_787;
    end else if (((1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state54))) begin
        grp_fu_254_p0 = p_4q1_reg_797;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_254_p0 = reg_419;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_254_p0 = reg_320;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_254_p0 = g_load_reg_688;
    end else begin
        grp_fu_254_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state108)) begin
        grp_fu_254_p1 = reg_450;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_fu_254_p1 = reg_341;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_254_p1 = reg_396;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        grp_fu_254_p1 = a_load_4_reg_819;
    end else if (((1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state63))) begin
        grp_fu_254_p1 = reg_331;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_fu_254_p1 = 32'd1082130432;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_fu_254_p1 = reg_479;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state85))) begin
        grp_fu_254_p1 = 32'd1073741824;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_fu_254_p1 = reg_320;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_254_p1 = 32'd1056964608;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_254_p1 = g_load_2_reg_717;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_254_p1 = tmp_fu_523_p1;
    end else begin
        grp_fu_254_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | ((grp_normalise_fu_213_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state51)))) begin
        grp_fu_258_ce = 1'b1;
    end else begin
        grp_fu_258_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_258_p0 = q_load_6_reg_787;
    end else if (((1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state63))) begin
        grp_fu_258_p0 = p_4q2_reg_808;
    end else if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state54))) begin
        grp_fu_258_p0 = reg_470;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_258_p0 = reg_341;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_258_p0 = reg_427;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_258_p0 = reg_320;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_258_p0 = reg_331;
    end else begin
        grp_fu_258_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        grp_fu_258_p1 = a_load_4_reg_819;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        grp_fu_258_p1 = reg_479;
    end else if (((1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state54))) begin
        grp_fu_258_p1 = reg_450;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state85))) begin
        grp_fu_258_p1 = 32'd1073741824;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_258_p1 = 32'd1056964608;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state4))) begin
        grp_fu_258_p1 = g_load_1_reg_710;
    end else begin
        grp_fu_258_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | ((grp_normalise_fu_213_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state51)))) begin
        grp_fu_262_ce = 1'b1;
    end else begin
        grp_fu_262_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_262_p0 = reg_505;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_fu_262_p0 = reg_386;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_262_p0 = reg_331;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_262_p0 = reg_435;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state85))) begin
        grp_fu_262_p0 = reg_320;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_262_p0 = reg_341;
    end else begin
        grp_fu_262_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_262_p1 = reg_488;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_fu_262_p1 = q_load_6_reg_787;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state85))) begin
        grp_fu_262_p1 = 32'd1082130432;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_262_p1 = 32'd1056964608;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state4))) begin
        grp_fu_262_p1 = g_load_reg_688;
    end else begin
        grp_fu_262_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | ((grp_normalise_fu_213_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state51)))) begin
        grp_fu_266_ce = 1'b1;
    end else begin
        grp_fu_266_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state54))) begin
        grp_fu_266_p0 = reg_459;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_266_p0 = reg_341;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_266_p0 = reg_442;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state85))) begin
        grp_fu_266_p0 = reg_331;
    end else begin
        grp_fu_266_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_266_p1 = a_load_4_reg_819;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_266_p1 = 32'd1090519040;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_fu_266_p1 = reg_450;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_266_p1 = reg_341;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_266_p1 = 32'd1056964608;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_266_p1 = g_load_reg_688;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_266_p1 = g_load_2_reg_717;
    end else begin
        grp_fu_266_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | ((grp_normalise_fu_213_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state51)))) begin
        grp_fu_270_ce = 1'b1;
    end else begin
        grp_fu_270_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_270_p0 = reg_479;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_270_p0 = q_load_6_reg_787;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_270_p0 = reg_459;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_270_p0 = reg_341;
    end else begin
        grp_fu_270_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_270_p1 = reg_488;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_270_p1 = 32'd1090519040;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_270_p1 = 32'd1082130432;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_270_p1 = g_load_1_reg_710;
    end else begin
        grp_fu_270_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_274_p0 = reg_479;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_274_p0 = q_load_6_reg_787;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_274_p0 = reg_320;
    end else begin
        grp_fu_274_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_274_p1 = reg_396;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_274_p1 = q_load_6_reg_787;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_274_p1 = g_load_2_reg_717;
    end else begin
        grp_fu_274_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_278_p0 = reg_386;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_278_p0 = reg_488;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_278_p0 = reg_341;
    end else begin
        grp_fu_278_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_278_p1 = reg_488;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_278_p1 = 32'd1082130432;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_278_p1 = g_load_2_reg_717;
    end else begin
        grp_fu_278_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_282_p0 = reg_386;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_282_p0 = reg_320;
    end else begin
        grp_fu_282_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_282_p1 = reg_396;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_282_p1 = g_load_1_reg_710;
    end else begin
        grp_fu_282_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state154)) begin
        grp_normalise_fu_213_in_r_q0 = q_q0;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_normalise_fu_213_in_r_q0 = a_q0;
    end else begin
        grp_normalise_fu_213_in_r_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        q_address0 = 2'd3;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        q_address0 = 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        q_address0 = 2'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        q_address0 = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state151) | (1'b1 == ap_CS_fsm_state150) | (1'b1 == ap_CS_fsm_state149) | (1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state143) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state140))) begin
        q_address0 = grp_integrateQdot_fu_220_q_address0;
    end else if ((1'b1 == ap_CS_fsm_state154)) begin
        q_address0 = grp_normalise_fu_213_in_r_address0;
    end else begin
        q_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        q_address1 = 2'd2;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        q_address1 = 2'd1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        q_address1 = 2'd3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        q_address1 = 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state151) | (1'b1 == ap_CS_fsm_state150) | (1'b1 == ap_CS_fsm_state149) | (1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state143) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state140))) begin
        q_address1 = grp_integrateQdot_fu_220_q_address1;
    end else begin
        q_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        q_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state151) | (1'b1 == ap_CS_fsm_state150) | (1'b1 == ap_CS_fsm_state149) | (1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state143) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state140))) begin
        q_ce0 = grp_integrateQdot_fu_220_q_ce0;
    end else if ((1'b1 == ap_CS_fsm_state154)) begin
        q_ce0 = grp_normalise_fu_213_in_r_ce0;
    end else begin
        q_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state2))) begin
        q_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state151) | (1'b1 == ap_CS_fsm_state150) | (1'b1 == ap_CS_fsm_state149) | (1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state143) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state140))) begin
        q_ce1 = grp_integrateQdot_fu_220_q_ce1;
    end else begin
        q_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state151) | (1'b1 == ap_CS_fsm_state150) | (1'b1 == ap_CS_fsm_state149) | (1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state143) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state140))) begin
        q_d0 = grp_integrateQdot_fu_220_q_d0;
    end else if ((1'b1 == ap_CS_fsm_state154)) begin
        q_d0 = grp_normalise_fu_213_in_r_d0;
    end else begin
        q_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state151) | (1'b1 == ap_CS_fsm_state150) | (1'b1 == ap_CS_fsm_state149) | (1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state143) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state140))) begin
        q_we0 = grp_integrateQdot_fu_220_q_we0;
    end else if ((1'b1 == ap_CS_fsm_state154)) begin
        q_we0 = grp_normalise_fu_213_in_r_we0;
    end else begin
        q_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state151) | (1'b1 == ap_CS_fsm_state150) | (1'b1 == ap_CS_fsm_state149) | (1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state143) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state140))) begin
        q_we1 = grp_integrateQdot_fu_220_q_we1;
    end else begin
        q_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            if (((tmp_65_fu_561_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            if (((tmp_70_fu_601_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            if (((1'd1 == tmp_75_reg_783) & (1'd1 == tmp_70_reg_764) & (tmp_65_reg_745 == 1'd1) & (1'b1 == ap_CS_fsm_state42))) begin
                ap_NS_fsm = ap_ST_fsm_state136;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            if (((grp_normalise_fu_213_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state51))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            if (((grp_normalise_1_fu_205_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state122))) begin
                ap_NS_fsm = ap_ST_fsm_state123;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state122;
            end
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            ap_NS_fsm = ap_ST_fsm_state151;
        end
        ap_ST_fsm_state151 : begin
            ap_NS_fsm = ap_ST_fsm_state152;
        end
        ap_ST_fsm_state152 : begin
            ap_NS_fsm = ap_ST_fsm_state153;
        end
        ap_ST_fsm_state153 : begin
            ap_NS_fsm = ap_ST_fsm_state154;
        end
        ap_ST_fsm_state154 : begin
            if (((grp_normalise_fu_213_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state154))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state154;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_addr_3_gep_fu_134_p3 = 64'd2;

assign a_addr_4_gep_fu_143_p3 = 64'd3;

assign a_addr_reg_730 = 64'd1;

assign a_d0 = grp_normalise_fu_213_in_r_d0;

assign a_load_1_to_int_fu_567_p1 = reg_450;

assign a_load_2_to_int_fu_607_p1 = reg_450;

assign a_load_to_int_fu_527_p1 = reg_450;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state121 = ap_CS_fsm[32'd120];

assign ap_CS_fsm_state122 = ap_CS_fsm[32'd121];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state135 = ap_CS_fsm[32'd134];

assign ap_CS_fsm_state136 = ap_CS_fsm[32'd135];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state140 = ap_CS_fsm[32'd139];

assign ap_CS_fsm_state141 = ap_CS_fsm[32'd140];

assign ap_CS_fsm_state142 = ap_CS_fsm[32'd141];

assign ap_CS_fsm_state143 = ap_CS_fsm[32'd142];

assign ap_CS_fsm_state144 = ap_CS_fsm[32'd143];

assign ap_CS_fsm_state149 = ap_CS_fsm[32'd148];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state150 = ap_CS_fsm[32'd149];

assign ap_CS_fsm_state151 = ap_CS_fsm[32'd150];

assign ap_CS_fsm_state152 = ap_CS_fsm[32'd151];

assign ap_CS_fsm_state153 = ap_CS_fsm[32'd152];

assign ap_CS_fsm_state154 = ap_CS_fsm[32'd153];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd98];

assign ap_NS_fsm_state136 = ap_NS_fsm[32'd135];

assign g_address1 = 64'd3;

assign grp_integrateQdot_fu_220_ap_start = ap_reg_grp_integrateQdot_fu_220_ap_start;

assign grp_normalise_1_fu_205_ap_start = ap_reg_grp_normalise_1_fu_205_ap_start;

assign grp_normalise_fu_213_ap_start = ap_reg_grp_normalise_fu_213_ap_start;

assign notlhs3_fu_585_p2 = ((tmp_66_fu_571_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs5_fu_625_p2 = ((tmp_71_fu_611_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs_fu_545_p2 = ((tmp_20_fu_531_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notrhs4_fu_591_p2 = ((tmp_67_fu_581_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs6_fu_631_p2 = ((tmp_72_fu_621_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs_fu_551_p2 = ((tmp_21_fu_541_p1 == 23'd0) ? 1'b1 : 1'b0);

assign q_d1 = grp_integrateQdot_fu_220_q_d1;

assign tmp_20_fu_531_p4 = {{a_load_to_int_fu_527_p1[30:23]}};

assign tmp_21_fu_541_p1 = a_load_to_int_fu_527_p1[22:0];

assign tmp_22_fu_557_p2 = (notrhs_reg_740 | notlhs_reg_735);

assign tmp_65_fu_561_p2 = (tmp_22_fu_557_p2 & grp_fu_315_p2);

assign tmp_66_fu_571_p4 = {{a_load_1_to_int_fu_567_p1[30:23]}};

assign tmp_67_fu_581_p1 = a_load_1_to_int_fu_567_p1[22:0];

assign tmp_68_fu_597_p2 = (notrhs4_reg_759 | notlhs3_reg_754);

assign tmp_70_fu_601_p2 = (tmp_68_fu_597_p2 & grp_fu_315_p2);

assign tmp_71_fu_611_p4 = {{a_load_2_to_int_fu_607_p1[30:23]}};

assign tmp_72_fu_621_p1 = a_load_2_to_int_fu_607_p1[22:0];

assign tmp_73_fu_637_p2 = (notrhs6_reg_778 | notlhs5_reg_773);

assign tmp_75_fu_641_p2 = (tmp_73_fu_637_p2 & grp_fu_315_p2);

assign tmp_fu_523_p1 = tmp_neg_reg_705;

assign tmp_neg_fu_517_p2 = (tmp_to_int_fu_513_p1 ^ 32'd2147483648);

assign tmp_to_int_fu_513_p1 = reg_320;

endmodule //MadgwickAHRSupdateIM
