// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.3.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MadgwickAHRSupdateIM (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        g_address0,
        g_ce0,
        g_q0,
        g_address1,
        g_ce1,
        g_q1,
        a_address0,
        a_ce0,
        a_we0,
        a_d0,
        a_q0,
        beta,
        q_address0,
        q_ce0,
        q_we0,
        q_d0,
        q_q0,
        q_address1,
        q_ce1,
        q_we1,
        q_d1,
        q_q1
);

parameter    ap_ST_fsm_state1 = 155'd1;
parameter    ap_ST_fsm_state2 = 155'd2;
parameter    ap_ST_fsm_state3 = 155'd4;
parameter    ap_ST_fsm_state4 = 155'd8;
parameter    ap_ST_fsm_state5 = 155'd16;
parameter    ap_ST_fsm_state6 = 155'd32;
parameter    ap_ST_fsm_state7 = 155'd64;
parameter    ap_ST_fsm_state8 = 155'd128;
parameter    ap_ST_fsm_state9 = 155'd256;
parameter    ap_ST_fsm_state10 = 155'd512;
parameter    ap_ST_fsm_state11 = 155'd1024;
parameter    ap_ST_fsm_state12 = 155'd2048;
parameter    ap_ST_fsm_state13 = 155'd4096;
parameter    ap_ST_fsm_state14 = 155'd8192;
parameter    ap_ST_fsm_state15 = 155'd16384;
parameter    ap_ST_fsm_state16 = 155'd32768;
parameter    ap_ST_fsm_state17 = 155'd65536;
parameter    ap_ST_fsm_state18 = 155'd131072;
parameter    ap_ST_fsm_state19 = 155'd262144;
parameter    ap_ST_fsm_state20 = 155'd524288;
parameter    ap_ST_fsm_state21 = 155'd1048576;
parameter    ap_ST_fsm_state22 = 155'd2097152;
parameter    ap_ST_fsm_state23 = 155'd4194304;
parameter    ap_ST_fsm_state24 = 155'd8388608;
parameter    ap_ST_fsm_state25 = 155'd16777216;
parameter    ap_ST_fsm_state26 = 155'd33554432;
parameter    ap_ST_fsm_state27 = 155'd67108864;
parameter    ap_ST_fsm_state28 = 155'd134217728;
parameter    ap_ST_fsm_state29 = 155'd268435456;
parameter    ap_ST_fsm_state30 = 155'd536870912;
parameter    ap_ST_fsm_state31 = 155'd1073741824;
parameter    ap_ST_fsm_state32 = 155'd2147483648;
parameter    ap_ST_fsm_state33 = 155'd4294967296;
parameter    ap_ST_fsm_state34 = 155'd8589934592;
parameter    ap_ST_fsm_state35 = 155'd17179869184;
parameter    ap_ST_fsm_state36 = 155'd34359738368;
parameter    ap_ST_fsm_state37 = 155'd68719476736;
parameter    ap_ST_fsm_state38 = 155'd137438953472;
parameter    ap_ST_fsm_state39 = 155'd274877906944;
parameter    ap_ST_fsm_state40 = 155'd549755813888;
parameter    ap_ST_fsm_state41 = 155'd1099511627776;
parameter    ap_ST_fsm_state42 = 155'd2199023255552;
parameter    ap_ST_fsm_state43 = 155'd4398046511104;
parameter    ap_ST_fsm_state44 = 155'd8796093022208;
parameter    ap_ST_fsm_state45 = 155'd17592186044416;
parameter    ap_ST_fsm_state46 = 155'd35184372088832;
parameter    ap_ST_fsm_state47 = 155'd70368744177664;
parameter    ap_ST_fsm_state48 = 155'd140737488355328;
parameter    ap_ST_fsm_state49 = 155'd281474976710656;
parameter    ap_ST_fsm_state50 = 155'd562949953421312;
parameter    ap_ST_fsm_state51 = 155'd1125899906842624;
parameter    ap_ST_fsm_state52 = 155'd2251799813685248;
parameter    ap_ST_fsm_state53 = 155'd4503599627370496;
parameter    ap_ST_fsm_state54 = 155'd9007199254740992;
parameter    ap_ST_fsm_state55 = 155'd18014398509481984;
parameter    ap_ST_fsm_state56 = 155'd36028797018963968;
parameter    ap_ST_fsm_state57 = 155'd72057594037927936;
parameter    ap_ST_fsm_state58 = 155'd144115188075855872;
parameter    ap_ST_fsm_state59 = 155'd288230376151711744;
parameter    ap_ST_fsm_state60 = 155'd576460752303423488;
parameter    ap_ST_fsm_state61 = 155'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 155'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 155'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 155'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 155'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 155'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 155'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 155'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 155'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 155'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 155'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 155'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 155'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 155'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 155'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 155'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 155'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 155'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 155'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 155'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 155'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 155'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 155'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 155'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 155'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 155'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 155'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 155'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 155'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 155'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 155'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 155'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 155'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 155'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 155'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 155'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 155'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 155'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 155'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 155'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 155'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 155'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 155'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 155'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 155'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 155'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 155'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 155'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 155'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 155'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 155'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 155'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 155'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 155'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 155'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 155'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 155'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 155'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 155'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 155'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 155'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 155'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 155'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 155'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 155'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 155'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 155'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 155'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 155'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 155'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 155'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 155'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 155'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 155'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 155'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 155'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 155'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 155'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 155'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 155'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 155'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 155'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 155'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 155'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 155'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 155'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state147 = 155'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state148 = 155'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state149 = 155'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_state150 = 155'd713623846352979940529142984724747568191373312;
parameter    ap_ST_fsm_state151 = 155'd1427247692705959881058285969449495136382746624;
parameter    ap_ST_fsm_state152 = 155'd2854495385411919762116571938898990272765493248;
parameter    ap_ST_fsm_state153 = 155'd5708990770823839524233143877797980545530986496;
parameter    ap_ST_fsm_state154 = 155'd11417981541647679048466287755595961091061972992;
parameter    ap_ST_fsm_state155 = 155'd22835963083295358096932575511191922182123945984;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [1:0] g_address0;
output   g_ce0;
input  [31:0] g_q0;
output  [1:0] g_address1;
output   g_ce1;
input  [31:0] g_q1;
output  [1:0] a_address0;
output   a_ce0;
output   a_we0;
output  [31:0] a_d0;
input  [31:0] a_q0;
input  [31:0] beta;
output  [1:0] q_address0;
output   q_ce0;
output   q_we0;
output  [31:0] q_d0;
input  [31:0] q_q0;
output  [1:0] q_address1;
output   q_ce1;
output   q_we1;
output  [31:0] q_d1;
input  [31:0] q_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[1:0] g_address0;
reg g_ce0;
reg g_ce1;
reg[1:0] a_address0;
reg a_ce0;
reg a_we0;
reg[1:0] q_address0;
reg q_ce0;
reg q_we0;
reg[1:0] q_address1;
reg q_ce1;
reg q_we1;

(* fsm_encoding = "none" *) reg   [154:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_389;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state144;
reg   [31:0] reg_401;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state48;
reg   [31:0] reg_411;
wire   [31:0] grp_fu_322_p2;
reg   [31:0] reg_424;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state31;
wire   [31:0] grp_fu_326_p2;
reg   [31:0] reg_432;
wire   [31:0] grp_fu_330_p2;
reg   [31:0] reg_440;
wire   [31:0] grp_fu_334_p2;
reg   [31:0] reg_448;
wire   [31:0] grp_fu_338_p2;
reg   [31:0] reg_456;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state89;
wire    ap_CS_fsm_state94;
wire   [31:0] grp_fu_342_p2;
reg   [31:0] reg_466;
wire   [31:0] grp_fu_346_p2;
reg   [31:0] reg_476;
wire   [31:0] grp_fu_350_p2;
reg   [31:0] reg_483;
wire   [31:0] grp_fu_302_p2;
reg   [31:0] reg_489;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_state76;
wire    ap_CS_fsm_state85;
wire    ap_CS_fsm_state103;
wire    ap_CS_fsm_state112;
wire    ap_CS_fsm_state121;
wire    ap_CS_fsm_state137;
wire    ap_CS_fsm_state153;
wire   [31:0] grp_fu_306_p2;
reg   [31:0] reg_498;
wire   [31:0] grp_fu_310_p2;
reg   [31:0] reg_506;
wire   [31:0] grp_fu_314_p2;
reg   [31:0] reg_513;
reg   [31:0] reg_520;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state107;
reg   [31:0] reg_529;
wire    ap_CS_fsm_state128;
reg   [31:0] reg_540;
reg   [31:0] reg_549;
reg   [31:0] reg_558;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state84;
wire    ap_CS_fsm_state99;
reg   [31:0] reg_569;
reg   [31:0] reg_575;
reg   [31:0] g_load_reg_900;
wire   [31:0] tmp_neg_fu_587_p2;
reg   [31:0] tmp_neg_reg_917;
reg   [31:0] g_load_1_reg_922;
reg   [31:0] g_load_2_reg_929;
wire   [31:0] tmp_fu_593_p1;
wire    ap_CS_fsm_state4;
wire   [1:0] a_addr_reg_942;
wire   [0:0] notlhs_fu_615_p2;
reg   [0:0] notlhs_reg_947;
wire    ap_CS_fsm_state28;
wire   [0:0] notrhs_fu_621_p2;
reg   [0:0] notrhs_reg_952;
wire   [0:0] tmp_65_fu_631_p2;
reg   [0:0] tmp_65_reg_957;
wire   [0:0] notlhs1_fu_655_p2;
reg   [0:0] notlhs1_reg_966;
wire    ap_CS_fsm_state33;
wire   [0:0] notrhs1_fu_661_p2;
reg   [0:0] notrhs1_reg_971;
wire   [0:0] tmp_70_fu_671_p2;
reg   [0:0] tmp_70_reg_976;
wire    ap_CS_fsm_state36;
wire   [0:0] notlhs2_fu_695_p2;
reg   [0:0] notlhs2_reg_985;
wire    ap_CS_fsm_state38;
wire   [0:0] notrhs2_fu_701_p2;
reg   [0:0] notrhs2_reg_990;
wire   [0:0] tmp_75_fu_711_p2;
reg   [0:0] tmp_75_reg_995;
wire    ap_CS_fsm_state41;
reg   [31:0] q_load_6_reg_999;
reg   [31:0] p_4q1_reg_1009;
reg   [31:0] tmp_44_reg_1015;
reg   [31:0] p_4q2_reg_1020;
wire    ap_CS_fsm_state62;
wire   [1:0] a_addr_3_gep_fu_156_p3;
wire    ap_CS_fsm_state70;
reg   [31:0] a_load_4_reg_1031;
wire    ap_CS_fsm_state71;
wire   [31:0] grp_fu_366_p2;
reg   [31:0] tmp_57_reg_1039;
wire   [31:0] grp_fu_370_p2;
reg   [31:0] tmp_58_reg_1044;
wire   [31:0] grp_fu_374_p2;
reg   [31:0] tmp_60_reg_1049;
wire   [31:0] grp_fu_379_p2;
reg   [31:0] tmp_63_reg_1054;
wire   [1:0] a_addr_4_gep_fu_165_p3;
wire    ap_CS_fsm_state106;
reg   [31:0] s_2_1_reg_1064;
wire    ap_CS_fsm_state122;
wire    grp_normalise_1_fu_287_ap_done;
reg   [31:0] s_1_1_reg_1069;
reg   [31:0] s_0_1_reg_1074;
wire   [2:0] i_fu_739_p2;
reg   [2:0] i_reg_1087;
wire    ap_CS_fsm_state123;
wire   [1:0] tmp_79_fu_745_p1;
reg   [1:0] tmp_79_reg_1092;
wire   [0:0] exitcond_i_fu_733_p2;
wire   [31:0] tmp_76_fu_749_p6;
reg   [31:0] tmp_76_reg_1100;
wire   [31:0] tmp_77_fu_760_p6;
reg   [31:0] tmp_77_reg_1105;
wire   [31:0] qDot_3_4_fu_778_p3;
wire    ap_CS_fsm_state138;
wire   [31:0] qDot_3_7_fu_799_p3;
wire   [31:0] qDot_3_10_fu_828_p3;
wire   [31:0] qDot_3_13_fu_852_p3;
wire   [2:0] i_3_fu_866_p2;
reg   [2:0] i_3_reg_1133;
wire    ap_CS_fsm_state139;
wire   [31:0] tmp_78_fu_881_p6;
reg   [31:0] tmp_78_reg_1138;
wire   [0:0] exitcond_i1_fu_860_p2;
reg   [1:0] q_addr_reg_1143;
wire    grp_normalise_1_fu_287_ap_start;
wire    grp_normalise_1_fu_287_ap_idle;
wire    grp_normalise_1_fu_287_ap_ready;
wire   [31:0] grp_normalise_1_fu_287_ap_return_0;
wire   [31:0] grp_normalise_1_fu_287_ap_return_1;
wire   [31:0] grp_normalise_1_fu_287_ap_return_2;
wire    grp_normalise_fu_295_ap_start;
wire    grp_normalise_fu_295_ap_done;
wire    grp_normalise_fu_295_ap_idle;
wire    grp_normalise_fu_295_ap_ready;
wire   [1:0] grp_normalise_fu_295_in_r_address0;
wire    grp_normalise_fu_295_in_r_ce0;
wire    grp_normalise_fu_295_in_r_we0;
wire   [31:0] grp_normalise_fu_295_in_r_d0;
reg   [31:0] grp_normalise_fu_295_in_r_q0;
reg   [31:0] qDot_3_3_reg_181;
reg   [31:0] qDot_3_5_reg_191;
reg   [31:0] qDot_2_2_reg_201;
reg   [31:0] qDot_31_reg_211;
reg   [2:0] i_i_reg_221;
reg   [31:0] qDot_0_s_reg_232;
wire    ap_CS_fsm_state42;
reg   [31:0] qDot_1_2_reg_243;
reg   [31:0] qDot_2_2_2_reg_254;
reg   [31:0] qDot_3_2_reg_265;
reg   [2:0] i_i1_reg_276;
wire    ap_CS_fsm_state154;
reg    ap_reg_grp_normalise_1_fu_287_ap_start;
reg    ap_reg_grp_normalise_fu_295_ap_start;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state155;
wire   [63:0] tmp_i1_fu_872_p1;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state143;
reg   [31:0] grp_fu_302_p0;
reg   [31:0] grp_fu_302_p1;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state68;
wire    ap_CS_fsm_state77;
wire    ap_CS_fsm_state86;
wire    ap_CS_fsm_state95;
wire    ap_CS_fsm_state104;
wire    ap_CS_fsm_state113;
wire    ap_CS_fsm_state129;
wire    ap_CS_fsm_state145;
reg   [31:0] grp_fu_306_p0;
reg   [31:0] grp_fu_306_p1;
reg   [31:0] grp_fu_310_p0;
reg   [31:0] grp_fu_310_p1;
reg   [31:0] grp_fu_314_p0;
reg   [31:0] grp_fu_314_p1;
reg   [31:0] grp_fu_322_p0;
reg   [31:0] grp_fu_322_p1;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state72;
wire    ap_CS_fsm_state80;
wire    ap_CS_fsm_state90;
wire    ap_CS_fsm_state108;
wire    ap_CS_fsm_state124;
wire    ap_CS_fsm_state140;
reg   [31:0] grp_fu_326_p0;
reg   [31:0] grp_fu_326_p1;
reg   [31:0] grp_fu_330_p0;
reg   [31:0] grp_fu_330_p1;
reg   [31:0] grp_fu_334_p0;
reg   [31:0] grp_fu_334_p1;
reg   [31:0] grp_fu_338_p0;
reg   [31:0] grp_fu_338_p1;
reg   [31:0] grp_fu_342_p0;
reg   [31:0] grp_fu_342_p1;
reg   [31:0] grp_fu_346_p0;
reg   [31:0] grp_fu_346_p1;
reg   [31:0] grp_fu_350_p0;
reg   [31:0] grp_fu_350_p1;
wire   [31:0] tmp_to_int_fu_583_p1;
wire   [31:0] a_load_to_int_fu_597_p1;
wire   [7:0] tmp_20_fu_601_p4;
wire   [22:0] tmp_21_fu_611_p1;
wire   [0:0] tmp_22_fu_627_p2;
wire   [0:0] grp_fu_384_p2;
wire   [31:0] a_load_1_to_int_fu_637_p1;
wire   [7:0] tmp_66_fu_641_p4;
wire   [22:0] tmp_67_fu_651_p1;
wire   [0:0] tmp_68_fu_667_p2;
wire   [31:0] a_load_2_to_int_fu_677_p1;
wire   [7:0] tmp_71_fu_681_p4;
wire   [22:0] tmp_72_fu_691_p1;
wire   [0:0] tmp_73_fu_707_p2;
wire   [1:0] tmp_76_fu_749_p5;
wire   [0:0] sel_tmp8_fu_773_p2;
wire   [0:0] sel_tmp_fu_786_p2;
wire   [31:0] qDot_3_6_fu_791_p3;
wire   [0:0] sel_tmp2_fu_807_p2;
wire   [31:0] qDot_3_8_fu_812_p3;
wire   [31:0] qDot_3_9_fu_820_p3;
wire   [31:0] qDot_3_11_fu_836_p3;
wire   [31:0] qDot_3_12_fu_844_p3;
wire   [1:0] tmp_78_fu_881_p5;
reg   [1:0] grp_fu_302_opcode;
reg   [1:0] grp_fu_306_opcode;
reg   [1:0] grp_fu_310_opcode;
reg   [1:0] grp_fu_314_opcode;
reg    grp_fu_322_ce;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state73;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state75;
wire    ap_CS_fsm_state87;
wire    ap_CS_fsm_state88;
wire    ap_CS_fsm_state91;
wire    ap_CS_fsm_state92;
wire    ap_CS_fsm_state93;
wire    ap_CS_fsm_state109;
wire    ap_CS_fsm_state110;
wire    ap_CS_fsm_state111;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state69;
wire    ap_CS_fsm_state78;
wire    ap_CS_fsm_state79;
wire    ap_CS_fsm_state100;
wire    ap_CS_fsm_state101;
wire    ap_CS_fsm_state102;
wire    ap_CS_fsm_state105;
wire    ap_CS_fsm_state114;
wire    ap_CS_fsm_state115;
wire    ap_CS_fsm_state116;
wire    ap_CS_fsm_state117;
wire    ap_CS_fsm_state118;
wire    ap_CS_fsm_state119;
wire    ap_CS_fsm_state120;
wire    ap_CS_fsm_state130;
wire    ap_CS_fsm_state131;
wire    ap_CS_fsm_state132;
wire    ap_CS_fsm_state133;
wire    ap_CS_fsm_state134;
wire    ap_CS_fsm_state135;
wire    ap_CS_fsm_state136;
wire    ap_CS_fsm_state146;
wire    ap_CS_fsm_state147;
wire    ap_CS_fsm_state148;
wire    ap_CS_fsm_state149;
wire    ap_CS_fsm_state150;
wire    ap_CS_fsm_state151;
wire    ap_CS_fsm_state152;
reg    grp_fu_326_ce;
reg    grp_fu_330_ce;
reg    grp_fu_334_ce;
reg    grp_fu_338_ce;
reg   [154:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 155'd1;
#0 ap_reg_grp_normalise_1_fu_287_ap_start = 1'b0;
#0 ap_reg_grp_normalise_fu_295_ap_start = 1'b0;
end

normalise_1 grp_normalise_1_fu_287(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_normalise_1_fu_287_ap_start),
    .ap_done(grp_normalise_1_fu_287_ap_done),
    .ap_idle(grp_normalise_1_fu_287_ap_idle),
    .ap_ready(grp_normalise_1_fu_287_ap_ready),
    .in_0_read(reg_489),
    .in_1_read(reg_498),
    .in_2_read(reg_506),
    .in_3_read(reg_513),
    .ap_return_0(grp_normalise_1_fu_287_ap_return_0),
    .ap_return_1(grp_normalise_1_fu_287_ap_return_1),
    .ap_return_2(grp_normalise_1_fu_287_ap_return_2)
);

normalise grp_normalise_fu_295(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_normalise_fu_295_ap_start),
    .ap_done(grp_normalise_fu_295_ap_done),
    .ap_idle(grp_normalise_fu_295_ap_idle),
    .ap_ready(grp_normalise_fu_295_ap_ready),
    .in_r_address0(grp_normalise_fu_295_in_r_address0),
    .in_r_ce0(grp_normalise_fu_295_in_r_ce0),
    .in_r_we0(grp_normalise_fu_295_in_r_we0),
    .in_r_d0(grp_normalise_fu_295_in_r_d0),
    .in_r_q0(grp_normalise_fu_295_in_r_q0)
);

MadgwickAHRSupdatbkb #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatbkb_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_302_p0),
    .din1(grp_fu_302_p1),
    .opcode(grp_fu_302_opcode),
    .ce(1'b1),
    .dout(grp_fu_302_p2)
);

MadgwickAHRSupdatbkb #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatbkb_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_306_p0),
    .din1(grp_fu_306_p1),
    .opcode(grp_fu_306_opcode),
    .ce(1'b1),
    .dout(grp_fu_306_p2)
);

MadgwickAHRSupdatbkb #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatbkb_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_310_p0),
    .din1(grp_fu_310_p1),
    .opcode(grp_fu_310_opcode),
    .ce(1'b1),
    .dout(grp_fu_310_p2)
);

MadgwickAHRSupdatbkb #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatbkb_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_314_p0),
    .din1(grp_fu_314_p1),
    .opcode(grp_fu_314_opcode),
    .ce(1'b1),
    .dout(grp_fu_314_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_322_p0),
    .din1(grp_fu_322_p1),
    .ce(grp_fu_322_ce),
    .dout(grp_fu_322_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_326_p0),
    .din1(grp_fu_326_p1),
    .ce(grp_fu_326_ce),
    .dout(grp_fu_326_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_330_p0),
    .din1(grp_fu_330_p1),
    .ce(grp_fu_330_ce),
    .dout(grp_fu_330_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_334_p0),
    .din1(grp_fu_334_p1),
    .ce(grp_fu_334_ce),
    .dout(grp_fu_334_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_338_p0),
    .din1(grp_fu_338_p1),
    .ce(grp_fu_338_ce),
    .dout(grp_fu_338_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_342_p0),
    .din1(grp_fu_342_p1),
    .ce(1'b1),
    .dout(grp_fu_342_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_346_p0),
    .din1(grp_fu_346_p1),
    .ce(1'b1),
    .dout(grp_fu_346_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_350_p0),
    .din1(grp_fu_350_p1),
    .ce(1'b1),
    .dout(grp_fu_350_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_476),
    .din1(reg_411),
    .ce(1'b1),
    .dout(grp_fu_366_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_529),
    .din1(reg_520),
    .ce(1'b1),
    .dout(grp_fu_370_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_466),
    .din1(32'd1082130432),
    .ce(1'b1),
    .dout(grp_fu_374_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_540),
    .din1(a_load_4_reg_1031),
    .ce(1'b1),
    .dout(grp_fu_379_p2)
);

MadgwickAHRSupdatdEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
MadgwickAHRSupdatdEe_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_520),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd1),
    .dout(grp_fu_384_p2)
);

MadgwickAHRSupdateOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdateOg_U32(
    .din1(s_0_1_reg_1074),
    .din2(s_1_1_reg_1069),
    .din3(s_2_1_reg_1064),
    .din4(reg_513),
    .din5(tmp_76_fu_749_p5),
    .dout(tmp_76_fu_749_p6)
);

MadgwickAHRSupdateOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdateOg_U33(
    .din1(qDot_3_3_reg_181),
    .din2(qDot_3_5_reg_191),
    .din3(qDot_2_2_reg_201),
    .din4(qDot_31_reg_211),
    .din5(tmp_79_reg_1092),
    .dout(tmp_77_fu_760_p6)
);

MadgwickAHRSupdateOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdateOg_U34(
    .din1(qDot_0_s_reg_232),
    .din2(qDot_1_2_reg_243),
    .din3(qDot_2_2_2_reg_254),
    .din4(qDot_3_2_reg_265),
    .din5(tmp_78_fu_881_p5),
    .dout(tmp_78_fu_881_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_normalise_1_fu_287_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state121)) begin
            ap_reg_grp_normalise_1_fu_287_ap_start <= 1'b1;
        end else if ((1'b1 == grp_normalise_1_fu_287_ap_ready)) begin
            ap_reg_grp_normalise_1_fu_287_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_normalise_fu_295_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state50) | ((1'd1 == exitcond_i1_fu_860_p2) & (1'b1 == ap_CS_fsm_state139)))) begin
            ap_reg_grp_normalise_fu_295_ap_start <= 1'b1;
        end else if ((1'b1 == grp_normalise_fu_295_ap_ready)) begin
            ap_reg_grp_normalise_fu_295_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state154)) begin
        i_i1_reg_276 <= i_3_reg_1133;
    end else if (((1'b1 == ap_CS_fsm_state123) & ((1'd1 == exitcond_i_fu_733_p2) | ((1'd1 == tmp_75_reg_995) & (1'd1 == tmp_70_reg_976) & (tmp_65_reg_957 == 1'd1))))) begin
        i_i1_reg_276 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state138)) begin
        i_i_reg_221 <= i_reg_1087;
    end else if (((grp_normalise_1_fu_287_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state122))) begin
        i_i_reg_221 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state123) & (((tmp_75_reg_995 == 1'd0) & (1'd1 == exitcond_i_fu_733_p2)) | ((tmp_70_reg_976 == 1'd0) & (1'd1 == exitcond_i_fu_733_p2)) | ((1'd1 == exitcond_i_fu_733_p2) & (tmp_65_reg_957 == 1'd0))))) begin
        qDot_0_s_reg_232 <= qDot_3_3_reg_181;
    end else if (((1'd1 == tmp_75_reg_995) & (1'd1 == tmp_70_reg_976) & (tmp_65_reg_957 == 1'd1) & (1'b1 == ap_CS_fsm_state42))) begin
        qDot_0_s_reg_232 <= reg_424;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state123) & (((tmp_75_reg_995 == 1'd0) & (1'd1 == exitcond_i_fu_733_p2)) | ((tmp_70_reg_976 == 1'd0) & (1'd1 == exitcond_i_fu_733_p2)) | ((1'd1 == exitcond_i_fu_733_p2) & (tmp_65_reg_957 == 1'd0))))) begin
        qDot_1_2_reg_243 <= qDot_3_5_reg_191;
    end else if (((1'd1 == tmp_75_reg_995) & (1'd1 == tmp_70_reg_976) & (tmp_65_reg_957 == 1'd1) & (1'b1 == ap_CS_fsm_state42))) begin
        qDot_1_2_reg_243 <= reg_432;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state123) & (((tmp_75_reg_995 == 1'd0) & (1'd1 == exitcond_i_fu_733_p2)) | ((tmp_70_reg_976 == 1'd0) & (1'd1 == exitcond_i_fu_733_p2)) | ((1'd1 == exitcond_i_fu_733_p2) & (tmp_65_reg_957 == 1'd0))))) begin
        qDot_2_2_2_reg_254 <= qDot_2_2_reg_201;
    end else if (((1'd1 == tmp_75_reg_995) & (1'd1 == tmp_70_reg_976) & (tmp_65_reg_957 == 1'd1) & (1'b1 == ap_CS_fsm_state42))) begin
        qDot_2_2_2_reg_254 <= reg_440;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state138)) begin
        qDot_2_2_reg_201 <= qDot_3_10_fu_828_p3;
    end else if (((grp_normalise_1_fu_287_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state122))) begin
        qDot_2_2_reg_201 <= reg_440;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state138)) begin
        qDot_31_reg_211 <= qDot_3_13_fu_852_p3;
    end else if (((grp_normalise_1_fu_287_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state122))) begin
        qDot_31_reg_211 <= reg_448;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state123) & (((tmp_75_reg_995 == 1'd0) & (1'd1 == exitcond_i_fu_733_p2)) | ((tmp_70_reg_976 == 1'd0) & (1'd1 == exitcond_i_fu_733_p2)) | ((1'd1 == exitcond_i_fu_733_p2) & (tmp_65_reg_957 == 1'd0))))) begin
        qDot_3_2_reg_265 <= qDot_31_reg_211;
    end else if (((1'd1 == tmp_75_reg_995) & (1'd1 == tmp_70_reg_976) & (tmp_65_reg_957 == 1'd1) & (1'b1 == ap_CS_fsm_state42))) begin
        qDot_3_2_reg_265 <= reg_448;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state138)) begin
        qDot_3_3_reg_181 <= qDot_3_4_fu_778_p3;
    end else if (((grp_normalise_1_fu_287_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state122))) begin
        qDot_3_3_reg_181 <= reg_424;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state138)) begin
        qDot_3_5_reg_191 <= qDot_3_7_fu_799_p3;
    end else if (((grp_normalise_1_fu_287_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state122))) begin
        qDot_3_5_reg_191 <= reg_432;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        reg_389 <= q_q1;
    end else if (((1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state2))) begin
        reg_389 <= q_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        reg_401 <= q_q1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        reg_401 <= q_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        reg_411 <= q_q0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        reg_411 <= q_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        a_load_4_reg_1031 <= a_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        g_load_1_reg_922 <= g_q0;
        g_load_2_reg_929 <= g_q1;
        tmp_neg_reg_917 <= tmp_neg_fu_587_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        g_load_reg_900 <= g_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state139)) begin
        i_3_reg_1133 <= i_3_fu_866_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state123) & ((tmp_75_reg_995 == 1'd0) | (tmp_70_reg_976 == 1'd0) | (tmp_65_reg_957 == 1'd0)))) begin
        i_reg_1087 <= i_fu_739_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        notlhs1_reg_966 <= notlhs1_fu_655_p2;
        notrhs1_reg_971 <= notrhs1_fu_661_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        notlhs2_reg_985 <= notlhs2_fu_695_p2;
        notrhs2_reg_990 <= notrhs2_fu_701_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        notlhs_reg_947 <= notlhs_fu_615_p2;
        notrhs_reg_952 <= notrhs_fu_621_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        p_4q1_reg_1009 <= grp_fu_330_p2;
        q_load_6_reg_999 <= q_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        p_4q2_reg_1020 <= grp_fu_322_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_i1_fu_860_p2) & (1'b1 == ap_CS_fsm_state139))) begin
        q_addr_reg_1143 <= tmp_i1_fu_872_p1;
        tmp_78_reg_1138 <= tmp_78_fu_881_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state144))) begin
        reg_424 <= grp_fu_322_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state8))) begin
        reg_432 <= grp_fu_326_p2;
        reg_440 <= grp_fu_330_p2;
        reg_448 <= grp_fu_334_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state8))) begin
        reg_456 <= grp_fu_338_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state8))) begin
        reg_466 <= grp_fu_342_p2;
        reg_476 <= grp_fu_346_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state8))) begin
        reg_483 <= grp_fu_350_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state153) | (1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_489 <= grp_fu_302_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_498 <= grp_fu_306_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_506 <= grp_fu_310_p2;
        reg_513 <= grp_fu_314_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state53))) begin
        reg_520 <= a_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state48))) begin
        reg_529 <= grp_fu_322_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state53))) begin
        reg_540 <= grp_fu_326_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state53))) begin
        reg_549 <= grp_fu_334_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state67))) begin
        reg_558 <= grp_fu_322_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state67))) begin
        reg_569 <= grp_fu_326_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state89))) begin
        reg_575 <= grp_fu_330_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_normalise_1_fu_287_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state122))) begin
        s_0_1_reg_1074 <= grp_normalise_1_fu_287_ap_return_2;
        s_1_1_reg_1069 <= grp_normalise_1_fu_287_ap_return_0;
        s_2_1_reg_1064 <= grp_normalise_1_fu_287_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        tmp_44_reg_1015 <= grp_fu_334_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state94)) begin
        tmp_57_reg_1039 <= grp_fu_366_p2;
        tmp_58_reg_1044 <= grp_fu_370_p2;
        tmp_60_reg_1049 <= grp_fu_374_p2;
        tmp_63_reg_1054 <= grp_fu_379_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        tmp_65_reg_957 <= tmp_65_fu_631_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        tmp_70_reg_976 <= tmp_70_fu_671_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        tmp_75_reg_995 <= tmp_75_fu_711_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state123) & (((1'd0 == exitcond_i_fu_733_p2) & (tmp_75_reg_995 == 1'd0)) | ((1'd0 == exitcond_i_fu_733_p2) & (tmp_70_reg_976 == 1'd0)) | ((1'd0 == exitcond_i_fu_733_p2) & (tmp_65_reg_957 == 1'd0))))) begin
        tmp_76_reg_1100 <= tmp_76_fu_749_p6;
        tmp_79_reg_1092 <= tmp_79_fu_745_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state128)) begin
        tmp_77_reg_1105 <= tmp_77_fu_760_p6;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        a_address0 = a_addr_4_gep_fu_165_p3;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        a_address0 = a_addr_3_gep_fu_156_p3;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        a_address0 = a_addr_reg_942;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        a_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        a_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        a_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        a_address0 = grp_normalise_fu_295_in_r_address0;
    end else begin
        a_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state31))) begin
        a_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        a_ce0 = grp_normalise_fu_295_in_r_ce0;
    end else begin
        a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        a_we0 = grp_normalise_fu_295_in_r_we0;
    end else begin
        a_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((grp_normalise_fu_295_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state155)) | ((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_normalise_fu_295_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state155))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        g_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        g_address0 = 64'd1;
    end else begin
        g_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        g_ce0 = 1'b1;
    end else begin
        g_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        g_ce1 = 1'b1;
    end else begin
        g_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state129) | (1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_302_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state68))) begin
        grp_fu_302_opcode = 2'd0;
    end else begin
        grp_fu_302_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state145)) begin
        grp_fu_302_p0 = reg_389;
    end else if ((1'b1 == ap_CS_fsm_state129)) begin
        grp_fu_302_p0 = tmp_77_reg_1105;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_fu_302_p0 = reg_529;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        grp_fu_302_p0 = reg_558;
    end else if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_302_p0 = reg_489;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_302_p0 = reg_424;
    end else begin
        grp_fu_302_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        grp_fu_302_p1 = reg_549;
    end else if ((1'b1 == ap_CS_fsm_state104)) begin
        grp_fu_302_p1 = reg_575;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_fu_302_p1 = reg_540;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        grp_fu_302_p1 = p_4q1_reg_1009;
    end else if (((1'b1 == ap_CS_fsm_state129) | (1'b1 == ap_CS_fsm_state77))) begin
        grp_fu_302_p1 = reg_529;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        grp_fu_302_p1 = reg_558;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        grp_fu_302_p1 = reg_569;
    end else if (((1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_302_p1 = reg_424;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_302_p1 = reg_432;
    end else begin
        grp_fu_302_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_306_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_306_opcode = 2'd0;
    end else begin
        grp_fu_306_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_fu_306_p0 = reg_489;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        grp_fu_306_p0 = reg_575;
    end else if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_306_p0 = reg_498;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_306_p0 = reg_440;
    end else begin
        grp_fu_306_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        grp_fu_306_p1 = reg_529;
    end else if ((1'b1 == ap_CS_fsm_state104)) begin
        grp_fu_306_p1 = reg_466;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_fu_306_p1 = reg_456;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        grp_fu_306_p1 = p_4q2_reg_1020;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_fu_306_p1 = reg_540;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        grp_fu_306_p1 = reg_569;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        grp_fu_306_p1 = tmp_44_reg_1015;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_306_p1 = reg_432;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_306_p1 = reg_448;
    end else begin
        grp_fu_306_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_310_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_310_opcode = 2'd0;
    end else begin
        grp_fu_310_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_fu_310_p0 = reg_498;
    end else if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_310_p0 = reg_506;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_310_p0 = reg_456;
    end else begin
        grp_fu_310_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        grp_fu_310_p1 = reg_540;
    end else if ((1'b1 == ap_CS_fsm_state104)) begin
        grp_fu_310_p1 = reg_483;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_fu_310_p1 = reg_476;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_310_p1 = reg_440;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_310_p1 = reg_466;
    end else begin
        grp_fu_310_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_314_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_314_opcode = 2'd0;
    end else begin
        grp_fu_314_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_fu_314_p0 = tmp_57_reg_1039;
    end else if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_314_p0 = reg_513;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_314_p0 = reg_476;
    end else begin
        grp_fu_314_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        grp_fu_314_p1 = tmp_63_reg_1054;
    end else if ((1'b1 == ap_CS_fsm_state104)) begin
        grp_fu_314_p1 = reg_558;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_fu_314_p1 = tmp_58_reg_1044;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_314_p1 = reg_448;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_314_p1 = reg_483;
    end else begin
        grp_fu_314_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state129) | (1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state155) | (1'b1 == ap_CS_fsm_state154) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state139) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state123) | (1'b1 == ap_CS_fsm_state122) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state153) | (1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state151) | (1'b1 == ap_CS_fsm_state150) | (1'b1 == ap_CS_fsm_state149) | (1'b1 == ap_CS_fsm_state148) | (1'b1 == ap_CS_fsm_state147) | (1'b1 == ap_CS_fsm_state146) | (1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state120) | (1'b1 == ap_CS_fsm_state119) | (1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state10) | ((1'b0 == grp_normalise_fu_295_ap_done) & (1'b1 == ap_CS_fsm_state51)))) begin
        grp_fu_322_ce = 1'b0;
    end else begin
        grp_fu_322_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state140)) begin
        grp_fu_322_p0 = tmp_78_reg_1138;
    end else if ((1'b1 == ap_CS_fsm_state124)) begin
        grp_fu_322_p0 = tmp_76_reg_1100;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_fu_322_p0 = tmp_60_reg_1049;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_322_p0 = reg_575;
    end else if (((1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state85))) begin
        grp_fu_322_p0 = reg_401;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        grp_fu_322_p0 = reg_529;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        grp_fu_322_p0 = reg_456;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_fu_322_p0 = q_load_6_reg_999;
    end else if (((1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state54))) begin
        grp_fu_322_p0 = p_4q1_reg_1009;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_322_p0 = reg_489;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_322_p0 = reg_389;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_322_p0 = g_load_reg_900;
    end else begin
        grp_fu_322_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state140)) begin
        grp_fu_322_p1 = 32'd989855744;
    end else if ((1'b1 == ap_CS_fsm_state124)) begin
        grp_fu_322_p1 = beta;
    end else if ((1'b1 == ap_CS_fsm_state108)) begin
        grp_fu_322_p1 = reg_520;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_fu_322_p1 = reg_411;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_322_p1 = reg_466;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        grp_fu_322_p1 = a_load_4_reg_1031;
    end else if (((1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state63))) begin
        grp_fu_322_p1 = reg_401;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_fu_322_p1 = 32'd1082130432;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_fu_322_p1 = reg_549;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state85))) begin
        grp_fu_322_p1 = 32'd1073741824;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_fu_322_p1 = reg_389;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_322_p1 = 32'd1056964608;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_322_p1 = g_load_2_reg_929;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_322_p1 = tmp_fu_593_p1;
    end else begin
        grp_fu_322_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | ((grp_normalise_fu_295_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state51)))) begin
        grp_fu_326_ce = 1'b1;
    end else begin
        grp_fu_326_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_326_p0 = q_load_6_reg_999;
    end else if (((1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state63))) begin
        grp_fu_326_p0 = p_4q2_reg_1020;
    end else if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state54))) begin
        grp_fu_326_p0 = reg_540;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_326_p0 = reg_411;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_326_p0 = reg_498;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_326_p0 = reg_389;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_326_p0 = reg_401;
    end else begin
        grp_fu_326_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        grp_fu_326_p1 = a_load_4_reg_1031;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        grp_fu_326_p1 = reg_549;
    end else if (((1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state54))) begin
        grp_fu_326_p1 = reg_520;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state85))) begin
        grp_fu_326_p1 = 32'd1073741824;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_326_p1 = 32'd1056964608;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state4))) begin
        grp_fu_326_p1 = g_load_1_reg_922;
    end else begin
        grp_fu_326_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | ((grp_normalise_fu_295_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state51)))) begin
        grp_fu_330_ce = 1'b1;
    end else begin
        grp_fu_330_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_330_p0 = reg_575;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_fu_330_p0 = reg_456;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_330_p0 = reg_401;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_330_p0 = reg_506;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state85))) begin
        grp_fu_330_p0 = reg_389;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_330_p0 = reg_411;
    end else begin
        grp_fu_330_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_330_p1 = reg_558;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_fu_330_p1 = q_load_6_reg_999;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state85))) begin
        grp_fu_330_p1 = 32'd1082130432;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_330_p1 = 32'd1056964608;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state4))) begin
        grp_fu_330_p1 = g_load_reg_900;
    end else begin
        grp_fu_330_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | ((grp_normalise_fu_295_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state51)))) begin
        grp_fu_334_ce = 1'b1;
    end else begin
        grp_fu_334_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state54))) begin
        grp_fu_334_p0 = reg_529;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_334_p0 = reg_411;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_334_p0 = reg_513;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state85))) begin
        grp_fu_334_p0 = reg_401;
    end else begin
        grp_fu_334_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_334_p1 = a_load_4_reg_1031;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_334_p1 = 32'd1090519040;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_fu_334_p1 = reg_520;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_334_p1 = reg_411;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_334_p1 = 32'd1056964608;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_334_p1 = g_load_reg_900;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_334_p1 = g_load_2_reg_929;
    end else begin
        grp_fu_334_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | ((grp_normalise_fu_295_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state51)))) begin
        grp_fu_338_ce = 1'b1;
    end else begin
        grp_fu_338_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_338_p0 = reg_549;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_338_p0 = q_load_6_reg_999;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_338_p0 = reg_529;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_338_p0 = reg_411;
    end else begin
        grp_fu_338_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_338_p1 = reg_558;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_338_p1 = 32'd1090519040;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_338_p1 = 32'd1082130432;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_338_p1 = g_load_1_reg_922;
    end else begin
        grp_fu_338_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_342_p0 = reg_549;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_342_p0 = q_load_6_reg_999;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_342_p0 = reg_389;
    end else begin
        grp_fu_342_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_342_p1 = reg_466;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_342_p1 = q_load_6_reg_999;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_342_p1 = g_load_2_reg_929;
    end else begin
        grp_fu_342_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_346_p0 = reg_456;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_346_p0 = reg_558;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_346_p0 = reg_411;
    end else begin
        grp_fu_346_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_346_p1 = reg_558;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_346_p1 = 32'd1082130432;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_346_p1 = g_load_2_reg_929;
    end else begin
        grp_fu_346_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_350_p0 = reg_456;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_350_p0 = reg_389;
    end else begin
        grp_fu_350_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_350_p1 = reg_466;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_350_p1 = g_load_1_reg_922;
    end else begin
        grp_fu_350_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        grp_normalise_fu_295_in_r_q0 = q_q0;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_normalise_fu_295_in_r_q0 = a_q0;
    end else begin
        grp_normalise_fu_295_in_r_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state143)) begin
        q_address0 = q_addr_reg_1143;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        q_address0 = 2'd3;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        q_address0 = 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        q_address0 = 2'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        q_address0 = 2'd1;
    end else if ((1'b1 == ap_CS_fsm_state155)) begin
        q_address0 = grp_normalise_fu_295_in_r_address0;
    end else begin
        q_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state154)) begin
        q_address1 = q_addr_reg_1143;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        q_address1 = 2'd2;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        q_address1 = 2'd1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        q_address1 = 2'd3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        q_address1 = 2'd0;
    end else begin
        q_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state143) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        q_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state155)) begin
        q_ce0 = grp_normalise_fu_295_in_r_ce0;
    end else begin
        q_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state154) | (1'b1 == ap_CS_fsm_state2))) begin
        q_ce1 = 1'b1;
    end else begin
        q_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        q_we0 = grp_normalise_fu_295_in_r_we0;
    end else begin
        q_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state154)) begin
        q_we1 = 1'b1;
    end else begin
        q_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            if (((tmp_65_fu_631_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            if (((tmp_70_fu_671_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            if (((1'd1 == tmp_75_reg_995) & (1'd1 == tmp_70_reg_976) & (tmp_65_reg_957 == 1'd1) & (1'b1 == ap_CS_fsm_state42))) begin
                ap_NS_fsm = ap_ST_fsm_state123;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            if (((grp_normalise_fu_295_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state51))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            if (((grp_normalise_1_fu_287_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state122))) begin
                ap_NS_fsm = ap_ST_fsm_state123;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state122;
            end
        end
        ap_ST_fsm_state123 : begin
            if (((1'b1 == ap_CS_fsm_state123) & ((1'd1 == exitcond_i_fu_733_p2) | ((1'd1 == tmp_75_reg_995) & (1'd1 == tmp_70_reg_976) & (tmp_65_reg_957 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state139;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state124;
            end
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state139 : begin
            if (((1'd1 == exitcond_i1_fu_860_p2) & (1'b1 == ap_CS_fsm_state139))) begin
                ap_NS_fsm = ap_ST_fsm_state155;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state140;
            end
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            ap_NS_fsm = ap_ST_fsm_state151;
        end
        ap_ST_fsm_state151 : begin
            ap_NS_fsm = ap_ST_fsm_state152;
        end
        ap_ST_fsm_state152 : begin
            ap_NS_fsm = ap_ST_fsm_state153;
        end
        ap_ST_fsm_state153 : begin
            ap_NS_fsm = ap_ST_fsm_state154;
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state155 : begin
            if (((grp_normalise_fu_295_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state155))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state155;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_addr_3_gep_fu_156_p3 = 64'd2;

assign a_addr_4_gep_fu_165_p3 = 64'd3;

assign a_addr_reg_942 = 64'd1;

assign a_d0 = grp_normalise_fu_295_in_r_d0;

assign a_load_1_to_int_fu_637_p1 = reg_520;

assign a_load_2_to_int_fu_677_p1 = reg_520;

assign a_load_to_int_fu_597_p1 = reg_520;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state115 = ap_CS_fsm[32'd114];

assign ap_CS_fsm_state116 = ap_CS_fsm[32'd115];

assign ap_CS_fsm_state117 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state118 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state119 = ap_CS_fsm[32'd118];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state120 = ap_CS_fsm[32'd119];

assign ap_CS_fsm_state121 = ap_CS_fsm[32'd120];

assign ap_CS_fsm_state122 = ap_CS_fsm[32'd121];

assign ap_CS_fsm_state123 = ap_CS_fsm[32'd122];

assign ap_CS_fsm_state124 = ap_CS_fsm[32'd123];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd127];

assign ap_CS_fsm_state129 = ap_CS_fsm[32'd128];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state130 = ap_CS_fsm[32'd129];

assign ap_CS_fsm_state131 = ap_CS_fsm[32'd130];

assign ap_CS_fsm_state132 = ap_CS_fsm[32'd131];

assign ap_CS_fsm_state133 = ap_CS_fsm[32'd132];

assign ap_CS_fsm_state134 = ap_CS_fsm[32'd133];

assign ap_CS_fsm_state135 = ap_CS_fsm[32'd134];

assign ap_CS_fsm_state136 = ap_CS_fsm[32'd135];

assign ap_CS_fsm_state137 = ap_CS_fsm[32'd136];

assign ap_CS_fsm_state138 = ap_CS_fsm[32'd137];

assign ap_CS_fsm_state139 = ap_CS_fsm[32'd138];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state140 = ap_CS_fsm[32'd139];

assign ap_CS_fsm_state143 = ap_CS_fsm[32'd142];

assign ap_CS_fsm_state144 = ap_CS_fsm[32'd143];

assign ap_CS_fsm_state145 = ap_CS_fsm[32'd144];

assign ap_CS_fsm_state146 = ap_CS_fsm[32'd145];

assign ap_CS_fsm_state147 = ap_CS_fsm[32'd146];

assign ap_CS_fsm_state148 = ap_CS_fsm[32'd147];

assign ap_CS_fsm_state149 = ap_CS_fsm[32'd148];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state150 = ap_CS_fsm[32'd149];

assign ap_CS_fsm_state151 = ap_CS_fsm[32'd150];

assign ap_CS_fsm_state152 = ap_CS_fsm[32'd151];

assign ap_CS_fsm_state153 = ap_CS_fsm[32'd152];

assign ap_CS_fsm_state154 = ap_CS_fsm[32'd153];

assign ap_CS_fsm_state155 = ap_CS_fsm[32'd154];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd98];

assign exitcond_i1_fu_860_p2 = ((i_i1_reg_276 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond_i_fu_733_p2 = ((i_i_reg_221 == 3'd4) ? 1'b1 : 1'b0);

assign g_address1 = 64'd3;

assign grp_normalise_1_fu_287_ap_start = ap_reg_grp_normalise_1_fu_287_ap_start;

assign grp_normalise_fu_295_ap_start = ap_reg_grp_normalise_fu_295_ap_start;

assign i_3_fu_866_p2 = (i_i1_reg_276 + 3'd1);

assign i_fu_739_p2 = (i_i_reg_221 + 3'd1);

assign notlhs1_fu_655_p2 = ((tmp_66_fu_641_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs2_fu_695_p2 = ((tmp_71_fu_681_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs_fu_615_p2 = ((tmp_20_fu_601_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notrhs1_fu_661_p2 = ((tmp_67_fu_651_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs2_fu_701_p2 = ((tmp_72_fu_691_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs_fu_621_p2 = ((tmp_21_fu_611_p1 == 23'd0) ? 1'b1 : 1'b0);

assign qDot_3_10_fu_828_p3 = ((sel_tmp8_fu_773_p2[0:0] === 1'b1) ? qDot_2_2_reg_201 : qDot_3_9_fu_820_p3);

assign qDot_3_11_fu_836_p3 = ((sel_tmp2_fu_807_p2[0:0] === 1'b1) ? qDot_31_reg_211 : reg_489);

assign qDot_3_12_fu_844_p3 = ((sel_tmp_fu_786_p2[0:0] === 1'b1) ? qDot_31_reg_211 : qDot_3_11_fu_836_p3);

assign qDot_3_13_fu_852_p3 = ((sel_tmp8_fu_773_p2[0:0] === 1'b1) ? qDot_31_reg_211 : qDot_3_12_fu_844_p3);

assign qDot_3_4_fu_778_p3 = ((sel_tmp8_fu_773_p2[0:0] === 1'b1) ? reg_489 : qDot_3_3_reg_181);

assign qDot_3_6_fu_791_p3 = ((sel_tmp_fu_786_p2[0:0] === 1'b1) ? reg_489 : qDot_3_5_reg_191);

assign qDot_3_7_fu_799_p3 = ((sel_tmp8_fu_773_p2[0:0] === 1'b1) ? qDot_3_5_reg_191 : qDot_3_6_fu_791_p3);

assign qDot_3_8_fu_812_p3 = ((sel_tmp2_fu_807_p2[0:0] === 1'b1) ? reg_489 : qDot_2_2_reg_201);

assign qDot_3_9_fu_820_p3 = ((sel_tmp_fu_786_p2[0:0] === 1'b1) ? qDot_2_2_reg_201 : qDot_3_8_fu_812_p3);

assign q_d0 = grp_normalise_fu_295_in_r_d0;

assign q_d1 = reg_489;

assign sel_tmp2_fu_807_p2 = ((tmp_79_reg_1092 == 2'd2) ? 1'b1 : 1'b0);

assign sel_tmp8_fu_773_p2 = ((tmp_79_reg_1092 == 2'd0) ? 1'b1 : 1'b0);

assign sel_tmp_fu_786_p2 = ((tmp_79_reg_1092 == 2'd1) ? 1'b1 : 1'b0);

assign tmp_20_fu_601_p4 = {{a_load_to_int_fu_597_p1[30:23]}};

assign tmp_21_fu_611_p1 = a_load_to_int_fu_597_p1[22:0];

assign tmp_22_fu_627_p2 = (notrhs_reg_952 | notlhs_reg_947);

assign tmp_65_fu_631_p2 = (tmp_22_fu_627_p2 & grp_fu_384_p2);

assign tmp_66_fu_641_p4 = {{a_load_1_to_int_fu_637_p1[30:23]}};

assign tmp_67_fu_651_p1 = a_load_1_to_int_fu_637_p1[22:0];

assign tmp_68_fu_667_p2 = (notrhs1_reg_971 | notlhs1_reg_966);

assign tmp_70_fu_671_p2 = (tmp_68_fu_667_p2 & grp_fu_384_p2);

assign tmp_71_fu_681_p4 = {{a_load_2_to_int_fu_677_p1[30:23]}};

assign tmp_72_fu_691_p1 = a_load_2_to_int_fu_677_p1[22:0];

assign tmp_73_fu_707_p2 = (notrhs2_reg_990 | notlhs2_reg_985);

assign tmp_75_fu_711_p2 = (tmp_73_fu_707_p2 & grp_fu_384_p2);

assign tmp_76_fu_749_p5 = i_i_reg_221[1:0];

assign tmp_78_fu_881_p5 = i_i1_reg_276[1:0];

assign tmp_79_fu_745_p1 = i_i_reg_221[1:0];

assign tmp_fu_593_p1 = tmp_neg_reg_917;

assign tmp_i1_fu_872_p1 = i_i1_reg_276;

assign tmp_neg_fu_587_p2 = (tmp_to_int_fu_583_p1 ^ 32'd2147483648);

assign tmp_to_int_fu_583_p1 = reg_389;

endmodule //MadgwickAHRSupdateIM
