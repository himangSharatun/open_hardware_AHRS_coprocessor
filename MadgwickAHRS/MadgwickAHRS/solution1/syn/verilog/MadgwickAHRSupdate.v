// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.3.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="MadgwickAHRSupdate,hls_ip_2017_3_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.580600,HLS_SYN_LAT=479,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=108,HLS_SYN_FF=16227,HLS_SYN_LUT=26756}" *)

module MadgwickAHRSupdate (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        g_address0,
        g_ce0,
        g_we0,
        g_d0,
        g_q0,
        g_address1,
        g_ce1,
        g_q1,
        a_address0,
        a_ce0,
        a_we0,
        a_d0,
        a_q0,
        a_address1,
        a_ce1,
        a_q1,
        m_address0,
        m_ce0,
        m_we0,
        m_d0,
        m_q0,
        m_address1,
        m_ce1,
        m_q1
);

parameter    ap_ST_fsm_state1 = 268'd1;
parameter    ap_ST_fsm_state2 = 268'd2;
parameter    ap_ST_fsm_state3 = 268'd4;
parameter    ap_ST_fsm_state4 = 268'd8;
parameter    ap_ST_fsm_state5 = 268'd16;
parameter    ap_ST_fsm_state6 = 268'd32;
parameter    ap_ST_fsm_state7 = 268'd64;
parameter    ap_ST_fsm_state8 = 268'd128;
parameter    ap_ST_fsm_state9 = 268'd256;
parameter    ap_ST_fsm_state10 = 268'd512;
parameter    ap_ST_fsm_state11 = 268'd1024;
parameter    ap_ST_fsm_state12 = 268'd2048;
parameter    ap_ST_fsm_state13 = 268'd4096;
parameter    ap_ST_fsm_state14 = 268'd8192;
parameter    ap_ST_fsm_state15 = 268'd16384;
parameter    ap_ST_fsm_state16 = 268'd32768;
parameter    ap_ST_fsm_state17 = 268'd65536;
parameter    ap_ST_fsm_state18 = 268'd131072;
parameter    ap_ST_fsm_state19 = 268'd262144;
parameter    ap_ST_fsm_state20 = 268'd524288;
parameter    ap_ST_fsm_state21 = 268'd1048576;
parameter    ap_ST_fsm_state22 = 268'd2097152;
parameter    ap_ST_fsm_state23 = 268'd4194304;
parameter    ap_ST_fsm_state24 = 268'd8388608;
parameter    ap_ST_fsm_state25 = 268'd16777216;
parameter    ap_ST_fsm_state26 = 268'd33554432;
parameter    ap_ST_fsm_state27 = 268'd67108864;
parameter    ap_ST_fsm_state28 = 268'd134217728;
parameter    ap_ST_fsm_state29 = 268'd268435456;
parameter    ap_ST_fsm_state30 = 268'd536870912;
parameter    ap_ST_fsm_state31 = 268'd1073741824;
parameter    ap_ST_fsm_state32 = 268'd2147483648;
parameter    ap_ST_fsm_state33 = 268'd4294967296;
parameter    ap_ST_fsm_state34 = 268'd8589934592;
parameter    ap_ST_fsm_state35 = 268'd17179869184;
parameter    ap_ST_fsm_state36 = 268'd34359738368;
parameter    ap_ST_fsm_state37 = 268'd68719476736;
parameter    ap_ST_fsm_state38 = 268'd137438953472;
parameter    ap_ST_fsm_state39 = 268'd274877906944;
parameter    ap_ST_fsm_state40 = 268'd549755813888;
parameter    ap_ST_fsm_state41 = 268'd1099511627776;
parameter    ap_ST_fsm_state42 = 268'd2199023255552;
parameter    ap_ST_fsm_state43 = 268'd4398046511104;
parameter    ap_ST_fsm_state44 = 268'd8796093022208;
parameter    ap_ST_fsm_state45 = 268'd17592186044416;
parameter    ap_ST_fsm_state46 = 268'd35184372088832;
parameter    ap_ST_fsm_state47 = 268'd70368744177664;
parameter    ap_ST_fsm_state48 = 268'd140737488355328;
parameter    ap_ST_fsm_state49 = 268'd281474976710656;
parameter    ap_ST_fsm_state50 = 268'd562949953421312;
parameter    ap_ST_fsm_state51 = 268'd1125899906842624;
parameter    ap_ST_fsm_state52 = 268'd2251799813685248;
parameter    ap_ST_fsm_state53 = 268'd4503599627370496;
parameter    ap_ST_fsm_state54 = 268'd9007199254740992;
parameter    ap_ST_fsm_state55 = 268'd18014398509481984;
parameter    ap_ST_fsm_state56 = 268'd36028797018963968;
parameter    ap_ST_fsm_state57 = 268'd72057594037927936;
parameter    ap_ST_fsm_state58 = 268'd144115188075855872;
parameter    ap_ST_fsm_state59 = 268'd288230376151711744;
parameter    ap_ST_fsm_state60 = 268'd576460752303423488;
parameter    ap_ST_fsm_state61 = 268'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 268'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 268'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 268'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 268'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 268'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 268'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 268'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 268'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 268'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 268'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 268'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 268'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 268'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 268'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 268'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 268'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 268'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 268'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 268'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 268'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 268'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 268'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 268'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 268'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 268'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 268'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 268'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 268'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 268'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 268'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 268'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 268'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 268'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 268'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 268'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 268'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 268'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 268'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 268'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 268'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 268'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 268'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 268'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 268'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 268'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 268'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 268'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 268'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 268'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 268'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 268'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 268'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 268'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 268'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 268'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 268'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 268'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 268'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 268'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 268'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 268'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 268'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 268'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 268'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 268'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 268'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 268'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 268'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 268'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 268'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 268'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 268'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 268'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 268'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 268'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 268'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 268'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 268'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 268'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 268'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 268'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 268'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 268'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 268'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 268'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state147 = 268'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state148 = 268'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state149 = 268'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_state150 = 268'd713623846352979940529142984724747568191373312;
parameter    ap_ST_fsm_state151 = 268'd1427247692705959881058285969449495136382746624;
parameter    ap_ST_fsm_state152 = 268'd2854495385411919762116571938898990272765493248;
parameter    ap_ST_fsm_state153 = 268'd5708990770823839524233143877797980545530986496;
parameter    ap_ST_fsm_state154 = 268'd11417981541647679048466287755595961091061972992;
parameter    ap_ST_fsm_state155 = 268'd22835963083295358096932575511191922182123945984;
parameter    ap_ST_fsm_state156 = 268'd45671926166590716193865151022383844364247891968;
parameter    ap_ST_fsm_state157 = 268'd91343852333181432387730302044767688728495783936;
parameter    ap_ST_fsm_state158 = 268'd182687704666362864775460604089535377456991567872;
parameter    ap_ST_fsm_state159 = 268'd365375409332725729550921208179070754913983135744;
parameter    ap_ST_fsm_state160 = 268'd730750818665451459101842416358141509827966271488;
parameter    ap_ST_fsm_state161 = 268'd1461501637330902918203684832716283019655932542976;
parameter    ap_ST_fsm_state162 = 268'd2923003274661805836407369665432566039311865085952;
parameter    ap_ST_fsm_state163 = 268'd5846006549323611672814739330865132078623730171904;
parameter    ap_ST_fsm_state164 = 268'd11692013098647223345629478661730264157247460343808;
parameter    ap_ST_fsm_state165 = 268'd23384026197294446691258957323460528314494920687616;
parameter    ap_ST_fsm_state166 = 268'd46768052394588893382517914646921056628989841375232;
parameter    ap_ST_fsm_state167 = 268'd93536104789177786765035829293842113257979682750464;
parameter    ap_ST_fsm_state168 = 268'd187072209578355573530071658587684226515959365500928;
parameter    ap_ST_fsm_state169 = 268'd374144419156711147060143317175368453031918731001856;
parameter    ap_ST_fsm_state170 = 268'd748288838313422294120286634350736906063837462003712;
parameter    ap_ST_fsm_state171 = 268'd1496577676626844588240573268701473812127674924007424;
parameter    ap_ST_fsm_state172 = 268'd2993155353253689176481146537402947624255349848014848;
parameter    ap_ST_fsm_state173 = 268'd5986310706507378352962293074805895248510699696029696;
parameter    ap_ST_fsm_state174 = 268'd11972621413014756705924586149611790497021399392059392;
parameter    ap_ST_fsm_state175 = 268'd23945242826029513411849172299223580994042798784118784;
parameter    ap_ST_fsm_state176 = 268'd47890485652059026823698344598447161988085597568237568;
parameter    ap_ST_fsm_state177 = 268'd95780971304118053647396689196894323976171195136475136;
parameter    ap_ST_fsm_state178 = 268'd191561942608236107294793378393788647952342390272950272;
parameter    ap_ST_fsm_state179 = 268'd383123885216472214589586756787577295904684780545900544;
parameter    ap_ST_fsm_state180 = 268'd766247770432944429179173513575154591809369561091801088;
parameter    ap_ST_fsm_state181 = 268'd1532495540865888858358347027150309183618739122183602176;
parameter    ap_ST_fsm_state182 = 268'd3064991081731777716716694054300618367237478244367204352;
parameter    ap_ST_fsm_state183 = 268'd6129982163463555433433388108601236734474956488734408704;
parameter    ap_ST_fsm_state184 = 268'd12259964326927110866866776217202473468949912977468817408;
parameter    ap_ST_fsm_state185 = 268'd24519928653854221733733552434404946937899825954937634816;
parameter    ap_ST_fsm_state186 = 268'd49039857307708443467467104868809893875799651909875269632;
parameter    ap_ST_fsm_state187 = 268'd98079714615416886934934209737619787751599303819750539264;
parameter    ap_ST_fsm_state188 = 268'd196159429230833773869868419475239575503198607639501078528;
parameter    ap_ST_fsm_state189 = 268'd392318858461667547739736838950479151006397215279002157056;
parameter    ap_ST_fsm_state190 = 268'd784637716923335095479473677900958302012794430558004314112;
parameter    ap_ST_fsm_state191 = 268'd1569275433846670190958947355801916604025588861116008628224;
parameter    ap_ST_fsm_state192 = 268'd3138550867693340381917894711603833208051177722232017256448;
parameter    ap_ST_fsm_state193 = 268'd6277101735386680763835789423207666416102355444464034512896;
parameter    ap_ST_fsm_state194 = 268'd12554203470773361527671578846415332832204710888928069025792;
parameter    ap_ST_fsm_state195 = 268'd25108406941546723055343157692830665664409421777856138051584;
parameter    ap_ST_fsm_state196 = 268'd50216813883093446110686315385661331328818843555712276103168;
parameter    ap_ST_fsm_state197 = 268'd100433627766186892221372630771322662657637687111424552206336;
parameter    ap_ST_fsm_state198 = 268'd200867255532373784442745261542645325315275374222849104412672;
parameter    ap_ST_fsm_state199 = 268'd401734511064747568885490523085290650630550748445698208825344;
parameter    ap_ST_fsm_state200 = 268'd803469022129495137770981046170581301261101496891396417650688;
parameter    ap_ST_fsm_state201 = 268'd1606938044258990275541962092341162602522202993782792835301376;
parameter    ap_ST_fsm_state202 = 268'd3213876088517980551083924184682325205044405987565585670602752;
parameter    ap_ST_fsm_state203 = 268'd6427752177035961102167848369364650410088811975131171341205504;
parameter    ap_ST_fsm_state204 = 268'd12855504354071922204335696738729300820177623950262342682411008;
parameter    ap_ST_fsm_state205 = 268'd25711008708143844408671393477458601640355247900524685364822016;
parameter    ap_ST_fsm_state206 = 268'd51422017416287688817342786954917203280710495801049370729644032;
parameter    ap_ST_fsm_state207 = 268'd102844034832575377634685573909834406561420991602098741459288064;
parameter    ap_ST_fsm_state208 = 268'd205688069665150755269371147819668813122841983204197482918576128;
parameter    ap_ST_fsm_state209 = 268'd411376139330301510538742295639337626245683966408394965837152256;
parameter    ap_ST_fsm_state210 = 268'd822752278660603021077484591278675252491367932816789931674304512;
parameter    ap_ST_fsm_state211 = 268'd1645504557321206042154969182557350504982735865633579863348609024;
parameter    ap_ST_fsm_state212 = 268'd3291009114642412084309938365114701009965471731267159726697218048;
parameter    ap_ST_fsm_state213 = 268'd6582018229284824168619876730229402019930943462534319453394436096;
parameter    ap_ST_fsm_state214 = 268'd13164036458569648337239753460458804039861886925068638906788872192;
parameter    ap_ST_fsm_state215 = 268'd26328072917139296674479506920917608079723773850137277813577744384;
parameter    ap_ST_fsm_state216 = 268'd52656145834278593348959013841835216159447547700274555627155488768;
parameter    ap_ST_fsm_state217 = 268'd105312291668557186697918027683670432318895095400549111254310977536;
parameter    ap_ST_fsm_state218 = 268'd210624583337114373395836055367340864637790190801098222508621955072;
parameter    ap_ST_fsm_state219 = 268'd421249166674228746791672110734681729275580381602196445017243910144;
parameter    ap_ST_fsm_state220 = 268'd842498333348457493583344221469363458551160763204392890034487820288;
parameter    ap_ST_fsm_state221 = 268'd1684996666696914987166688442938726917102321526408785780068975640576;
parameter    ap_ST_fsm_state222 = 268'd3369993333393829974333376885877453834204643052817571560137951281152;
parameter    ap_ST_fsm_state223 = 268'd6739986666787659948666753771754907668409286105635143120275902562304;
parameter    ap_ST_fsm_state224 = 268'd13479973333575319897333507543509815336818572211270286240551805124608;
parameter    ap_ST_fsm_state225 = 268'd26959946667150639794667015087019630673637144422540572481103610249216;
parameter    ap_ST_fsm_state226 = 268'd53919893334301279589334030174039261347274288845081144962207220498432;
parameter    ap_ST_fsm_state227 = 268'd107839786668602559178668060348078522694548577690162289924414440996864;
parameter    ap_ST_fsm_state228 = 268'd215679573337205118357336120696157045389097155380324579848828881993728;
parameter    ap_ST_fsm_state229 = 268'd431359146674410236714672241392314090778194310760649159697657763987456;
parameter    ap_ST_fsm_state230 = 268'd862718293348820473429344482784628181556388621521298319395315527974912;
parameter    ap_ST_fsm_state231 = 268'd1725436586697640946858688965569256363112777243042596638790631055949824;
parameter    ap_ST_fsm_state232 = 268'd3450873173395281893717377931138512726225554486085193277581262111899648;
parameter    ap_ST_fsm_state233 = 268'd6901746346790563787434755862277025452451108972170386555162524223799296;
parameter    ap_ST_fsm_state234 = 268'd13803492693581127574869511724554050904902217944340773110325048447598592;
parameter    ap_ST_fsm_state235 = 268'd27606985387162255149739023449108101809804435888681546220650096895197184;
parameter    ap_ST_fsm_state236 = 268'd55213970774324510299478046898216203619608871777363092441300193790394368;
parameter    ap_ST_fsm_state237 = 268'd110427941548649020598956093796432407239217743554726184882600387580788736;
parameter    ap_ST_fsm_state238 = 268'd220855883097298041197912187592864814478435487109452369765200775161577472;
parameter    ap_ST_fsm_state239 = 268'd441711766194596082395824375185729628956870974218904739530401550323154944;
parameter    ap_ST_fsm_state240 = 268'd883423532389192164791648750371459257913741948437809479060803100646309888;
parameter    ap_ST_fsm_state241 = 268'd1766847064778384329583297500742918515827483896875618958121606201292619776;
parameter    ap_ST_fsm_state242 = 268'd3533694129556768659166595001485837031654967793751237916243212402585239552;
parameter    ap_ST_fsm_state243 = 268'd7067388259113537318333190002971674063309935587502475832486424805170479104;
parameter    ap_ST_fsm_state244 = 268'd14134776518227074636666380005943348126619871175004951664972849610340958208;
parameter    ap_ST_fsm_state245 = 268'd28269553036454149273332760011886696253239742350009903329945699220681916416;
parameter    ap_ST_fsm_state246 = 268'd56539106072908298546665520023773392506479484700019806659891398441363832832;
parameter    ap_ST_fsm_state247 = 268'd113078212145816597093331040047546785012958969400039613319782796882727665664;
parameter    ap_ST_fsm_state248 = 268'd226156424291633194186662080095093570025917938800079226639565593765455331328;
parameter    ap_ST_fsm_state249 = 268'd452312848583266388373324160190187140051835877600158453279131187530910662656;
parameter    ap_ST_fsm_state250 = 268'd904625697166532776746648320380374280103671755200316906558262375061821325312;
parameter    ap_ST_fsm_state251 = 268'd1809251394333065553493296640760748560207343510400633813116524750123642650624;
parameter    ap_ST_fsm_state252 = 268'd3618502788666131106986593281521497120414687020801267626233049500247285301248;
parameter    ap_ST_fsm_state253 = 268'd7237005577332262213973186563042994240829374041602535252466099000494570602496;
parameter    ap_ST_fsm_state254 = 268'd14474011154664524427946373126085988481658748083205070504932198000989141204992;
parameter    ap_ST_fsm_state255 = 268'd28948022309329048855892746252171976963317496166410141009864396001978282409984;
parameter    ap_ST_fsm_state256 = 268'd57896044618658097711785492504343953926634992332820282019728792003956564819968;
parameter    ap_ST_fsm_state257 = 268'd115792089237316195423570985008687907853269984665640564039457584007913129639936;
parameter    ap_ST_fsm_state258 = 268'd231584178474632390847141970017375815706539969331281128078915168015826259279872;
parameter    ap_ST_fsm_state259 = 268'd463168356949264781694283940034751631413079938662562256157830336031652518559744;
parameter    ap_ST_fsm_state260 = 268'd926336713898529563388567880069503262826159877325124512315660672063305037119488;
parameter    ap_ST_fsm_state261 = 268'd1852673427797059126777135760139006525652319754650249024631321344126610074238976;
parameter    ap_ST_fsm_state262 = 268'd3705346855594118253554271520278013051304639509300498049262642688253220148477952;
parameter    ap_ST_fsm_state263 = 268'd7410693711188236507108543040556026102609279018600996098525285376506440296955904;
parameter    ap_ST_fsm_state264 = 268'd14821387422376473014217086081112052205218558037201992197050570753012880593911808;
parameter    ap_ST_fsm_state265 = 268'd29642774844752946028434172162224104410437116074403984394101141506025761187823616;
parameter    ap_ST_fsm_state266 = 268'd59285549689505892056868344324448208820874232148807968788202283012051522375647232;
parameter    ap_ST_fsm_state267 = 268'd118571099379011784113736688648896417641748464297615937576404566024103044751294464;
parameter    ap_ST_fsm_state268 = 268'd237142198758023568227473377297792835283496928595231875152809132048206089502588928;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [1:0] g_address0;
output   g_ce0;
output   g_we0;
output  [31:0] g_d0;
input  [31:0] g_q0;
output  [1:0] g_address1;
output   g_ce1;
input  [31:0] g_q1;
output  [1:0] a_address0;
output   a_ce0;
output   a_we0;
output  [31:0] a_d0;
input  [31:0] a_q0;
output  [1:0] a_address1;
output   a_ce1;
input  [31:0] a_q1;
output  [1:0] m_address0;
output   m_ce0;
output   m_we0;
output  [31:0] m_d0;
input  [31:0] m_q0;
output  [1:0] m_address1;
output   m_ce1;
input  [31:0] m_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[1:0] g_address0;
reg g_ce0;
reg g_we0;
reg[1:0] g_address1;
reg g_ce1;
reg[1:0] a_address0;
reg a_ce0;
reg a_we0;
reg[31:0] a_d0;
reg[1:0] a_address1;
reg a_ce1;
reg[1:0] m_address0;
reg m_ce0;
reg m_we0;
reg[31:0] m_d0;
reg[1:0] m_address1;
reg m_ce1;

(* fsm_encoding = "none" *) reg   [267:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] beta;
reg   [1:0] q_address0;
reg    q_ce0;
reg    q_we0;
reg   [31:0] q_d0;
wire   [31:0] q_q0;
reg   [1:0] q_address1;
reg    q_ce1;
reg    q_we1;
reg   [31:0] q_d1;
wire   [31:0] q_q1;
reg   [31:0] reg_506;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state63;
reg   [31:0] reg_515;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state256;
reg   [31:0] reg_529;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state68;
reg   [31:0] reg_543;
wire    ap_CS_fsm_state69;
wire   [31:0] grp_fu_445_p2;
reg   [31:0] reg_557;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state46;
wire   [31:0] grp_fu_449_p2;
reg   [31:0] reg_565;
wire   [31:0] grp_fu_453_p2;
reg   [31:0] reg_573;
wire   [31:0] grp_fu_457_p2;
reg   [31:0] reg_581;
wire   [31:0] grp_fu_461_p2;
reg   [31:0] reg_589;
wire    ap_CS_fsm_state165;
wire    ap_CS_fsm_state183;
wire    ap_CS_fsm_state192;
wire    ap_CS_fsm_state201;
wire    ap_CS_fsm_state215;
wire   [31:0] grp_fu_465_p2;
reg   [31:0] reg_597;
wire   [31:0] grp_fu_469_p2;
reg   [31:0] reg_604;
wire   [31:0] grp_fu_473_p2;
reg   [31:0] reg_612;
wire    ap_CS_fsm_state188;
wire   [31:0] grp_fu_410_p2;
reg   [31:0] reg_618;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state82;
wire    ap_CS_fsm_state91;
wire    ap_CS_fsm_state100;
wire    ap_CS_fsm_state109;
wire    ap_CS_fsm_state118;
wire    ap_CS_fsm_state127;
wire    ap_CS_fsm_state136;
wire    ap_CS_fsm_state150;
wire    ap_CS_fsm_state178;
wire    ap_CS_fsm_state206;
wire    ap_CS_fsm_state224;
wire    ap_CS_fsm_state233;
wire    ap_CS_fsm_state249;
wire    ap_CS_fsm_state265;
wire   [31:0] grp_fu_414_p2;
reg   [31:0] reg_636;
wire    ap_CS_fsm_state169;
wire   [31:0] grp_fu_418_p2;
reg   [31:0] reg_651;
wire   [31:0] grp_fu_422_p2;
reg   [31:0] reg_665;
wire    ap_CS_fsm_state197;
reg   [31:0] reg_675;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state174;
reg   [31:0] reg_683;
wire    ap_CS_fsm_state240;
reg   [31:0] reg_692;
wire    ap_CS_fsm_state73;
wire    ap_CS_fsm_state141;
wire    ap_CS_fsm_state151;
wire    ap_CS_fsm_state160;
reg   [31:0] reg_703;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state86;
reg   [31:0] reg_717;
reg   [31:0] reg_727;
reg   [31:0] reg_737;
reg   [31:0] reg_744;
reg   [31:0] reg_752;
wire    ap_CS_fsm_state83;
wire    ap_CS_fsm_state92;
wire    ap_CS_fsm_state104;
wire    ap_CS_fsm_state186;
wire    ap_CS_fsm_state196;
reg   [31:0] reg_767;
wire    ap_CS_fsm_state77;
wire    ap_CS_fsm_state95;
wire    ap_CS_fsm_state108;
reg   [31:0] reg_774;
wire    ap_CS_fsm_state101;
wire    ap_CS_fsm_state210;
reg   [31:0] reg_783;
reg   [31:0] reg_789;
wire    ap_CS_fsm_state113;
wire    ap_CS_fsm_state122;
reg   [31:0] reg_798;
wire    ap_CS_fsm_state142;
reg   [31:0] reg_804;
wire    ap_CS_fsm_state146;
reg   [31:0] reg_811;
reg   [31:0] reg_818;
reg   [31:0] reg_824;
reg   [31:0] reg_829;
reg   [31:0] reg_836;
wire   [31:0] grp_fu_429_p2;
reg   [31:0] reg_843;
wire   [31:0] grp_fu_433_p2;
reg   [31:0] reg_850;
reg   [31:0] reg_856;
wire   [1:0] m_addr_1_reg_1365;
wire   [0:0] notlhs_fu_880_p2;
reg   [0:0] notlhs_reg_1370;
wire    ap_CS_fsm_state3;
wire   [0:0] notrhs_fu_886_p2;
reg   [0:0] notrhs_reg_1375;
wire   [0:0] tmp_232_fu_896_p2;
reg   [0:0] tmp_232_reg_1380;
wire    ap_CS_fsm_state6;
wire   [0:0] notlhs3_fu_920_p2;
reg   [0:0] notlhs3_reg_1389;
wire    ap_CS_fsm_state8;
wire   [0:0] notrhs3_fu_926_p2;
reg   [0:0] notrhs3_reg_1394;
wire   [0:0] tmp_237_fu_936_p2;
reg   [0:0] tmp_237_reg_1399;
wire    ap_CS_fsm_state11;
wire   [0:0] notlhs4_fu_960_p2;
reg   [0:0] notlhs4_reg_1408;
wire    ap_CS_fsm_state13;
wire   [0:0] notrhs4_fu_966_p2;
reg   [0:0] notrhs4_reg_1413;
wire   [0:0] tmp_242_fu_976_p2;
reg   [0:0] tmp_242_reg_1418;
wire    ap_CS_fsm_state16;
reg   [31:0] g_load_reg_1427;
wire   [31:0] tmp_82_neg_fu_986_p2;
reg   [31:0] tmp_82_neg_reg_1444;
reg   [31:0] g_load_3_reg_1449;
reg   [31:0] g_load_4_reg_1456;
wire   [31:0] tmp_s_fu_992_p1;
wire    ap_CS_fsm_state19;
wire   [1:0] a_addr_5_reg_1469;
wire   [0:0] notlhs5_fu_1014_p2;
reg   [0:0] notlhs5_reg_1474;
wire    ap_CS_fsm_state43;
wire   [0:0] notrhs5_fu_1020_p2;
reg   [0:0] notrhs5_reg_1479;
wire   [0:0] tmp_247_fu_1030_p2;
reg   [0:0] tmp_247_reg_1484;
wire   [0:0] notlhs6_fu_1054_p2;
reg   [0:0] notlhs6_reg_1493;
wire    ap_CS_fsm_state48;
wire   [0:0] notrhs6_fu_1060_p2;
reg   [0:0] notrhs6_reg_1498;
wire   [0:0] tmp_252_fu_1070_p2;
reg   [0:0] tmp_252_reg_1503;
wire    ap_CS_fsm_state51;
wire   [0:0] notlhs7_fu_1094_p2;
reg   [0:0] notlhs7_reg_1512;
wire    ap_CS_fsm_state53;
wire   [0:0] notrhs7_fu_1100_p2;
reg   [0:0] notrhs7_reg_1517;
wire   [0:0] tmp_257_fu_1110_p2;
reg   [0:0] tmp_257_reg_1522;
wire    ap_CS_fsm_state56;
wire   [1:0] m_addr_4_gep_fu_228_p3;
wire    ap_CS_fsm_state62;
reg   [31:0] m_load_4_reg_1531;
reg   [31:0] q_load_13_reg_1540;
wire   [31:0] tmp_144_neg_fu_1120_p2;
reg   [31:0] tmp_144_neg_reg_1551;
wire   [31:0] tmp_121_fu_1126_p1;
wire    ap_CS_fsm_state70;
wire    ap_CS_fsm_state71;
reg   [31:0] m_load_5_reg_1566;
wire    ap_CS_fsm_state72;
reg   [31:0] p_2q1_reg_1576;
wire    ap_CS_fsm_state81;
wire    ap_CS_fsm_state173;
reg   [31:0] a_load_9_reg_1588;
wire   [31:0] grp_fu_501_p2;
reg   [31:0] p_2bx_reg_1593;
wire   [31:0] grp_fu_437_p2;
reg   [31:0] tmp_173_reg_1606;
wire    ap_CS_fsm_state182;
wire   [31:0] tmp_160_neg_fu_1134_p2;
reg   [31:0] tmp_160_neg_reg_1616;
wire   [31:0] tmp_225_neg_fu_1144_p2;
reg   [31:0] tmp_225_neg_reg_1621;
wire   [31:0] tmp_137_fu_1150_p1;
wire    ap_CS_fsm_state184;
wire   [31:0] tmp_200_fu_1154_p1;
wire   [31:0] tmp_232_neg_fu_1162_p2;
reg   [31:0] tmp_232_neg_reg_1636;
wire    ap_CS_fsm_state187;
reg   [31:0] tmp_202_reg_1641;
wire   [31:0] tmp_207_fu_1168_p1;
reg   [31:0] tmp_220_reg_1652;
wire   [31:0] tmp_180_neg_fu_1176_p2;
reg   [31:0] tmp_180_neg_reg_1657;
wire   [31:0] tmp_157_fu_1182_p1;
wire   [31:0] grp_fu_487_p2;
reg   [31:0] tmp_217_reg_1668;
wire   [31:0] grp_fu_491_p2;
reg   [31:0] tmp_227_reg_1673;
reg   [31:0] tmp_210_reg_1678;
reg   [31:0] tmp_193_reg_1683;
reg   [31:0] s_2_2_reg_1688;
wire    ap_CS_fsm_state234;
wire    grp_normalise_1_fu_394_ap_done;
reg   [31:0] s_1_2_reg_1693;
reg   [31:0] s_0_2_reg_1698;
wire   [2:0] i_fu_1209_p2;
reg   [2:0] i_reg_1711;
wire    ap_CS_fsm_state235;
wire   [1:0] tmp_261_fu_1215_p1;
reg   [1:0] tmp_261_reg_1716;
wire   [0:0] exitcond_i_fu_1203_p2;
wire   [31:0] tmp_258_fu_1219_p6;
reg   [31:0] tmp_258_reg_1724;
wire   [31:0] tmp_259_fu_1230_p6;
reg   [31:0] tmp_259_reg_1729;
wire   [31:0] qDot_3_6_fu_1248_p3;
wire    ap_CS_fsm_state250;
wire   [31:0] qDot_3_8_fu_1269_p3;
wire   [31:0] qDot_3_11_fu_1298_p3;
wire   [31:0] qDot_3_1_fu_1322_p3;
wire   [2:0] i_4_fu_1336_p2;
reg   [2:0] i_4_reg_1757;
wire    ap_CS_fsm_state251;
wire   [31:0] tmp_260_fu_1351_p6;
reg   [31:0] tmp_260_reg_1762;
wire   [0:0] exitcond_i2_fu_1330_p2;
reg   [1:0] q_addr_reg_1767;
wire    grp_MadgwickAHRSupdateIM_fu_382_ap_start;
wire    grp_MadgwickAHRSupdateIM_fu_382_ap_done;
wire    grp_MadgwickAHRSupdateIM_fu_382_ap_idle;
wire    grp_MadgwickAHRSupdateIM_fu_382_ap_ready;
wire   [1:0] grp_MadgwickAHRSupdateIM_fu_382_g_address0;
wire    grp_MadgwickAHRSupdateIM_fu_382_g_ce0;
wire   [1:0] grp_MadgwickAHRSupdateIM_fu_382_g_address1;
wire    grp_MadgwickAHRSupdateIM_fu_382_g_ce1;
wire   [1:0] grp_MadgwickAHRSupdateIM_fu_382_a_address0;
wire    grp_MadgwickAHRSupdateIM_fu_382_a_ce0;
wire    grp_MadgwickAHRSupdateIM_fu_382_a_we0;
wire   [31:0] grp_MadgwickAHRSupdateIM_fu_382_a_d0;
wire   [1:0] grp_MadgwickAHRSupdateIM_fu_382_q_address0;
wire    grp_MadgwickAHRSupdateIM_fu_382_q_ce0;
wire    grp_MadgwickAHRSupdateIM_fu_382_q_we0;
wire   [31:0] grp_MadgwickAHRSupdateIM_fu_382_q_d0;
wire   [1:0] grp_MadgwickAHRSupdateIM_fu_382_q_address1;
wire    grp_MadgwickAHRSupdateIM_fu_382_q_ce1;
wire    grp_MadgwickAHRSupdateIM_fu_382_q_we1;
wire   [31:0] grp_MadgwickAHRSupdateIM_fu_382_q_d1;
wire    grp_normalise_1_fu_394_ap_start;
wire    grp_normalise_1_fu_394_ap_idle;
wire    grp_normalise_1_fu_394_ap_ready;
wire   [31:0] grp_normalise_1_fu_394_ap_return_0;
wire   [31:0] grp_normalise_1_fu_394_ap_return_1;
wire   [31:0] grp_normalise_1_fu_394_ap_return_2;
wire    grp_normalise_fu_402_ap_start;
wire    grp_normalise_fu_402_ap_done;
wire    grp_normalise_fu_402_ap_idle;
wire    grp_normalise_fu_402_ap_ready;
wire   [1:0] grp_normalise_fu_402_in_r_address0;
wire    grp_normalise_fu_402_in_r_ce0;
wire    grp_normalise_fu_402_in_r_we0;
wire   [31:0] grp_normalise_fu_402_in_r_d0;
reg   [31:0] grp_normalise_fu_402_in_r_q0;
reg   [31:0] qDot_3_3_reg_276;
reg   [31:0] qDot_3_4_reg_286;
reg   [31:0] qDot_2_3_reg_296;
reg   [31:0] qDot_3_reg_306;
reg   [2:0] i_i_reg_316;
reg   [31:0] qDot_0_s_reg_327;
wire    ap_CS_fsm_state57;
reg   [31:0] qDot_1_s_reg_338;
reg   [31:0] qDot_2_3_2_reg_349;
reg   [31:0] qDot_3_s_reg_360;
reg   [2:0] i_i2_reg_371;
wire    ap_CS_fsm_state266;
reg    ap_reg_grp_MadgwickAHRSupdateIM_fu_382_ap_start;
wire    ap_CS_fsm_state268;
reg    ap_reg_grp_normalise_1_fu_394_ap_start;
reg    ap_reg_grp_normalise_fu_402_ap_start;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state171;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state172;
wire    ap_CS_fsm_state267;
wire   [63:0] tmp_i2_fu_1342_p1;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_state255;
reg   [31:0] grp_fu_410_p0;
reg   [31:0] grp_fu_410_p1;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state75;
wire    ap_CS_fsm_state84;
wire    ap_CS_fsm_state93;
wire    ap_CS_fsm_state110;
wire    ap_CS_fsm_state119;
wire    ap_CS_fsm_state128;
wire    ap_CS_fsm_state143;
wire    ap_CS_fsm_state152;
wire    ap_CS_fsm_state161;
wire    ap_CS_fsm_state166;
wire    ap_CS_fsm_state170;
wire    ap_CS_fsm_state175;
wire    ap_CS_fsm_state189;
wire    ap_CS_fsm_state193;
wire    ap_CS_fsm_state198;
wire    ap_CS_fsm_state202;
wire    ap_CS_fsm_state207;
wire    ap_CS_fsm_state216;
wire    ap_CS_fsm_state225;
wire    ap_CS_fsm_state241;
wire    ap_CS_fsm_state257;
reg   [31:0] grp_fu_414_p0;
reg   [31:0] grp_fu_414_p1;
reg   [31:0] grp_fu_418_p0;
reg   [31:0] grp_fu_418_p1;
reg   [31:0] grp_fu_422_p0;
reg   [31:0] grp_fu_422_p1;
reg   [31:0] grp_fu_429_p0;
reg   [31:0] grp_fu_429_p1;
reg   [31:0] grp_fu_433_p0;
reg   [31:0] grp_fu_433_p1;
reg   [31:0] grp_fu_445_p0;
reg   [31:0] grp_fu_445_p1;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state78;
wire    ap_CS_fsm_state79;
wire    ap_CS_fsm_state87;
wire    ap_CS_fsm_state88;
wire    ap_CS_fsm_state96;
wire    ap_CS_fsm_state105;
wire    ap_CS_fsm_state114;
wire    ap_CS_fsm_state123;
wire    ap_CS_fsm_state137;
wire    ap_CS_fsm_state138;
wire    ap_CS_fsm_state147;
wire    ap_CS_fsm_state156;
wire    ap_CS_fsm_state179;
wire    ap_CS_fsm_state211;
wire    ap_CS_fsm_state236;
wire    ap_CS_fsm_state252;
reg   [31:0] grp_fu_449_p0;
reg   [31:0] grp_fu_449_p1;
reg   [31:0] grp_fu_453_p0;
reg   [31:0] grp_fu_453_p1;
reg   [31:0] grp_fu_457_p0;
reg   [31:0] grp_fu_457_p1;
reg   [31:0] grp_fu_461_p0;
reg   [31:0] grp_fu_461_p1;
reg   [31:0] grp_fu_465_p0;
reg   [31:0] grp_fu_465_p1;
reg   [31:0] grp_fu_469_p0;
reg   [31:0] grp_fu_469_p1;
reg   [31:0] grp_fu_473_p0;
reg   [31:0] grp_fu_473_p1;
wire   [31:0] grp_fu_491_p1;
reg   [31:0] grp_fu_496_p0;
wire   [31:0] m_load_to_int_fu_862_p1;
wire   [7:0] tmp_fu_866_p4;
wire   [22:0] tmp_86_fu_876_p1;
wire   [0:0] tmp_87_fu_892_p2;
wire   [0:0] grp_fu_496_p2;
wire   [31:0] m_load_1_to_int_fu_902_p1;
wire   [7:0] tmp_233_fu_906_p4;
wire   [22:0] tmp_234_fu_916_p1;
wire   [0:0] tmp_235_fu_932_p2;
wire   [31:0] m_load_2_to_int_fu_942_p1;
wire   [7:0] tmp_238_fu_946_p4;
wire   [22:0] tmp_239_fu_956_p1;
wire   [0:0] tmp_240_fu_972_p2;
wire   [31:0] tmp_82_to_int_fu_982_p1;
wire   [31:0] a_load_to_int_fu_996_p1;
wire   [7:0] tmp_243_fu_1000_p4;
wire   [22:0] tmp_244_fu_1010_p1;
wire   [0:0] tmp_245_fu_1026_p2;
wire   [31:0] a_load_6_to_int_fu_1036_p1;
wire   [7:0] tmp_248_fu_1040_p4;
wire   [22:0] tmp_249_fu_1050_p1;
wire   [0:0] tmp_250_fu_1066_p2;
wire   [31:0] a_load_7_to_int_fu_1076_p1;
wire   [7:0] tmp_253_fu_1080_p4;
wire   [22:0] tmp_254_fu_1090_p1;
wire   [0:0] tmp_255_fu_1106_p2;
wire   [31:0] tmp_144_to_int_fu_1116_p1;
wire   [31:0] tmp_160_to_int_fu_1130_p1;
wire   [31:0] tmp_225_to_int_fu_1140_p1;
wire   [31:0] tmp_232_to_int_fu_1158_p1;
wire   [31:0] tmp_180_to_int_fu_1173_p1;
wire   [1:0] tmp_258_fu_1219_p5;
wire   [0:0] sel_tmp7_fu_1243_p2;
wire   [0:0] sel_tmp_fu_1256_p2;
wire   [31:0] qDot_3_7_fu_1261_p3;
wire   [0:0] sel_tmp9_fu_1277_p2;
wire   [31:0] qDot_3_9_fu_1282_p3;
wire   [31:0] qDot_3_10_fu_1290_p3;
wire   [31:0] qDot_3_12_fu_1306_p3;
wire   [31:0] qDot_3_13_fu_1314_p3;
wire   [1:0] tmp_260_fu_1351_p5;
reg   [1:0] grp_fu_410_opcode;
reg    grp_fu_410_ce;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state129;
wire    ap_CS_fsm_state130;
wire    ap_CS_fsm_state131;
wire    ap_CS_fsm_state132;
wire    ap_CS_fsm_state133;
wire    ap_CS_fsm_state134;
wire    ap_CS_fsm_state135;
wire    ap_CS_fsm_state144;
wire    ap_CS_fsm_state145;
wire    ap_CS_fsm_state148;
wire    ap_CS_fsm_state149;
wire    ap_CS_fsm_state153;
wire    ap_CS_fsm_state154;
wire    ap_CS_fsm_state155;
wire    ap_CS_fsm_state157;
wire    ap_CS_fsm_state158;
wire    ap_CS_fsm_state159;
wire    ap_CS_fsm_state162;
wire    ap_CS_fsm_state163;
wire    ap_CS_fsm_state164;
wire    ap_CS_fsm_state167;
wire    ap_CS_fsm_state168;
wire    ap_CS_fsm_state176;
wire    ap_CS_fsm_state177;
wire    ap_CS_fsm_state180;
wire    ap_CS_fsm_state181;
wire    ap_CS_fsm_state185;
wire    ap_CS_fsm_state190;
wire    ap_CS_fsm_state191;
wire    ap_CS_fsm_state194;
wire    ap_CS_fsm_state195;
wire    ap_CS_fsm_state199;
wire    ap_CS_fsm_state200;
wire    ap_CS_fsm_state203;
wire    ap_CS_fsm_state204;
wire    ap_CS_fsm_state205;
wire    ap_CS_fsm_state208;
wire    ap_CS_fsm_state209;
wire    ap_CS_fsm_state212;
wire    ap_CS_fsm_state213;
wire    ap_CS_fsm_state214;
wire    ap_CS_fsm_state217;
wire    ap_CS_fsm_state218;
wire    ap_CS_fsm_state219;
wire    ap_CS_fsm_state220;
wire    ap_CS_fsm_state221;
wire    ap_CS_fsm_state222;
wire    ap_CS_fsm_state223;
wire    ap_CS_fsm_state226;
wire    ap_CS_fsm_state227;
wire    ap_CS_fsm_state228;
wire    ap_CS_fsm_state229;
wire    ap_CS_fsm_state230;
wire    ap_CS_fsm_state231;
wire    ap_CS_fsm_state232;
wire    ap_CS_fsm_state242;
wire    ap_CS_fsm_state243;
wire    ap_CS_fsm_state244;
wire    ap_CS_fsm_state245;
wire    ap_CS_fsm_state246;
wire    ap_CS_fsm_state247;
wire    ap_CS_fsm_state248;
wire    ap_CS_fsm_state258;
wire    ap_CS_fsm_state259;
wire    ap_CS_fsm_state260;
wire    ap_CS_fsm_state261;
wire    ap_CS_fsm_state262;
wire    ap_CS_fsm_state263;
wire    ap_CS_fsm_state264;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state139;
wire    ap_CS_fsm_state140;
wire    ap_CS_fsm_state237;
wire    ap_CS_fsm_state238;
wire    ap_CS_fsm_state239;
wire    ap_CS_fsm_state253;
wire    ap_CS_fsm_state254;
reg   [1:0] grp_fu_414_opcode;
reg    grp_fu_414_ce;
reg   [1:0] grp_fu_418_opcode;
reg    grp_fu_418_ce;
reg   [1:0] grp_fu_422_opcode;
reg    grp_fu_422_ce;
reg   [1:0] grp_fu_429_opcode;
reg    grp_fu_429_ce;
reg    grp_fu_433_ce;
reg    grp_fu_437_ce;
reg    grp_fu_445_ce;
reg    grp_fu_501_ce;
reg    ap_predicate_op1816_call_state267;
reg    ap_block_state267_on_subcall_done;
reg   [267:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 268'd1;
#0 beta = 32'd1036831949;
#0 ap_reg_grp_MadgwickAHRSupdateIM_fu_382_ap_start = 1'b0;
#0 ap_reg_grp_normalise_1_fu_394_ap_start = 1'b0;
#0 ap_reg_grp_normalise_fu_402_ap_start = 1'b0;
end

MadgwickAHRSupdatfYi #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
q_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(q_address0),
    .ce0(q_ce0),
    .we0(q_we0),
    .d0(q_d0),
    .q0(q_q0),
    .address1(q_address1),
    .ce1(q_ce1),
    .we1(q_we1),
    .d1(q_d1),
    .q1(q_q1)
);

MadgwickAHRSupdateIM grp_MadgwickAHRSupdateIM_fu_382(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_MadgwickAHRSupdateIM_fu_382_ap_start),
    .ap_done(grp_MadgwickAHRSupdateIM_fu_382_ap_done),
    .ap_idle(grp_MadgwickAHRSupdateIM_fu_382_ap_idle),
    .ap_ready(grp_MadgwickAHRSupdateIM_fu_382_ap_ready),
    .g_address0(grp_MadgwickAHRSupdateIM_fu_382_g_address0),
    .g_ce0(grp_MadgwickAHRSupdateIM_fu_382_g_ce0),
    .g_q0(g_q0),
    .g_address1(grp_MadgwickAHRSupdateIM_fu_382_g_address1),
    .g_ce1(grp_MadgwickAHRSupdateIM_fu_382_g_ce1),
    .g_q1(g_q1),
    .a_address0(grp_MadgwickAHRSupdateIM_fu_382_a_address0),
    .a_ce0(grp_MadgwickAHRSupdateIM_fu_382_a_ce0),
    .a_we0(grp_MadgwickAHRSupdateIM_fu_382_a_we0),
    .a_d0(grp_MadgwickAHRSupdateIM_fu_382_a_d0),
    .a_q0(a_q0),
    .beta(beta),
    .q_address0(grp_MadgwickAHRSupdateIM_fu_382_q_address0),
    .q_ce0(grp_MadgwickAHRSupdateIM_fu_382_q_ce0),
    .q_we0(grp_MadgwickAHRSupdateIM_fu_382_q_we0),
    .q_d0(grp_MadgwickAHRSupdateIM_fu_382_q_d0),
    .q_q0(q_q0),
    .q_address1(grp_MadgwickAHRSupdateIM_fu_382_q_address1),
    .q_ce1(grp_MadgwickAHRSupdateIM_fu_382_q_ce1),
    .q_we1(grp_MadgwickAHRSupdateIM_fu_382_q_we1),
    .q_d1(grp_MadgwickAHRSupdateIM_fu_382_q_d1),
    .q_q1(q_q1)
);

normalise_1 grp_normalise_1_fu_394(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_normalise_1_fu_394_ap_start),
    .ap_done(grp_normalise_1_fu_394_ap_done),
    .ap_idle(grp_normalise_1_fu_394_ap_idle),
    .ap_ready(grp_normalise_1_fu_394_ap_ready),
    .in_0_read(reg_618),
    .in_1_read(reg_636),
    .in_2_read(reg_651),
    .in_3_read(reg_665),
    .ap_return_0(grp_normalise_1_fu_394_ap_return_0),
    .ap_return_1(grp_normalise_1_fu_394_ap_return_1),
    .ap_return_2(grp_normalise_1_fu_394_ap_return_2)
);

normalise grp_normalise_fu_402(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_normalise_fu_402_ap_start),
    .ap_done(grp_normalise_fu_402_ap_done),
    .ap_idle(grp_normalise_fu_402_ap_idle),
    .ap_ready(grp_normalise_fu_402_ap_ready),
    .in_r_address0(grp_normalise_fu_402_in_r_address0),
    .in_r_ce0(grp_normalise_fu_402_in_r_ce0),
    .in_r_we0(grp_normalise_fu_402_in_r_we0),
    .in_r_d0(grp_normalise_fu_402_in_r_d0),
    .in_r_q0(grp_normalise_fu_402_in_r_q0)
);

MadgwickAHRSupdatbkb #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatbkb_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_410_p0),
    .din1(grp_fu_410_p1),
    .opcode(grp_fu_410_opcode),
    .ce(grp_fu_410_ce),
    .dout(grp_fu_410_p2)
);

MadgwickAHRSupdatbkb #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatbkb_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_414_p0),
    .din1(grp_fu_414_p1),
    .opcode(grp_fu_414_opcode),
    .ce(grp_fu_414_ce),
    .dout(grp_fu_414_p2)
);

MadgwickAHRSupdatbkb #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatbkb_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_418_p0),
    .din1(grp_fu_418_p1),
    .opcode(grp_fu_418_opcode),
    .ce(grp_fu_418_ce),
    .dout(grp_fu_418_p2)
);

MadgwickAHRSupdatbkb #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatbkb_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_422_p0),
    .din1(grp_fu_422_p1),
    .opcode(grp_fu_422_opcode),
    .ce(grp_fu_422_ce),
    .dout(grp_fu_422_p2)
);

MadgwickAHRSupdatbkb #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatbkb_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_429_p0),
    .din1(grp_fu_429_p1),
    .opcode(grp_fu_429_opcode),
    .ce(grp_fu_429_ce),
    .dout(grp_fu_429_p2)
);

MadgwickAHRSupdatg8j #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatg8j_U45(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_433_p0),
    .din1(grp_fu_433_p1),
    .ce(grp_fu_433_ce),
    .dout(grp_fu_433_p2)
);

MadgwickAHRSupdathbi #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdathbi_U46(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_651),
    .din1(reg_752),
    .ce(grp_fu_437_ce),
    .dout(grp_fu_437_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_445_p0),
    .din1(grp_fu_445_p1),
    .ce(grp_fu_445_ce),
    .dout(grp_fu_445_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_449_p0),
    .din1(grp_fu_449_p1),
    .ce(1'b1),
    .dout(grp_fu_449_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_453_p0),
    .din1(grp_fu_453_p1),
    .ce(1'b1),
    .dout(grp_fu_453_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_457_p0),
    .din1(grp_fu_457_p1),
    .ce(1'b1),
    .dout(grp_fu_457_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U51(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_461_p0),
    .din1(grp_fu_461_p1),
    .ce(1'b1),
    .dout(grp_fu_461_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U52(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_465_p0),
    .din1(grp_fu_465_p1),
    .ce(1'b1),
    .dout(grp_fu_465_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_469_p0),
    .din1(grp_fu_469_p1),
    .ce(1'b1),
    .dout(grp_fu_469_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_473_p0),
    .din1(grp_fu_473_p1),
    .ce(1'b1),
    .dout(grp_fu_473_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U55(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_752),
    .din1(q_load_13_reg_1540),
    .ce(1'b1),
    .dout(grp_fu_487_p2)
);

MadgwickAHRSupdatcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatcud_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_515),
    .din1(grp_fu_491_p1),
    .ce(1'b1),
    .dout(grp_fu_491_p2)
);

MadgwickAHRSupdatdEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
MadgwickAHRSupdatdEe_U57(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_496_p0),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd1),
    .dout(grp_fu_496_p2)
);

MadgwickAHRSupdatibs #(
    .ID( 1 ),
    .NUM_STAGE( 28 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdatibs_U58(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(reg_618),
    .ce(grp_fu_501_ce),
    .dout(grp_fu_501_p2)
);

MadgwickAHRSupdateOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdateOg_U59(
    .din1(s_0_2_reg_1698),
    .din2(s_1_2_reg_1693),
    .din3(s_2_2_reg_1688),
    .din4(reg_665),
    .din5(tmp_258_fu_1219_p5),
    .dout(tmp_258_fu_1219_p6)
);

MadgwickAHRSupdateOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdateOg_U60(
    .din1(qDot_3_3_reg_276),
    .din2(qDot_3_4_reg_286),
    .din3(qDot_2_3_reg_296),
    .din4(qDot_3_reg_306),
    .din5(tmp_261_reg_1716),
    .dout(tmp_259_fu_1230_p6)
);

MadgwickAHRSupdateOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
MadgwickAHRSupdateOg_U61(
    .din1(qDot_0_s_reg_327),
    .din2(qDot_1_s_reg_338),
    .din3(qDot_2_3_2_reg_349),
    .din4(qDot_3_s_reg_360),
    .din5(tmp_260_fu_1351_p5),
    .dout(tmp_260_fu_1351_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_MadgwickAHRSupdateIM_fu_382_ap_start <= 1'b0;
    end else begin
        if (((1'd1 == tmp_242_fu_976_p2) & (1'd1 == tmp_237_reg_1399) & (tmp_232_reg_1380 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
            ap_reg_grp_MadgwickAHRSupdateIM_fu_382_ap_start <= 1'b1;
        end else if ((1'b1 == grp_MadgwickAHRSupdateIM_fu_382_ap_ready)) begin
            ap_reg_grp_MadgwickAHRSupdateIM_fu_382_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_normalise_1_fu_394_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state233)) begin
            ap_reg_grp_normalise_1_fu_394_ap_start <= 1'b1;
        end else if ((1'b1 == grp_normalise_1_fu_394_ap_ready)) begin
            ap_reg_grp_normalise_1_fu_394_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_normalise_fu_402_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state171) | (1'b1 == ap_CS_fsm_state60) | ((1'd1 == exitcond_i2_fu_1330_p2) & (1'b1 == ap_CS_fsm_state251)))) begin
            ap_reg_grp_normalise_fu_402_ap_start <= 1'b1;
        end else if ((1'b1 == grp_normalise_fu_402_ap_ready)) begin
            ap_reg_grp_normalise_fu_402_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state266)) begin
        i_i2_reg_371 <= i_4_reg_1757;
    end else if (((1'b1 == ap_CS_fsm_state235) & ((1'd1 == exitcond_i_fu_1203_p2) | ((1'd1 == tmp_257_reg_1522) & (1'd1 == tmp_252_reg_1503) & (1'd1 == tmp_247_reg_1484))))) begin
        i_i2_reg_371 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state250)) begin
        i_i_reg_316 <= i_reg_1711;
    end else if (((1'b1 == ap_CS_fsm_state234) & (grp_normalise_1_fu_394_ap_done == 1'b1))) begin
        i_i_reg_316 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state235) & (((1'd0 == tmp_257_reg_1522) & (1'd1 == exitcond_i_fu_1203_p2)) | ((1'd0 == tmp_252_reg_1503) & (1'd1 == exitcond_i_fu_1203_p2)) | ((1'd0 == tmp_247_reg_1484) & (1'd1 == exitcond_i_fu_1203_p2))))) begin
        qDot_0_s_reg_327 <= qDot_3_3_reg_276;
    end else if (((1'd1 == tmp_257_reg_1522) & (1'd1 == tmp_252_reg_1503) & (1'd1 == tmp_247_reg_1484) & (1'b1 == ap_CS_fsm_state57))) begin
        qDot_0_s_reg_327 <= reg_557;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state235) & (((1'd0 == tmp_257_reg_1522) & (1'd1 == exitcond_i_fu_1203_p2)) | ((1'd0 == tmp_252_reg_1503) & (1'd1 == exitcond_i_fu_1203_p2)) | ((1'd0 == tmp_247_reg_1484) & (1'd1 == exitcond_i_fu_1203_p2))))) begin
        qDot_1_s_reg_338 <= qDot_3_4_reg_286;
    end else if (((1'd1 == tmp_257_reg_1522) & (1'd1 == tmp_252_reg_1503) & (1'd1 == tmp_247_reg_1484) & (1'b1 == ap_CS_fsm_state57))) begin
        qDot_1_s_reg_338 <= reg_565;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state235) & (((1'd0 == tmp_257_reg_1522) & (1'd1 == exitcond_i_fu_1203_p2)) | ((1'd0 == tmp_252_reg_1503) & (1'd1 == exitcond_i_fu_1203_p2)) | ((1'd0 == tmp_247_reg_1484) & (1'd1 == exitcond_i_fu_1203_p2))))) begin
        qDot_2_3_2_reg_349 <= qDot_2_3_reg_296;
    end else if (((1'd1 == tmp_257_reg_1522) & (1'd1 == tmp_252_reg_1503) & (1'd1 == tmp_247_reg_1484) & (1'b1 == ap_CS_fsm_state57))) begin
        qDot_2_3_2_reg_349 <= reg_573;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state250)) begin
        qDot_2_3_reg_296 <= qDot_3_11_fu_1298_p3;
    end else if (((1'b1 == ap_CS_fsm_state234) & (grp_normalise_1_fu_394_ap_done == 1'b1))) begin
        qDot_2_3_reg_296 <= reg_573;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state250)) begin
        qDot_3_3_reg_276 <= qDot_3_6_fu_1248_p3;
    end else if (((1'b1 == ap_CS_fsm_state234) & (grp_normalise_1_fu_394_ap_done == 1'b1))) begin
        qDot_3_3_reg_276 <= reg_557;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state250)) begin
        qDot_3_4_reg_286 <= qDot_3_8_fu_1269_p3;
    end else if (((1'b1 == ap_CS_fsm_state234) & (grp_normalise_1_fu_394_ap_done == 1'b1))) begin
        qDot_3_4_reg_286 <= reg_565;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state250)) begin
        qDot_3_reg_306 <= qDot_3_1_fu_1322_p3;
    end else if (((1'b1 == ap_CS_fsm_state234) & (grp_normalise_1_fu_394_ap_done == 1'b1))) begin
        qDot_3_reg_306 <= reg_581;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state235) & (((1'd0 == tmp_257_reg_1522) & (1'd1 == exitcond_i_fu_1203_p2)) | ((1'd0 == tmp_252_reg_1503) & (1'd1 == exitcond_i_fu_1203_p2)) | ((1'd0 == tmp_247_reg_1484) & (1'd1 == exitcond_i_fu_1203_p2))))) begin
        qDot_3_s_reg_360 <= qDot_3_reg_306;
    end else if (((1'd1 == tmp_257_reg_1522) & (1'd1 == tmp_252_reg_1503) & (1'd1 == tmp_247_reg_1484) & (1'b1 == ap_CS_fsm_state57))) begin
        qDot_3_s_reg_360 <= reg_581;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_506 <= m_q1;
    end else if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state2))) begin
        reg_506 <= m_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        reg_515 <= q_q1;
    end else if (((1'b1 == ap_CS_fsm_state256) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_515 <= q_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        reg_529 <= q_q1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        reg_529 <= q_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        reg_543 <= q_q0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        reg_543 <= q_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state183)) begin
        reg_675 <= a_q1;
    end else if (((1'b1 == ap_CS_fsm_state174) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state42))) begin
        reg_675 <= a_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state174)) begin
        a_load_9_reg_1588 <= a_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        g_load_3_reg_1449 <= g_q0;
        g_load_4_reg_1456 <= g_q1;
        tmp_82_neg_reg_1444 <= tmp_82_neg_fu_986_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        g_load_reg_1427 <= g_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state251)) begin
        i_4_reg_1757 <= i_4_fu_1336_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state235) & ((1'd0 == tmp_257_reg_1522) | (1'd0 == tmp_252_reg_1503) | (1'd0 == tmp_247_reg_1484)))) begin
        i_reg_1711 <= i_fu_1209_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        m_load_4_reg_1531 <= m_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        m_load_5_reg_1566 <= m_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        notlhs3_reg_1389 <= notlhs3_fu_920_p2;
        notrhs3_reg_1394 <= notrhs3_fu_926_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        notlhs4_reg_1408 <= notlhs4_fu_960_p2;
        notrhs4_reg_1413 <= notrhs4_fu_966_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        notlhs5_reg_1474 <= notlhs5_fu_1014_p2;
        notrhs5_reg_1479 <= notrhs5_fu_1020_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        notlhs6_reg_1493 <= notlhs6_fu_1054_p2;
        notrhs6_reg_1498 <= notrhs6_fu_1060_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        notlhs7_reg_1512 <= notlhs7_fu_1094_p2;
        notrhs7_reg_1517 <= notrhs7_fu_1100_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        notlhs_reg_1370 <= notlhs_fu_880_p2;
        notrhs_reg_1375 <= notrhs_fu_886_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state178)) begin
        p_2bx_reg_1593 <= grp_fu_501_p2;
        tmp_173_reg_1606 <= grp_fu_437_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        p_2q1_reg_1576 <= grp_fu_445_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_i2_fu_1330_p2) & (1'b1 == ap_CS_fsm_state251))) begin
        q_addr_reg_1767 <= tmp_i2_fu_1342_p1;
        tmp_260_reg_1762 <= tmp_260_fu_1351_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        q_load_13_reg_1540 <= q_q1;
        tmp_144_neg_reg_1551 <= tmp_144_neg_fu_1120_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state256))) begin
        reg_557 <= grp_fu_445_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state23))) begin
        reg_565 <= grp_fu_449_p2;
        reg_573 <= grp_fu_453_p2;
        reg_581 <= grp_fu_457_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state215) | (1'b1 == ap_CS_fsm_state201) | (1'b1 == ap_CS_fsm_state192) | (1'b1 == ap_CS_fsm_state183) | (1'b1 == ap_CS_fsm_state165) | (1'b1 == ap_CS_fsm_state23))) begin
        reg_589 <= grp_fu_461_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state215) | (1'b1 == ap_CS_fsm_state201) | (1'b1 == ap_CS_fsm_state192) | (1'b1 == ap_CS_fsm_state183) | (1'b1 == ap_CS_fsm_state23))) begin
        reg_597 <= grp_fu_465_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state215) | (1'b1 == ap_CS_fsm_state201) | (1'b1 == ap_CS_fsm_state183) | (1'b1 == ap_CS_fsm_state23))) begin
        reg_604 <= grp_fu_469_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state188) | (1'b1 == ap_CS_fsm_state215) | (1'b1 == ap_CS_fsm_state201) | (1'b1 == ap_CS_fsm_state23))) begin
        reg_612 <= grp_fu_473_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state265) | (1'b1 == ap_CS_fsm_state249) | (1'b1 == ap_CS_fsm_state233) | (1'b1 == ap_CS_fsm_state224) | (1'b1 == ap_CS_fsm_state206) | (1'b1 == ap_CS_fsm_state178) | (1'b1 == ap_CS_fsm_state150) | (1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state215) | (1'b1 == ap_CS_fsm_state201) | (1'b1 == ap_CS_fsm_state32))) begin
        reg_618 <= grp_fu_410_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state169) | (1'b1 == ap_CS_fsm_state233) | (1'b1 == ap_CS_fsm_state224) | (1'b1 == ap_CS_fsm_state178) | (1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state215) | (1'b1 == ap_CS_fsm_state201) | (1'b1 == ap_CS_fsm_state192) | (1'b1 == ap_CS_fsm_state183) | (1'b1 == ap_CS_fsm_state32))) begin
        reg_636 <= grp_fu_414_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state169) | (1'b1 == ap_CS_fsm_state233) | (1'b1 == ap_CS_fsm_state224) | (1'b1 == ap_CS_fsm_state178) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state215) | (1'b1 == ap_CS_fsm_state201) | (1'b1 == ap_CS_fsm_state192) | (1'b1 == ap_CS_fsm_state183) | (1'b1 == ap_CS_fsm_state32))) begin
        reg_651 <= grp_fu_418_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state197) | (1'b1 == ap_CS_fsm_state233) | (1'b1 == ap_CS_fsm_state224) | (1'b1 == ap_CS_fsm_state178) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state215) | (1'b1 == ap_CS_fsm_state192) | (1'b1 == ap_CS_fsm_state32))) begin
        reg_665 <= grp_fu_422_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state240) | (1'b1 == ap_CS_fsm_state197) | (1'b1 == ap_CS_fsm_state206) | (1'b1 == ap_CS_fsm_state188) | (1'b1 == ap_CS_fsm_state215) | (1'b1 == ap_CS_fsm_state63))) begin
        reg_683 <= grp_fu_445_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state160) | (1'b1 == ap_CS_fsm_state151) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state192) | (1'b1 == ap_CS_fsm_state183) | (1'b1 == ap_CS_fsm_state68))) begin
        reg_692 <= grp_fu_445_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state197) | (1'b1 == ap_CS_fsm_state169) | (1'b1 == ap_CS_fsm_state206) | (1'b1 == ap_CS_fsm_state215) | (1'b1 == ap_CS_fsm_state192) | (1'b1 == ap_CS_fsm_state183) | (1'b1 == ap_CS_fsm_state68))) begin
        reg_703 <= grp_fu_449_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state160) | (1'b1 == ap_CS_fsm_state169) | (1'b1 == ap_CS_fsm_state215) | (1'b1 == ap_CS_fsm_state192) | (1'b1 == ap_CS_fsm_state183) | (1'b1 == ap_CS_fsm_state68))) begin
        reg_717 <= grp_fu_453_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state160) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state188) | (1'b1 == ap_CS_fsm_state201))) begin
        reg_727 <= grp_fu_449_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state188) | (1'b1 == ap_CS_fsm_state201) | (1'b1 == ap_CS_fsm_state165))) begin
        reg_737 <= grp_fu_453_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state215) | (1'b1 == ap_CS_fsm_state201) | (1'b1 == ap_CS_fsm_state192) | (1'b1 == ap_CS_fsm_state183) | (1'b1 == ap_CS_fsm_state165))) begin
        reg_744 <= grp_fu_457_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state196) | (1'b1 == ap_CS_fsm_state186) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state201))) begin
        reg_752 <= grp_fu_445_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state86))) begin
        reg_767 <= grp_fu_445_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state210) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state160) | (1'b1 == ap_CS_fsm_state151) | (1'b1 == ap_CS_fsm_state169) | (1'b1 == ap_CS_fsm_state192) | (1'b1 == ap_CS_fsm_state183))) begin
        reg_774 <= grp_fu_410_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state165))) begin
        reg_783 <= grp_fu_449_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state122) | (1'b1 == ap_CS_fsm_state113))) begin
        reg_789 <= grp_fu_445_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state174) | (1'b1 == ap_CS_fsm_state165))) begin
        reg_798 <= grp_fu_445_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state146) | (1'b1 == ap_CS_fsm_state169))) begin
        reg_804 <= grp_fu_445_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state169) | (1'b1 == ap_CS_fsm_state206) | (1'b1 == ap_CS_fsm_state188))) begin
        reg_811 <= grp_fu_457_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state169) | (1'b1 == ap_CS_fsm_state188))) begin
        reg_818 <= grp_fu_461_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state174) | (1'b1 == ap_CS_fsm_state197))) begin
        reg_824 <= grp_fu_410_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state174) | (1'b1 == ap_CS_fsm_state197) | (1'b1 == ap_CS_fsm_state206))) begin
        reg_829 <= grp_fu_414_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state210) | (1'b1 == ap_CS_fsm_state174) | (1'b1 == ap_CS_fsm_state197))) begin
        reg_836 <= grp_fu_418_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state210) | (1'b1 == ap_CS_fsm_state178) | (1'b1 == ap_CS_fsm_state201))) begin
        reg_843 <= grp_fu_429_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state210) | (1'b1 == ap_CS_fsm_state178))) begin
        reg_850 <= grp_fu_433_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state210) | (1'b1 == ap_CS_fsm_state201))) begin
        reg_856 <= grp_fu_422_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state234) & (grp_normalise_1_fu_394_ap_done == 1'b1))) begin
        s_0_2_reg_1698 <= grp_normalise_1_fu_394_ap_return_2;
        s_1_2_reg_1693 <= grp_normalise_1_fu_394_ap_return_0;
        s_2_2_reg_1688 <= grp_normalise_1_fu_394_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state183)) begin
        tmp_160_neg_reg_1616 <= tmp_160_neg_fu_1134_p2;
        tmp_225_neg_reg_1621 <= tmp_225_neg_fu_1144_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state196)) begin
        tmp_180_neg_reg_1657 <= tmp_180_neg_fu_1176_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state210)) begin
        tmp_193_reg_1683 <= grp_fu_414_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state188)) begin
        tmp_202_reg_1641 <= grp_fu_465_p2;
        tmp_220_reg_1652 <= grp_fu_469_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state206)) begin
        tmp_210_reg_1678 <= grp_fu_453_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state201)) begin
        tmp_217_reg_1668 <= grp_fu_487_p2;
        tmp_227_reg_1673 <= grp_fu_491_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state187)) begin
        tmp_232_neg_reg_1636 <= tmp_232_neg_fu_1162_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_232_reg_1380 <= tmp_232_fu_896_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_237_reg_1399 <= tmp_237_fu_936_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == tmp_237_reg_1399) & (tmp_232_reg_1380 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        tmp_242_reg_1418 <= tmp_242_fu_976_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        tmp_247_reg_1484 <= tmp_247_fu_1030_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        tmp_252_reg_1503 <= tmp_252_fu_1070_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        tmp_257_reg_1522 <= tmp_257_fu_1110_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state235) & (((1'd0 == tmp_257_reg_1522) & (1'd0 == exitcond_i_fu_1203_p2)) | ((1'd0 == tmp_252_reg_1503) & (1'd0 == exitcond_i_fu_1203_p2)) | ((1'd0 == tmp_247_reg_1484) & (1'd0 == exitcond_i_fu_1203_p2))))) begin
        tmp_258_reg_1724 <= tmp_258_fu_1219_p6;
        tmp_261_reg_1716 <= tmp_261_fu_1215_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state240)) begin
        tmp_259_reg_1729 <= tmp_259_fu_1230_p6;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state173)) begin
        a_address0 = a_addr_5_reg_1469;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        a_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        a_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        a_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        a_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state172)) begin
        a_address0 = grp_normalise_fu_402_in_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state268)) begin
        a_address0 = grp_MadgwickAHRSupdateIM_fu_382_a_address0;
    end else begin
        a_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state182)) begin
        a_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state173)) begin
        a_address1 = 64'd2;
    end else begin
        a_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state173))) begin
        a_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state172)) begin
        a_ce0 = grp_normalise_fu_402_in_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state268)) begin
        a_ce0 = grp_MadgwickAHRSupdateIM_fu_382_a_ce0;
    end else begin
        a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state182) | (1'b1 == ap_CS_fsm_state173))) begin
        a_ce1 = 1'b1;
    end else begin
        a_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        a_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state172)) begin
        a_d0 = grp_normalise_fu_402_in_r_d0;
    end else if ((1'b1 == ap_CS_fsm_state268)) begin
        a_d0 = grp_MadgwickAHRSupdateIM_fu_382_a_d0;
    end else begin
        a_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        a_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state172)) begin
        a_we0 = grp_normalise_fu_402_in_r_we0;
    end else if ((1'b1 == ap_CS_fsm_state268)) begin
        a_we0 = grp_MadgwickAHRSupdateIM_fu_382_a_we0;
    end else begin
        a_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_state267_on_subcall_done == 1'b0) & (1'b1 == ap_CS_fsm_state267))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_state267_on_subcall_done == 1'b0) & (1'b1 == ap_CS_fsm_state267))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        g_address0 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_state16) & ((tmp_242_fu_976_p2 == 1'd0) | (tmp_237_reg_1399 == 1'd0) | (tmp_232_reg_1380 == 1'd0)))) begin
        g_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        g_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state268)) begin
        g_address0 = grp_MadgwickAHRSupdateIM_fu_382_g_address0;
    end else begin
        g_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        g_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state268)) begin
        g_address1 = grp_MadgwickAHRSupdateIM_fu_382_g_address1;
    end else begin
        g_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state16) & ((tmp_242_fu_976_p2 == 1'd0) | (tmp_237_reg_1399 == 1'd0) | (tmp_232_reg_1380 == 1'd0))))) begin
        g_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state268)) begin
        g_ce0 = grp_MadgwickAHRSupdateIM_fu_382_g_ce0;
    end else begin
        g_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        g_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state268)) begin
        g_ce1 = grp_MadgwickAHRSupdateIM_fu_382_g_ce1;
    end else begin
        g_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        g_we0 = 1'b1;
    end else begin
        g_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state240) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state256) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state254) | (1'b1 == ap_CS_fsm_state253) | (1'b1 == ap_CS_fsm_state239) | (1'b1 == ap_CS_fsm_state238) | (1'b1 == ap_CS_fsm_state237) | (1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state139) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state252) | (1'b1 == ap_CS_fsm_state236) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state255) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state267) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state268) | (1'b1 == ap_CS_fsm_state266) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state251) | (1'b1 == ap_CS_fsm_state250) | (1'b1 == ap_CS_fsm_state235) | (1'b1 == ap_CS_fsm_state234) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | ((1'b0 == grp_normalise_fu_402_ap_done) & (1'b1 == ap_CS_fsm_state172)))) begin
        grp_fu_410_ce = 1'b0;
    end else begin
        grp_fu_410_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state241) | (1'b1 == ap_CS_fsm_state207) | (1'b1 == ap_CS_fsm_state198) | (1'b1 == ap_CS_fsm_state193) | (1'b1 == ap_CS_fsm_state175) | (1'b1 == ap_CS_fsm_state166) | (1'b1 == ap_CS_fsm_state161) | (1'b1 == ap_CS_fsm_state143) | (1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state119) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state24))) begin
        grp_fu_410_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state257) | (1'b1 == ap_CS_fsm_state225) | (1'b1 == ap_CS_fsm_state216) | (1'b1 == ap_CS_fsm_state202) | (1'b1 == ap_CS_fsm_state189) | (1'b1 == ap_CS_fsm_state170) | (1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state184))) begin
        grp_fu_410_opcode = 2'd0;
    end else begin
        grp_fu_410_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state257)) begin
        grp_fu_410_p0 = reg_515;
    end else if ((1'b1 == ap_CS_fsm_state241)) begin
        grp_fu_410_p0 = tmp_259_reg_1729;
    end else if ((1'b1 == ap_CS_fsm_state202)) begin
        grp_fu_410_p0 = reg_727;
    end else if ((1'b1 == ap_CS_fsm_state198)) begin
        grp_fu_410_p0 = reg_829;
    end else if ((1'b1 == ap_CS_fsm_state189)) begin
        grp_fu_410_p0 = reg_683;
    end else if ((1'b1 == ap_CS_fsm_state184)) begin
        grp_fu_410_p0 = reg_703;
    end else if (((1'b1 == ap_CS_fsm_state207) | (1'b1 == ap_CS_fsm_state175))) begin
        grp_fu_410_p0 = reg_824;
    end else if ((1'b1 == ap_CS_fsm_state166)) begin
        grp_fu_410_p0 = reg_737;
    end else if (((1'b1 == ap_CS_fsm_state193) | (1'b1 == ap_CS_fsm_state170) | (1'b1 == ap_CS_fsm_state161) | (1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state143) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state84))) begin
        grp_fu_410_p0 = reg_774;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        grp_fu_410_p0 = reg_752;
    end else if (((1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state74))) begin
        grp_fu_410_p0 = reg_692;
    end else if (((1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state225) | (1'b1 == ap_CS_fsm_state216) | (1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state119) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_fu_410_p0 = reg_618;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_410_p0 = reg_557;
    end else begin
        grp_fu_410_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state241) | (1'b1 == ap_CS_fsm_state216) | (1'b1 == ap_CS_fsm_state207) | (1'b1 == ap_CS_fsm_state198))) begin
        grp_fu_410_p1 = reg_683;
    end else if ((1'b1 == ap_CS_fsm_state193)) begin
        grp_fu_410_p1 = reg_506;
    end else if ((1'b1 == ap_CS_fsm_state175)) begin
        grp_fu_410_p1 = reg_675;
    end else if ((1'b1 == ap_CS_fsm_state170)) begin
        grp_fu_410_p1 = reg_818;
    end else if (((1'b1 == ap_CS_fsm_state161) | (1'b1 == ap_CS_fsm_state184))) begin
        grp_fu_410_p1 = reg_717;
    end else if (((1'b1 == ap_CS_fsm_state166) | (1'b1 == ap_CS_fsm_state143))) begin
        grp_fu_410_p1 = reg_798;
    end else if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state84))) begin
        grp_fu_410_p1 = reg_752;
    end else if (((1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state202) | (1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state119) | (1'b1 == ap_CS_fsm_state110))) begin
        grp_fu_410_p1 = reg_692;
    end else if (((1'b1 == ap_CS_fsm_state225) | (1'b1 == ap_CS_fsm_state75))) begin
        grp_fu_410_p1 = reg_703;
    end else if (((1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state189))) begin
        grp_fu_410_p1 = reg_727;
    end else if (((1'b1 == ap_CS_fsm_state257) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_fu_410_p1 = reg_557;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_410_p1 = reg_565;
    end else begin
        grp_fu_410_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state146) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state160) | (1'b1 == ap_CS_fsm_state151) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state240) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state265) | (1'b1 == ap_CS_fsm_state249) | (1'b1 == ap_CS_fsm_state150) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state256) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state254) | (1'b1 == ap_CS_fsm_state253) | (1'b1 == ap_CS_fsm_state239) | (1'b1 == ap_CS_fsm_state238) | (1'b1 == ap_CS_fsm_state237) | (1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state139) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state264) | (1'b1 == ap_CS_fsm_state263) | (1'b1 == ap_CS_fsm_state262) | (1'b1 == ap_CS_fsm_state261) | (1'b1 == ap_CS_fsm_state260) | (1'b1 == ap_CS_fsm_state259) | (1'b1 == ap_CS_fsm_state258) | (1'b1 == ap_CS_fsm_state248) | (1'b1 == ap_CS_fsm_state247) | (1'b1 == ap_CS_fsm_state246) | (1'b1 == ap_CS_fsm_state245) | (1'b1 == ap_CS_fsm_state244) | (1'b1 == ap_CS_fsm_state243) | (1'b1 == ap_CS_fsm_state242) | (1'b1 == ap_CS_fsm_state159) | (1'b1 == ap_CS_fsm_state158) | (1'b1 == ap_CS_fsm_state157) | (1'b1 == ap_CS_fsm_state155) | (1'b1 == ap_CS_fsm_state154) | (1'b1 == ap_CS_fsm_state153) | (1'b1 == ap_CS_fsm_state149) | (1'b1 == ap_CS_fsm_state148) | (1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state252) | (1'b1 == ap_CS_fsm_state236) | (1'b1 == ap_CS_fsm_state156) | (1'b1 == ap_CS_fsm_state147) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state257) | (1'b1 == ap_CS_fsm_state241) | (1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state143) | (1'b1 == ap_CS_fsm_state255) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state267) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state268) | (1'b1 == ap_CS_fsm_state266) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state251) | (1'b1 == ap_CS_fsm_state250) | (1'b1 == ap_CS_fsm_state235) | (1'b1 == ap_CS_fsm_state234) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | ((1'b0 == grp_normalise_fu_402_ap_done) & (1'b1 == ap_CS_fsm_state172)))) begin
        grp_fu_414_ce = 1'b0;
    end else begin
        grp_fu_414_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state198) | (1'b1 == ap_CS_fsm_state193) | (1'b1 == ap_CS_fsm_state175) | (1'b1 == ap_CS_fsm_state170) | (1'b1 == ap_CS_fsm_state161) | (1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_fu_414_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state225) | (1'b1 == ap_CS_fsm_state216) | (1'b1 == ap_CS_fsm_state207) | (1'b1 == ap_CS_fsm_state202) | (1'b1 == ap_CS_fsm_state189) | (1'b1 == ap_CS_fsm_state166) | (1'b1 == ap_CS_fsm_state119) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state184))) begin
        grp_fu_414_opcode = 2'd0;
    end else begin
        grp_fu_414_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state207)) begin
        grp_fu_414_p0 = reg_618;
    end else if ((1'b1 == ap_CS_fsm_state198)) begin
        grp_fu_414_p0 = reg_836;
    end else if ((1'b1 == ap_CS_fsm_state175)) begin
        grp_fu_414_p0 = reg_829;
    end else if (((1'b1 == ap_CS_fsm_state166) | (1'b1 == ap_CS_fsm_state184))) begin
        grp_fu_414_p0 = reg_744;
    end else if ((1'b1 == ap_CS_fsm_state161)) begin
        grp_fu_414_p0 = 32'd1056964608;
    end else if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state202) | (1'b1 == ap_CS_fsm_state189))) begin
        grp_fu_414_p0 = reg_737;
    end else if (((1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state225) | (1'b1 == ap_CS_fsm_state216) | (1'b1 == ap_CS_fsm_state193) | (1'b1 == ap_CS_fsm_state170) | (1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state119) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_fu_414_p0 = reg_636;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_414_p0 = reg_573;
    end else begin
        grp_fu_414_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state216) | (1'b1 == ap_CS_fsm_state202))) begin
        grp_fu_414_p1 = reg_717;
    end else if (((1'b1 == ap_CS_fsm_state207) | (1'b1 == ap_CS_fsm_state198))) begin
        grp_fu_414_p1 = reg_703;
    end else if ((1'b1 == ap_CS_fsm_state193)) begin
        grp_fu_414_p1 = m_load_4_reg_1531;
    end else if ((1'b1 == ap_CS_fsm_state189)) begin
        grp_fu_414_p1 = reg_811;
    end else if ((1'b1 == ap_CS_fsm_state184)) begin
        grp_fu_414_p1 = reg_589;
    end else if ((1'b1 == ap_CS_fsm_state175)) begin
        grp_fu_414_p1 = a_load_9_reg_1588;
    end else if ((1'b1 == ap_CS_fsm_state170)) begin
        grp_fu_414_p1 = reg_789;
    end else if ((1'b1 == ap_CS_fsm_state166)) begin
        grp_fu_414_p1 = reg_783;
    end else if ((1'b1 == ap_CS_fsm_state161)) begin
        grp_fu_414_p1 = reg_752;
    end else if (((1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state119) | (1'b1 == ap_CS_fsm_state110))) begin
        grp_fu_414_p1 = reg_727;
    end else if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state225))) begin
        grp_fu_414_p1 = reg_744;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_fu_414_p1 = reg_565;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_414_p1 = reg_581;
    end else begin
        grp_fu_414_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state210) | (1'b1 == ap_CS_fsm_state196) | (1'b1 == ap_CS_fsm_state186) | (1'b1 == ap_CS_fsm_state174) | (1'b1 == ap_CS_fsm_state197) | (1'b1 == ap_CS_fsm_state169) | (1'b1 == ap_CS_fsm_state233) | (1'b1 == ap_CS_fsm_state224) | (1'b1 == ap_CS_fsm_state206) | (1'b1 == ap_CS_fsm_state178) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state188) | (1'b1 == ap_CS_fsm_state215) | (1'b1 == ap_CS_fsm_state201) | (1'b1 == ap_CS_fsm_state192) | (1'b1 == ap_CS_fsm_state183) | (1'b1 == ap_CS_fsm_state165) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state232) | (1'b1 == ap_CS_fsm_state231) | (1'b1 == ap_CS_fsm_state230) | (1'b1 == ap_CS_fsm_state229) | (1'b1 == ap_CS_fsm_state228) | (1'b1 == ap_CS_fsm_state227) | (1'b1 == ap_CS_fsm_state226) | (1'b1 == ap_CS_fsm_state223) | (1'b1 == ap_CS_fsm_state222) | (1'b1 == ap_CS_fsm_state221) | (1'b1 == ap_CS_fsm_state220) | (1'b1 == ap_CS_fsm_state219) | (1'b1 == ap_CS_fsm_state218) | (1'b1 == ap_CS_fsm_state217) | (1'b1 == ap_CS_fsm_state214) | (1'b1 == ap_CS_fsm_state213) | (1'b1 == ap_CS_fsm_state212) | (1'b1 == ap_CS_fsm_state209) | (1'b1 == ap_CS_fsm_state208) | (1'b1 == ap_CS_fsm_state205) | (1'b1 == ap_CS_fsm_state204) | (1'b1 == ap_CS_fsm_state203) | (1'b1 == ap_CS_fsm_state200) | (1'b1 == ap_CS_fsm_state199) | (1'b1 == ap_CS_fsm_state195) | (1'b1 == ap_CS_fsm_state194) | (1'b1 == ap_CS_fsm_state191) | (1'b1 == ap_CS_fsm_state190) | (1'b1 == ap_CS_fsm_state185) | (1'b1 == ap_CS_fsm_state181) | (1'b1 == ap_CS_fsm_state180) | (1'b1 == ap_CS_fsm_state177) | (1'b1 == ap_CS_fsm_state176) | (1'b1 == ap_CS_fsm_state168) | (1'b1 == ap_CS_fsm_state167) | (1'b1 == ap_CS_fsm_state164) | (1'b1 == ap_CS_fsm_state163) | (1'b1 == ap_CS_fsm_state162) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state211) | (1'b1 == ap_CS_fsm_state179) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state225) | (1'b1 == ap_CS_fsm_state216) | (1'b1 == ap_CS_fsm_state207) | (1'b1 == ap_CS_fsm_state202) | (1'b1 == ap_CS_fsm_state198) | (1'b1 == ap_CS_fsm_state193) | (1'b1 == ap_CS_fsm_state189) | (1'b1 == ap_CS_fsm_state175) | (1'b1 == ap_CS_fsm_state170) | (1'b1 == ap_CS_fsm_state166) | (1'b1 == ap_CS_fsm_state161) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state171) | (1'b1 == ap_CS_fsm_state187) | (1'b1 == ap_CS_fsm_state184) | (1'b1 == ap_CS_fsm_state182) | (1'b1 == ap_CS_fsm_state173) | ((1'b1 == ap_CS_fsm_state172) & (grp_normalise_fu_402_ap_done == 1'b1)))) begin
        grp_fu_418_ce = 1'b1;
    end else begin
        grp_fu_418_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state202) | (1'b1 == ap_CS_fsm_state193) | (1'b1 == ap_CS_fsm_state175) | (1'b1 == ap_CS_fsm_state170) | (1'b1 == ap_CS_fsm_state166) | (1'b1 == ap_CS_fsm_state161) | (1'b1 == ap_CS_fsm_state24))) begin
        grp_fu_418_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state225) | (1'b1 == ap_CS_fsm_state216) | (1'b1 == ap_CS_fsm_state207) | (1'b1 == ap_CS_fsm_state189) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state184))) begin
        grp_fu_418_opcode = 2'd0;
    end else begin
        grp_fu_418_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state207)) begin
        grp_fu_418_p0 = reg_829;
    end else if ((1'b1 == ap_CS_fsm_state189)) begin
        grp_fu_418_p0 = reg_818;
    end else if ((1'b1 == ap_CS_fsm_state184)) begin
        grp_fu_418_p0 = reg_597;
    end else if ((1'b1 == ap_CS_fsm_state175)) begin
        grp_fu_418_p0 = reg_836;
    end else if ((1'b1 == ap_CS_fsm_state170)) begin
        grp_fu_418_p0 = reg_727;
    end else if ((1'b1 == ap_CS_fsm_state166)) begin
        grp_fu_418_p0 = 32'd1065353216;
    end else if ((1'b1 == ap_CS_fsm_state161)) begin
        grp_fu_418_p0 = 32'd1056964608;
    end else if (((1'b1 == ap_CS_fsm_state225) | (1'b1 == ap_CS_fsm_state216) | (1'b1 == ap_CS_fsm_state193) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_fu_418_p0 = reg_651;
    end else if (((1'b1 == ap_CS_fsm_state202) | (1'b1 == ap_CS_fsm_state24))) begin
        grp_fu_418_p0 = reg_589;
    end else begin
        grp_fu_418_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state207)) begin
        grp_fu_418_p1 = tmp_210_reg_1678;
    end else if ((1'b1 == ap_CS_fsm_state193)) begin
        grp_fu_418_p1 = m_load_5_reg_1566;
    end else if ((1'b1 == ap_CS_fsm_state189)) begin
        grp_fu_418_p1 = tmp_202_reg_1641;
    end else if ((1'b1 == ap_CS_fsm_state184)) begin
        grp_fu_418_p1 = reg_604;
    end else if ((1'b1 == ap_CS_fsm_state175)) begin
        grp_fu_418_p1 = reg_798;
    end else if ((1'b1 == ap_CS_fsm_state170)) begin
        grp_fu_418_p1 = reg_804;
    end else if (((1'b1 == ap_CS_fsm_state216) | (1'b1 == ap_CS_fsm_state166))) begin
        grp_fu_418_p1 = reg_589;
    end else if ((1'b1 == ap_CS_fsm_state161)) begin
        grp_fu_418_p1 = reg_703;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_fu_418_p1 = reg_573;
    end else if (((1'b1 == ap_CS_fsm_state225) | (1'b1 == ap_CS_fsm_state202) | (1'b1 == ap_CS_fsm_state24))) begin
        grp_fu_418_p1 = reg_597;
    end else begin
        grp_fu_418_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state210) | (1'b1 == ap_CS_fsm_state196) | (1'b1 == ap_CS_fsm_state186) | (1'b1 == ap_CS_fsm_state174) | (1'b1 == ap_CS_fsm_state197) | (1'b1 == ap_CS_fsm_state233) | (1'b1 == ap_CS_fsm_state224) | (1'b1 == ap_CS_fsm_state206) | (1'b1 == ap_CS_fsm_state178) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state188) | (1'b1 == ap_CS_fsm_state215) | (1'b1 == ap_CS_fsm_state201) | (1'b1 == ap_CS_fsm_state192) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state232) | (1'b1 == ap_CS_fsm_state231) | (1'b1 == ap_CS_fsm_state230) | (1'b1 == ap_CS_fsm_state229) | (1'b1 == ap_CS_fsm_state228) | (1'b1 == ap_CS_fsm_state227) | (1'b1 == ap_CS_fsm_state226) | (1'b1 == ap_CS_fsm_state223) | (1'b1 == ap_CS_fsm_state222) | (1'b1 == ap_CS_fsm_state221) | (1'b1 == ap_CS_fsm_state220) | (1'b1 == ap_CS_fsm_state219) | (1'b1 == ap_CS_fsm_state218) | (1'b1 == ap_CS_fsm_state217) | (1'b1 == ap_CS_fsm_state214) | (1'b1 == ap_CS_fsm_state213) | (1'b1 == ap_CS_fsm_state212) | (1'b1 == ap_CS_fsm_state209) | (1'b1 == ap_CS_fsm_state208) | (1'b1 == ap_CS_fsm_state205) | (1'b1 == ap_CS_fsm_state204) | (1'b1 == ap_CS_fsm_state203) | (1'b1 == ap_CS_fsm_state200) | (1'b1 == ap_CS_fsm_state199) | (1'b1 == ap_CS_fsm_state195) | (1'b1 == ap_CS_fsm_state194) | (1'b1 == ap_CS_fsm_state191) | (1'b1 == ap_CS_fsm_state190) | (1'b1 == ap_CS_fsm_state185) | (1'b1 == ap_CS_fsm_state177) | (1'b1 == ap_CS_fsm_state176) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state211) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state225) | (1'b1 == ap_CS_fsm_state216) | (1'b1 == ap_CS_fsm_state207) | (1'b1 == ap_CS_fsm_state202) | (1'b1 == ap_CS_fsm_state198) | (1'b1 == ap_CS_fsm_state193) | (1'b1 == ap_CS_fsm_state189) | (1'b1 == ap_CS_fsm_state175) | (1'b1 == ap_CS_fsm_state170) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state171) | (1'b1 == ap_CS_fsm_state187) | (1'b1 == ap_CS_fsm_state184) | (1'b1 == ap_CS_fsm_state173) | ((1'b1 == ap_CS_fsm_state172) & (grp_normalise_fu_402_ap_done == 1'b1)))) begin
        grp_fu_422_ce = 1'b1;
    end else begin
        grp_fu_422_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state193) | (1'b1 == ap_CS_fsm_state170) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state184))) begin
        grp_fu_422_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state225) | (1'b1 == ap_CS_fsm_state216) | (1'b1 == ap_CS_fsm_state207) | (1'b1 == ap_CS_fsm_state202) | (1'b1 == ap_CS_fsm_state189) | (1'b1 == ap_CS_fsm_state24))) begin
        grp_fu_422_opcode = 2'd0;
    end else begin
        grp_fu_422_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state193)) begin
        grp_fu_422_p0 = reg_589;
    end else if ((1'b1 == ap_CS_fsm_state189)) begin
        grp_fu_422_p0 = tmp_220_reg_1652;
    end else if ((1'b1 == ap_CS_fsm_state184)) begin
        grp_fu_422_p0 = reg_651;
    end else if ((1'b1 == ap_CS_fsm_state170)) begin
        grp_fu_422_p0 = reg_717;
    end else if (((1'b1 == ap_CS_fsm_state225) | (1'b1 == ap_CS_fsm_state216) | (1'b1 == ap_CS_fsm_state207) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_fu_422_p0 = reg_665;
    end else if (((1'b1 == ap_CS_fsm_state202) | (1'b1 == ap_CS_fsm_state24))) begin
        grp_fu_422_p0 = reg_604;
    end else begin
        grp_fu_422_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state216)) begin
        grp_fu_422_p1 = reg_604;
    end else if ((1'b1 == ap_CS_fsm_state207)) begin
        grp_fu_422_p1 = reg_811;
    end else if ((1'b1 == ap_CS_fsm_state202)) begin
        grp_fu_422_p1 = reg_744;
    end else if ((1'b1 == ap_CS_fsm_state193)) begin
        grp_fu_422_p1 = reg_717;
    end else if ((1'b1 == ap_CS_fsm_state184)) begin
        grp_fu_422_p1 = reg_675;
    end else if ((1'b1 == ap_CS_fsm_state170)) begin
        grp_fu_422_p1 = reg_703;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_fu_422_p1 = reg_581;
    end else if (((1'b1 == ap_CS_fsm_state225) | (1'b1 == ap_CS_fsm_state189) | (1'b1 == ap_CS_fsm_state24))) begin
        grp_fu_422_p1 = reg_612;
    end else begin
        grp_fu_422_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state210) | (1'b1 == ap_CS_fsm_state196) | (1'b1 == ap_CS_fsm_state174) | (1'b1 == ap_CS_fsm_state197) | (1'b1 == ap_CS_fsm_state206) | (1'b1 == ap_CS_fsm_state178) | (1'b1 == ap_CS_fsm_state201) | (1'b1 == ap_CS_fsm_state209) | (1'b1 == ap_CS_fsm_state208) | (1'b1 == ap_CS_fsm_state205) | (1'b1 == ap_CS_fsm_state204) | (1'b1 == ap_CS_fsm_state203) | (1'b1 == ap_CS_fsm_state200) | (1'b1 == ap_CS_fsm_state199) | (1'b1 == ap_CS_fsm_state195) | (1'b1 == ap_CS_fsm_state194) | (1'b1 == ap_CS_fsm_state177) | (1'b1 == ap_CS_fsm_state176) | (1'b1 == ap_CS_fsm_state207) | (1'b1 == ap_CS_fsm_state202) | (1'b1 == ap_CS_fsm_state198) | (1'b1 == ap_CS_fsm_state193) | (1'b1 == ap_CS_fsm_state175) | (1'b1 == ap_CS_fsm_state170) | (1'b1 == ap_CS_fsm_state171) | (1'b1 == ap_CS_fsm_state173) | ((1'b1 == ap_CS_fsm_state172) & (grp_normalise_fu_402_ap_done == 1'b1)))) begin
        grp_fu_429_ce = 1'b1;
    end else begin
        grp_fu_429_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state202)) begin
        grp_fu_429_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state193) | (1'b1 == ap_CS_fsm_state170))) begin
        grp_fu_429_opcode = 2'd0;
    end else begin
        grp_fu_429_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state202)) begin
        grp_fu_429_p0 = reg_612;
    end else if ((1'b1 == ap_CS_fsm_state193)) begin
        grp_fu_429_p0 = reg_597;
    end else if ((1'b1 == ap_CS_fsm_state170)) begin
        grp_fu_429_p0 = reg_692;
    end else begin
        grp_fu_429_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state202)) begin
        grp_fu_429_p1 = tmp_217_reg_1668;
    end else if ((1'b1 == ap_CS_fsm_state193)) begin
        grp_fu_429_p1 = reg_692;
    end else if ((1'b1 == ap_CS_fsm_state170)) begin
        grp_fu_429_p1 = reg_811;
    end else begin
        grp_fu_429_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state210) | (1'b1 == ap_CS_fsm_state174) | (1'b1 == ap_CS_fsm_state206) | (1'b1 == ap_CS_fsm_state178) | (1'b1 == ap_CS_fsm_state209) | (1'b1 == ap_CS_fsm_state208) | (1'b1 == ap_CS_fsm_state205) | (1'b1 == ap_CS_fsm_state204) | (1'b1 == ap_CS_fsm_state203) | (1'b1 == ap_CS_fsm_state177) | (1'b1 == ap_CS_fsm_state176) | (1'b1 == ap_CS_fsm_state207) | (1'b1 == ap_CS_fsm_state202) | (1'b1 == ap_CS_fsm_state175) | (1'b1 == ap_CS_fsm_state170) | (1'b1 == ap_CS_fsm_state171) | (1'b1 == ap_CS_fsm_state173) | ((1'b1 == ap_CS_fsm_state172) & (grp_normalise_fu_402_ap_done == 1'b1)))) begin
        grp_fu_433_ce = 1'b1;
    end else begin
        grp_fu_433_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state202)) begin
        grp_fu_433_p0 = tmp_227_reg_1673;
    end else if ((1'b1 == ap_CS_fsm_state170)) begin
        grp_fu_433_p0 = reg_804;
    end else begin
        grp_fu_433_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state202)) begin
        grp_fu_433_p1 = reg_752;
    end else if ((1'b1 == ap_CS_fsm_state170)) begin
        grp_fu_433_p1 = reg_727;
    end else begin
        grp_fu_433_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state174) | (1'b1 == ap_CS_fsm_state178) | (1'b1 == ap_CS_fsm_state177) | (1'b1 == ap_CS_fsm_state176) | (1'b1 == ap_CS_fsm_state175) | (1'b1 == ap_CS_fsm_state170) | (1'b1 == ap_CS_fsm_state171) | (1'b1 == ap_CS_fsm_state173) | ((1'b1 == ap_CS_fsm_state172) & (grp_normalise_fu_402_ap_done == 1'b1)))) begin
        grp_fu_437_ce = 1'b1;
    end else begin
        grp_fu_437_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state210) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state265) | (1'b1 == ap_CS_fsm_state249) | (1'b1 == ap_CS_fsm_state233) | (1'b1 == ap_CS_fsm_state224) | (1'b1 == ap_CS_fsm_state178) | (1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state264) | (1'b1 == ap_CS_fsm_state263) | (1'b1 == ap_CS_fsm_state262) | (1'b1 == ap_CS_fsm_state261) | (1'b1 == ap_CS_fsm_state260) | (1'b1 == ap_CS_fsm_state259) | (1'b1 == ap_CS_fsm_state258) | (1'b1 == ap_CS_fsm_state248) | (1'b1 == ap_CS_fsm_state247) | (1'b1 == ap_CS_fsm_state246) | (1'b1 == ap_CS_fsm_state245) | (1'b1 == ap_CS_fsm_state244) | (1'b1 == ap_CS_fsm_state243) | (1'b1 == ap_CS_fsm_state242) | (1'b1 == ap_CS_fsm_state232) | (1'b1 == ap_CS_fsm_state231) | (1'b1 == ap_CS_fsm_state230) | (1'b1 == ap_CS_fsm_state229) | (1'b1 == ap_CS_fsm_state228) | (1'b1 == ap_CS_fsm_state227) | (1'b1 == ap_CS_fsm_state226) | (1'b1 == ap_CS_fsm_state223) | (1'b1 == ap_CS_fsm_state222) | (1'b1 == ap_CS_fsm_state221) | (1'b1 == ap_CS_fsm_state220) | (1'b1 == ap_CS_fsm_state219) | (1'b1 == ap_CS_fsm_state218) | (1'b1 == ap_CS_fsm_state217) | (1'b1 == ap_CS_fsm_state209) | (1'b1 == ap_CS_fsm_state208) | (1'b1 == ap_CS_fsm_state177) | (1'b1 == ap_CS_fsm_state176) | (1'b1 == ap_CS_fsm_state155) | (1'b1 == ap_CS_fsm_state154) | (1'b1 == ap_CS_fsm_state153) | (1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state129) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state257) | (1'b1 == ap_CS_fsm_state241) | (1'b1 == ap_CS_fsm_state225) | (1'b1 == ap_CS_fsm_state216) | (1'b1 == ap_CS_fsm_state207) | (1'b1 == ap_CS_fsm_state175) | (1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state267) | (1'b1 == ap_CS_fsm_state268) | (1'b1 == ap_CS_fsm_state266) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state251) | (1'b1 == ap_CS_fsm_state250) | (1'b1 == ap_CS_fsm_state235) | (1'b1 == ap_CS_fsm_state234) | ((1'b0 == grp_normalise_fu_402_ap_done) & (1'b1 == ap_CS_fsm_state172)) | ((1'b0 == grp_normalise_fu_402_ap_done) & (1'b1 == ap_CS_fsm_state61)))) begin
        grp_fu_445_ce = 1'b0;
    end else begin
        grp_fu_445_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state252)) begin
        grp_fu_445_p0 = tmp_260_reg_1762;
    end else if ((1'b1 == ap_CS_fsm_state236)) begin
        grp_fu_445_p0 = tmp_258_reg_1724;
    end else if ((1'b1 == ap_CS_fsm_state193)) begin
        grp_fu_445_p0 = reg_703;
    end else if (((1'b1 == ap_CS_fsm_state211) | (1'b1 == ap_CS_fsm_state184))) begin
        grp_fu_445_p0 = reg_774;
    end else if ((1'b1 == ap_CS_fsm_state182)) begin
        grp_fu_445_p0 = p_2bx_reg_1593;
    end else if (((1'b1 == ap_CS_fsm_state202) | (1'b1 == ap_CS_fsm_state170))) begin
        grp_fu_445_p0 = reg_752;
    end else if ((1'b1 == ap_CS_fsm_state147)) begin
        grp_fu_445_p0 = reg_804;
    end else if (((1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state179))) begin
        grp_fu_445_p0 = reg_529;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        grp_fu_445_p0 = reg_783;
    end else if (((1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state82))) begin
        grp_fu_445_p0 = p_2q1_reg_1576;
    end else if (((1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state79))) begin
        grp_fu_445_p0 = m_load_5_reg_1566;
    end else if (((1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state78))) begin
        grp_fu_445_p0 = reg_767;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_fu_445_p0 = reg_543;
    end else if (((1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state70))) begin
        grp_fu_445_p0 = q_load_13_reg_1540;
    end else if (((1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state123) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state87))) begin
        grp_fu_445_p0 = reg_506;
    end else if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state161))) begin
        grp_fu_445_p0 = reg_683;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state197) | (1'b1 == ap_CS_fsm_state188) | (1'b1 == ap_CS_fsm_state192) | (1'b1 == ap_CS_fsm_state137))) begin
        grp_fu_445_p0 = reg_618;
    end else if (((1'b1 == ap_CS_fsm_state165) | (1'b1 == ap_CS_fsm_state156) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_fu_445_p0 = reg_515;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_445_p0 = g_load_reg_1427;
    end else begin
        grp_fu_445_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state252)) begin
        grp_fu_445_p1 = 32'd989855744;
    end else if ((1'b1 == ap_CS_fsm_state236)) begin
        grp_fu_445_p1 = beta;
    end else if ((1'b1 == ap_CS_fsm_state211)) begin
        grp_fu_445_p1 = reg_636;
    end else if ((1'b1 == ap_CS_fsm_state193)) begin
        grp_fu_445_p1 = reg_665;
    end else if ((1'b1 == ap_CS_fsm_state184)) begin
        grp_fu_445_p1 = tmp_137_fu_1150_p1;
    end else if (((1'b1 == ap_CS_fsm_state188) | (1'b1 == ap_CS_fsm_state156))) begin
        grp_fu_445_p1 = reg_543;
    end else if (((1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state202))) begin
        grp_fu_445_p1 = reg_618;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        grp_fu_445_p1 = reg_789;
    end else if ((1'b1 == ap_CS_fsm_state114)) begin
        grp_fu_445_p1 = reg_752;
    end else if (((1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state91))) begin
        grp_fu_445_p1 = m_load_4_reg_1531;
    end else if (((1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state147) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state88))) begin
        grp_fu_445_p1 = reg_529;
    end else if (((1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state87))) begin
        grp_fu_445_p1 = reg_703;
    end else if (((1'b1 == ap_CS_fsm_state197) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state165) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state161))) begin
        grp_fu_445_p1 = q_load_13_reg_1540;
    end else if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state109))) begin
        grp_fu_445_p1 = m_load_5_reg_1566;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        grp_fu_445_p1 = tmp_121_fu_1126_p1;
    end else if (((1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state79))) begin
        grp_fu_445_p1 = reg_717;
    end else if (((1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state64))) begin
        grp_fu_445_p1 = reg_506;
    end else if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state192) | (1'b1 == ap_CS_fsm_state179) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state170) | (1'b1 == ap_CS_fsm_state182))) begin
        grp_fu_445_p1 = 32'd1073741824;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_445_p1 = 32'd1056964608;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_445_p1 = g_load_4_reg_1456;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_445_p1 = tmp_s_fu_992_p1;
    end else begin
        grp_fu_445_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state211)) begin
        grp_fu_449_p0 = reg_737;
    end else if (((1'b1 == ap_CS_fsm_state202) | (1'b1 == ap_CS_fsm_state193))) begin
        grp_fu_449_p0 = reg_744;
    end else if ((1'b1 == ap_CS_fsm_state179)) begin
        grp_fu_449_p0 = p_2bx_reg_1593;
    end else if ((1'b1 == ap_CS_fsm_state114)) begin
        grp_fu_449_p0 = reg_789;
    end else if (((1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state184))) begin
        grp_fu_449_p0 = p_2q1_reg_1576;
    end else if (((1'b1 == ap_CS_fsm_state123) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state96))) begin
        grp_fu_449_p0 = m_load_4_reg_1531;
    end else if (((1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state188) | (1'b1 == ap_CS_fsm_state156))) begin
        grp_fu_449_p0 = reg_543;
    end else if (((1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state161))) begin
        grp_fu_449_p0 = reg_767;
    end else if (((1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state70))) begin
        grp_fu_449_p0 = reg_703;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_fu_449_p0 = reg_683;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state137))) begin
        grp_fu_449_p0 = reg_636;
    end else if (((1'b1 == ap_CS_fsm_state165) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_fu_449_p0 = reg_515;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state197))) begin
        grp_fu_449_p0 = reg_529;
    end else begin
        grp_fu_449_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state211)) begin
        grp_fu_449_p1 = reg_651;
    end else if ((1'b1 == ap_CS_fsm_state202)) begin
        grp_fu_449_p1 = reg_618;
    end else if ((1'b1 == ap_CS_fsm_state197)) begin
        grp_fu_449_p1 = tmp_157_fu_1182_p1;
    end else if ((1'b1 == ap_CS_fsm_state193)) begin
        grp_fu_449_p1 = reg_665;
    end else if ((1'b1 == ap_CS_fsm_state188)) begin
        grp_fu_449_p1 = 32'd1082130432;
    end else if (((1'b1 == ap_CS_fsm_state179) | (1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state184))) begin
        grp_fu_449_p1 = reg_636;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        grp_fu_449_p1 = reg_789;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        grp_fu_449_p1 = reg_752;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        grp_fu_449_p1 = m_load_5_reg_1566;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        grp_fu_449_p1 = reg_703;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        grp_fu_449_p1 = q_load_13_reg_1540;
    end else if (((1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state70))) begin
        grp_fu_449_p1 = reg_543;
    end else if (((1'b1 == ap_CS_fsm_state165) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state156) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state161))) begin
        grp_fu_449_p1 = reg_529;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_fu_449_p1 = m_load_4_reg_1531;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_449_p1 = 32'd1056964608;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_fu_449_p1 = g_load_3_reg_1449;
    end else begin
        grp_fu_449_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state211)) begin
        grp_fu_453_p0 = tmp_193_reg_1683;
    end else if ((1'b1 == ap_CS_fsm_state202)) begin
        grp_fu_453_p0 = reg_856;
    end else if ((1'b1 == ap_CS_fsm_state197)) begin
        grp_fu_453_p0 = p_2bx_reg_1593;
    end else if (((1'b1 == ap_CS_fsm_state188) | (1'b1 == ap_CS_fsm_state179))) begin
        grp_fu_453_p0 = reg_618;
    end else if ((1'b1 == ap_CS_fsm_state165)) begin
        grp_fu_453_p0 = reg_543;
    end else if ((1'b1 == ap_CS_fsm_state161)) begin
        grp_fu_453_p0 = reg_727;
    end else if ((1'b1 == ap_CS_fsm_state156)) begin
        grp_fu_453_p0 = m_load_5_reg_1566;
    end else if (((1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state184))) begin
        grp_fu_453_p0 = reg_692;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_453_p0 = reg_651;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_fu_453_p0 = reg_515;
    end else begin
        grp_fu_453_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state211)) begin
        grp_fu_453_p1 = reg_636;
    end else if ((1'b1 == ap_CS_fsm_state202)) begin
        grp_fu_453_p1 = reg_618;
    end else if ((1'b1 == ap_CS_fsm_state184)) begin
        grp_fu_453_p1 = reg_774;
    end else if ((1'b1 == ap_CS_fsm_state179)) begin
        grp_fu_453_p1 = reg_651;
    end else if (((1'b1 == ap_CS_fsm_state197) | (1'b1 == ap_CS_fsm_state165))) begin
        grp_fu_453_p1 = q_load_13_reg_1540;
    end else if ((1'b1 == ap_CS_fsm_state161)) begin
        grp_fu_453_p1 = 32'd1073741824;
    end else if ((1'b1 == ap_CS_fsm_state156)) begin
        grp_fu_453_p1 = reg_752;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        grp_fu_453_p1 = reg_529;
    end else if (((1'b1 == ap_CS_fsm_state188) | (1'b1 == ap_CS_fsm_state64))) begin
        grp_fu_453_p1 = reg_515;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_453_p1 = 32'd1056964608;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_fu_453_p1 = g_load_reg_1427;
    end else begin
        grp_fu_453_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state211)) begin
        grp_fu_457_p0 = reg_836;
    end else if ((1'b1 == ap_CS_fsm_state202)) begin
        grp_fu_457_p0 = reg_843;
    end else if ((1'b1 == ap_CS_fsm_state197)) begin
        grp_fu_457_p0 = reg_618;
    end else if ((1'b1 == ap_CS_fsm_state184)) begin
        grp_fu_457_p0 = reg_683;
    end else if ((1'b1 == ap_CS_fsm_state179)) begin
        grp_fu_457_p0 = p_2bx_reg_1593;
    end else if (((1'b1 == ap_CS_fsm_state188) | (1'b1 == ap_CS_fsm_state165))) begin
        grp_fu_457_p0 = q_load_13_reg_1540;
    end else if ((1'b1 == ap_CS_fsm_state161)) begin
        grp_fu_457_p0 = reg_692;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        grp_fu_457_p0 = m_load_4_reg_1531;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_457_p0 = reg_665;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_fu_457_p0 = reg_529;
    end else begin
        grp_fu_457_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state211)) begin
        grp_fu_457_p1 = reg_651;
    end else if ((1'b1 == ap_CS_fsm_state202)) begin
        grp_fu_457_p1 = reg_618;
    end else if ((1'b1 == ap_CS_fsm_state188)) begin
        grp_fu_457_p1 = 32'd1082130432;
    end else if ((1'b1 == ap_CS_fsm_state184)) begin
        grp_fu_457_p1 = reg_636;
    end else if ((1'b1 == ap_CS_fsm_state179)) begin
        grp_fu_457_p1 = reg_665;
    end else if (((1'b1 == ap_CS_fsm_state197) | (1'b1 == ap_CS_fsm_state165))) begin
        grp_fu_457_p1 = reg_529;
    end else if ((1'b1 == ap_CS_fsm_state161)) begin
        grp_fu_457_p1 = 32'd1073741824;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        grp_fu_457_p1 = reg_717;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_457_p1 = 32'd1056964608;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_457_p1 = g_load_reg_1427;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_457_p1 = g_load_4_reg_1456;
    end else begin
        grp_fu_457_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state211)) begin
        grp_fu_461_p0 = reg_856;
    end else if ((1'b1 == ap_CS_fsm_state197)) begin
        grp_fu_461_p0 = p_2bx_reg_1593;
    end else if ((1'b1 == ap_CS_fsm_state188)) begin
        grp_fu_461_p0 = q_load_13_reg_1540;
    end else if ((1'b1 == ap_CS_fsm_state184)) begin
        grp_fu_461_p0 = reg_774;
    end else if ((1'b1 == ap_CS_fsm_state179)) begin
        grp_fu_461_p0 = reg_618;
    end else if ((1'b1 == ap_CS_fsm_state165)) begin
        grp_fu_461_p0 = m_load_5_reg_1566;
    end else if ((1'b1 == ap_CS_fsm_state161)) begin
        grp_fu_461_p0 = reg_703;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_461_p0 = reg_515;
    end else begin
        grp_fu_461_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state211)) begin
        grp_fu_461_p1 = reg_636;
    end else if ((1'b1 == ap_CS_fsm_state197)) begin
        grp_fu_461_p1 = reg_529;
    end else if ((1'b1 == ap_CS_fsm_state188)) begin
        grp_fu_461_p1 = tmp_207_fu_1168_p1;
    end else if ((1'b1 == ap_CS_fsm_state184)) begin
        grp_fu_461_p1 = tmp_200_fu_1154_p1;
    end else if ((1'b1 == ap_CS_fsm_state179)) begin
        grp_fu_461_p1 = reg_843;
    end else if ((1'b1 == ap_CS_fsm_state165)) begin
        grp_fu_461_p1 = reg_789;
    end else if ((1'b1 == ap_CS_fsm_state161)) begin
        grp_fu_461_p1 = 32'd1073741824;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_461_p1 = g_load_3_reg_1449;
    end else begin
        grp_fu_461_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state211)) begin
        grp_fu_465_p0 = reg_843;
    end else if ((1'b1 == ap_CS_fsm_state197)) begin
        grp_fu_465_p0 = reg_752;
    end else if ((1'b1 == ap_CS_fsm_state188)) begin
        grp_fu_465_p0 = reg_529;
    end else if ((1'b1 == ap_CS_fsm_state184)) begin
        grp_fu_465_p0 = reg_692;
    end else if ((1'b1 == ap_CS_fsm_state179)) begin
        grp_fu_465_p0 = p_2bx_reg_1593;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_465_p0 = reg_543;
    end else begin
        grp_fu_465_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state211)) begin
        grp_fu_465_p1 = reg_651;
    end else if ((1'b1 == ap_CS_fsm_state197)) begin
        grp_fu_465_p1 = reg_543;
    end else if ((1'b1 == ap_CS_fsm_state188)) begin
        grp_fu_465_p1 = tmp_207_fu_1168_p1;
    end else if ((1'b1 == ap_CS_fsm_state184)) begin
        grp_fu_465_p1 = reg_636;
    end else if ((1'b1 == ap_CS_fsm_state179)) begin
        grp_fu_465_p1 = reg_850;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_465_p1 = g_load_4_reg_1456;
    end else begin
        grp_fu_465_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state211)) begin
        grp_fu_469_p0 = reg_850;
    end else if ((1'b1 == ap_CS_fsm_state197)) begin
        grp_fu_469_p0 = p_2bx_reg_1593;
    end else if ((1'b1 == ap_CS_fsm_state184)) begin
        grp_fu_469_p0 = p_2q1_reg_1576;
    end else if ((1'b1 == ap_CS_fsm_state179)) begin
        grp_fu_469_p0 = reg_618;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_469_p0 = reg_515;
    end else begin
        grp_fu_469_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state211)) begin
        grp_fu_469_p1 = reg_636;
    end else if ((1'b1 == ap_CS_fsm_state197)) begin
        grp_fu_469_p1 = reg_543;
    end else if ((1'b1 == ap_CS_fsm_state184)) begin
        grp_fu_469_p1 = reg_774;
    end else if ((1'b1 == ap_CS_fsm_state179)) begin
        grp_fu_469_p1 = tmp_173_reg_1606;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_469_p1 = g_load_4_reg_1456;
    end else begin
        grp_fu_469_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state211)) begin
        grp_fu_473_p0 = reg_604;
    end else if ((1'b1 == ap_CS_fsm_state197)) begin
        grp_fu_473_p0 = p_2bx_reg_1593;
    end else if ((1'b1 == ap_CS_fsm_state184)) begin
        grp_fu_473_p0 = reg_767;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_473_p0 = reg_543;
    end else begin
        grp_fu_473_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state211)) begin
        grp_fu_473_p1 = reg_651;
    end else if ((1'b1 == ap_CS_fsm_state197)) begin
        grp_fu_473_p1 = reg_515;
    end else if ((1'b1 == ap_CS_fsm_state184)) begin
        grp_fu_473_p1 = reg_636;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_473_p1 = g_load_3_reg_1449;
    end else begin
        grp_fu_473_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state43))) begin
        grp_fu_496_p0 = reg_675;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state3))) begin
        grp_fu_496_p0 = reg_506;
    end else begin
        grp_fu_496_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state160) | (1'b1 == ap_CS_fsm_state151) | (1'b1 == ap_CS_fsm_state174) | (1'b1 == ap_CS_fsm_state169) | (1'b1 == ap_CS_fsm_state178) | (1'b1 == ap_CS_fsm_state165) | (1'b1 == ap_CS_fsm_state177) | (1'b1 == ap_CS_fsm_state176) | (1'b1 == ap_CS_fsm_state168) | (1'b1 == ap_CS_fsm_state167) | (1'b1 == ap_CS_fsm_state164) | (1'b1 == ap_CS_fsm_state163) | (1'b1 == ap_CS_fsm_state162) | (1'b1 == ap_CS_fsm_state159) | (1'b1 == ap_CS_fsm_state158) | (1'b1 == ap_CS_fsm_state157) | (1'b1 == ap_CS_fsm_state155) | (1'b1 == ap_CS_fsm_state154) | (1'b1 == ap_CS_fsm_state153) | (1'b1 == ap_CS_fsm_state156) | (1'b1 == ap_CS_fsm_state175) | (1'b1 == ap_CS_fsm_state170) | (1'b1 == ap_CS_fsm_state166) | (1'b1 == ap_CS_fsm_state161) | (1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state171) | (1'b1 == ap_CS_fsm_state173) | ((1'b1 == ap_CS_fsm_state172) & (grp_normalise_fu_402_ap_done == 1'b1)))) begin
        grp_fu_501_ce = 1'b1;
    end else begin
        grp_fu_501_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state267) & ((tmp_242_reg_1418 == 1'd0) | (tmp_237_reg_1399 == 1'd0) | (tmp_232_reg_1380 == 1'd0)))) begin
        grp_normalise_fu_402_in_r_q0 = q_q0;
    end else if ((1'b1 == ap_CS_fsm_state172)) begin
        grp_normalise_fu_402_in_r_q0 = a_q0;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        grp_normalise_fu_402_in_r_q0 = m_q0;
    end else begin
        grp_normalise_fu_402_in_r_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        m_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        m_address0 = m_addr_1_reg_1365;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        m_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        m_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        m_address0 = grp_normalise_fu_402_in_r_address0;
    end else begin
        m_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        m_address1 = m_addr_4_gep_fu_228_p3;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        m_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        m_address1 = 64'd2;
    end else begin
        m_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state71) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        m_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        m_ce0 = grp_normalise_fu_402_in_r_ce0;
    end else begin
        m_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state6))) begin
        m_ce1 = 1'b1;
    end else begin
        m_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        m_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        m_d0 = grp_normalise_fu_402_in_r_d0;
    end else begin
        m_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        m_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        m_we0 = grp_normalise_fu_402_in_r_we0;
    end else begin
        m_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state255)) begin
        q_address0 = q_addr_reg_1767;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        q_address0 = 2'd1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        q_address0 = 2'd2;
    end else if (((1'b1 == ap_CS_fsm_state57) | ((1'b1 == ap_CS_fsm_state16) & ((tmp_242_fu_976_p2 == 1'd0) | (tmp_237_reg_1399 == 1'd0) | (tmp_232_reg_1380 == 1'd0))))) begin
        q_address0 = 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state267) & ((tmp_242_reg_1418 == 1'd0) | (tmp_237_reg_1399 == 1'd0) | (tmp_232_reg_1380 == 1'd0)))) begin
        q_address0 = grp_normalise_fu_402_in_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state268)) begin
        q_address0 = grp_MadgwickAHRSupdateIM_fu_382_q_address0;
    end else begin
        q_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state266)) begin
        q_address1 = q_addr_reg_1767;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        q_address1 = 2'd2;
    end else if (((1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state26))) begin
        q_address1 = 2'd3;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        q_address1 = 2'd1;
    end else if ((1'b1 == ap_CS_fsm_state268)) begin
        q_address1 = grp_MadgwickAHRSupdateIM_fu_382_q_address1;
    end else begin
        q_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state255) | (1'b1 == ap_CS_fsm_state57) | ((1'b1 == ap_CS_fsm_state16) & ((tmp_242_fu_976_p2 == 1'd0) | (tmp_237_reg_1399 == 1'd0) | (tmp_232_reg_1380 == 1'd0))))) begin
        q_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state267) & ((tmp_242_reg_1418 == 1'd0) | (tmp_237_reg_1399 == 1'd0) | (tmp_232_reg_1380 == 1'd0)))) begin
        q_ce0 = grp_normalise_fu_402_in_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state268)) begin
        q_ce0 = grp_MadgwickAHRSupdateIM_fu_382_q_ce0;
    end else begin
        q_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state266))) begin
        q_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state268)) begin
        q_ce1 = grp_MadgwickAHRSupdateIM_fu_382_q_ce1;
    end else begin
        q_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state267) & ((tmp_242_reg_1418 == 1'd0) | (tmp_237_reg_1399 == 1'd0) | (tmp_232_reg_1380 == 1'd0)))) begin
        q_d0 = grp_normalise_fu_402_in_r_d0;
    end else if ((1'b1 == ap_CS_fsm_state268)) begin
        q_d0 = grp_MadgwickAHRSupdateIM_fu_382_q_d0;
    end else begin
        q_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state266)) begin
        q_d1 = reg_618;
    end else if ((1'b1 == ap_CS_fsm_state268)) begin
        q_d1 = grp_MadgwickAHRSupdateIM_fu_382_q_d1;
    end else begin
        q_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state267) & ((tmp_242_reg_1418 == 1'd0) | (tmp_237_reg_1399 == 1'd0) | (tmp_232_reg_1380 == 1'd0)))) begin
        q_we0 = grp_normalise_fu_402_in_r_we0;
    end else if ((1'b1 == ap_CS_fsm_state268)) begin
        q_we0 = grp_MadgwickAHRSupdateIM_fu_382_q_we0;
    end else begin
        q_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state266)) begin
        q_we1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state268)) begin
        q_we1 = grp_MadgwickAHRSupdateIM_fu_382_q_we1;
    end else begin
        q_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((tmp_232_fu_896_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((tmp_237_fu_936_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((1'd1 == tmp_242_fu_976_p2) & (1'd1 == tmp_237_reg_1399) & (tmp_232_reg_1380 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state268;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            if (((1'd0 == tmp_247_fu_1030_p2) & (1'b1 == ap_CS_fsm_state46))) begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            if (((1'd0 == tmp_252_fu_1070_p2) & (1'b1 == ap_CS_fsm_state51))) begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            if (((1'd1 == tmp_257_reg_1522) & (1'd1 == tmp_252_reg_1503) & (1'd1 == tmp_247_reg_1484) & (1'b1 == ap_CS_fsm_state57))) begin
                ap_NS_fsm = ap_ST_fsm_state235;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            if (((1'b1 == ap_CS_fsm_state61) & (grp_normalise_fu_402_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            ap_NS_fsm = ap_ST_fsm_state151;
        end
        ap_ST_fsm_state151 : begin
            ap_NS_fsm = ap_ST_fsm_state152;
        end
        ap_ST_fsm_state152 : begin
            ap_NS_fsm = ap_ST_fsm_state153;
        end
        ap_ST_fsm_state153 : begin
            ap_NS_fsm = ap_ST_fsm_state154;
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_state155;
        end
        ap_ST_fsm_state155 : begin
            ap_NS_fsm = ap_ST_fsm_state156;
        end
        ap_ST_fsm_state156 : begin
            ap_NS_fsm = ap_ST_fsm_state157;
        end
        ap_ST_fsm_state157 : begin
            ap_NS_fsm = ap_ST_fsm_state158;
        end
        ap_ST_fsm_state158 : begin
            ap_NS_fsm = ap_ST_fsm_state159;
        end
        ap_ST_fsm_state159 : begin
            ap_NS_fsm = ap_ST_fsm_state160;
        end
        ap_ST_fsm_state160 : begin
            ap_NS_fsm = ap_ST_fsm_state161;
        end
        ap_ST_fsm_state161 : begin
            ap_NS_fsm = ap_ST_fsm_state162;
        end
        ap_ST_fsm_state162 : begin
            ap_NS_fsm = ap_ST_fsm_state163;
        end
        ap_ST_fsm_state163 : begin
            ap_NS_fsm = ap_ST_fsm_state164;
        end
        ap_ST_fsm_state164 : begin
            ap_NS_fsm = ap_ST_fsm_state165;
        end
        ap_ST_fsm_state165 : begin
            ap_NS_fsm = ap_ST_fsm_state166;
        end
        ap_ST_fsm_state166 : begin
            ap_NS_fsm = ap_ST_fsm_state167;
        end
        ap_ST_fsm_state167 : begin
            ap_NS_fsm = ap_ST_fsm_state168;
        end
        ap_ST_fsm_state168 : begin
            ap_NS_fsm = ap_ST_fsm_state169;
        end
        ap_ST_fsm_state169 : begin
            ap_NS_fsm = ap_ST_fsm_state170;
        end
        ap_ST_fsm_state170 : begin
            ap_NS_fsm = ap_ST_fsm_state171;
        end
        ap_ST_fsm_state171 : begin
            ap_NS_fsm = ap_ST_fsm_state172;
        end
        ap_ST_fsm_state172 : begin
            if (((1'b1 == ap_CS_fsm_state172) & (grp_normalise_fu_402_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state173;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state172;
            end
        end
        ap_ST_fsm_state173 : begin
            ap_NS_fsm = ap_ST_fsm_state174;
        end
        ap_ST_fsm_state174 : begin
            ap_NS_fsm = ap_ST_fsm_state175;
        end
        ap_ST_fsm_state175 : begin
            ap_NS_fsm = ap_ST_fsm_state176;
        end
        ap_ST_fsm_state176 : begin
            ap_NS_fsm = ap_ST_fsm_state177;
        end
        ap_ST_fsm_state177 : begin
            ap_NS_fsm = ap_ST_fsm_state178;
        end
        ap_ST_fsm_state178 : begin
            ap_NS_fsm = ap_ST_fsm_state179;
        end
        ap_ST_fsm_state179 : begin
            ap_NS_fsm = ap_ST_fsm_state180;
        end
        ap_ST_fsm_state180 : begin
            ap_NS_fsm = ap_ST_fsm_state181;
        end
        ap_ST_fsm_state181 : begin
            ap_NS_fsm = ap_ST_fsm_state182;
        end
        ap_ST_fsm_state182 : begin
            ap_NS_fsm = ap_ST_fsm_state183;
        end
        ap_ST_fsm_state183 : begin
            ap_NS_fsm = ap_ST_fsm_state184;
        end
        ap_ST_fsm_state184 : begin
            ap_NS_fsm = ap_ST_fsm_state185;
        end
        ap_ST_fsm_state185 : begin
            ap_NS_fsm = ap_ST_fsm_state186;
        end
        ap_ST_fsm_state186 : begin
            ap_NS_fsm = ap_ST_fsm_state187;
        end
        ap_ST_fsm_state187 : begin
            ap_NS_fsm = ap_ST_fsm_state188;
        end
        ap_ST_fsm_state188 : begin
            ap_NS_fsm = ap_ST_fsm_state189;
        end
        ap_ST_fsm_state189 : begin
            ap_NS_fsm = ap_ST_fsm_state190;
        end
        ap_ST_fsm_state190 : begin
            ap_NS_fsm = ap_ST_fsm_state191;
        end
        ap_ST_fsm_state191 : begin
            ap_NS_fsm = ap_ST_fsm_state192;
        end
        ap_ST_fsm_state192 : begin
            ap_NS_fsm = ap_ST_fsm_state193;
        end
        ap_ST_fsm_state193 : begin
            ap_NS_fsm = ap_ST_fsm_state194;
        end
        ap_ST_fsm_state194 : begin
            ap_NS_fsm = ap_ST_fsm_state195;
        end
        ap_ST_fsm_state195 : begin
            ap_NS_fsm = ap_ST_fsm_state196;
        end
        ap_ST_fsm_state196 : begin
            ap_NS_fsm = ap_ST_fsm_state197;
        end
        ap_ST_fsm_state197 : begin
            ap_NS_fsm = ap_ST_fsm_state198;
        end
        ap_ST_fsm_state198 : begin
            ap_NS_fsm = ap_ST_fsm_state199;
        end
        ap_ST_fsm_state199 : begin
            ap_NS_fsm = ap_ST_fsm_state200;
        end
        ap_ST_fsm_state200 : begin
            ap_NS_fsm = ap_ST_fsm_state201;
        end
        ap_ST_fsm_state201 : begin
            ap_NS_fsm = ap_ST_fsm_state202;
        end
        ap_ST_fsm_state202 : begin
            ap_NS_fsm = ap_ST_fsm_state203;
        end
        ap_ST_fsm_state203 : begin
            ap_NS_fsm = ap_ST_fsm_state204;
        end
        ap_ST_fsm_state204 : begin
            ap_NS_fsm = ap_ST_fsm_state205;
        end
        ap_ST_fsm_state205 : begin
            ap_NS_fsm = ap_ST_fsm_state206;
        end
        ap_ST_fsm_state206 : begin
            ap_NS_fsm = ap_ST_fsm_state207;
        end
        ap_ST_fsm_state207 : begin
            ap_NS_fsm = ap_ST_fsm_state208;
        end
        ap_ST_fsm_state208 : begin
            ap_NS_fsm = ap_ST_fsm_state209;
        end
        ap_ST_fsm_state209 : begin
            ap_NS_fsm = ap_ST_fsm_state210;
        end
        ap_ST_fsm_state210 : begin
            ap_NS_fsm = ap_ST_fsm_state211;
        end
        ap_ST_fsm_state211 : begin
            ap_NS_fsm = ap_ST_fsm_state212;
        end
        ap_ST_fsm_state212 : begin
            ap_NS_fsm = ap_ST_fsm_state213;
        end
        ap_ST_fsm_state213 : begin
            ap_NS_fsm = ap_ST_fsm_state214;
        end
        ap_ST_fsm_state214 : begin
            ap_NS_fsm = ap_ST_fsm_state215;
        end
        ap_ST_fsm_state215 : begin
            ap_NS_fsm = ap_ST_fsm_state216;
        end
        ap_ST_fsm_state216 : begin
            ap_NS_fsm = ap_ST_fsm_state217;
        end
        ap_ST_fsm_state217 : begin
            ap_NS_fsm = ap_ST_fsm_state218;
        end
        ap_ST_fsm_state218 : begin
            ap_NS_fsm = ap_ST_fsm_state219;
        end
        ap_ST_fsm_state219 : begin
            ap_NS_fsm = ap_ST_fsm_state220;
        end
        ap_ST_fsm_state220 : begin
            ap_NS_fsm = ap_ST_fsm_state221;
        end
        ap_ST_fsm_state221 : begin
            ap_NS_fsm = ap_ST_fsm_state222;
        end
        ap_ST_fsm_state222 : begin
            ap_NS_fsm = ap_ST_fsm_state223;
        end
        ap_ST_fsm_state223 : begin
            ap_NS_fsm = ap_ST_fsm_state224;
        end
        ap_ST_fsm_state224 : begin
            ap_NS_fsm = ap_ST_fsm_state225;
        end
        ap_ST_fsm_state225 : begin
            ap_NS_fsm = ap_ST_fsm_state226;
        end
        ap_ST_fsm_state226 : begin
            ap_NS_fsm = ap_ST_fsm_state227;
        end
        ap_ST_fsm_state227 : begin
            ap_NS_fsm = ap_ST_fsm_state228;
        end
        ap_ST_fsm_state228 : begin
            ap_NS_fsm = ap_ST_fsm_state229;
        end
        ap_ST_fsm_state229 : begin
            ap_NS_fsm = ap_ST_fsm_state230;
        end
        ap_ST_fsm_state230 : begin
            ap_NS_fsm = ap_ST_fsm_state231;
        end
        ap_ST_fsm_state231 : begin
            ap_NS_fsm = ap_ST_fsm_state232;
        end
        ap_ST_fsm_state232 : begin
            ap_NS_fsm = ap_ST_fsm_state233;
        end
        ap_ST_fsm_state233 : begin
            ap_NS_fsm = ap_ST_fsm_state234;
        end
        ap_ST_fsm_state234 : begin
            if (((1'b1 == ap_CS_fsm_state234) & (grp_normalise_1_fu_394_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state235;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state234;
            end
        end
        ap_ST_fsm_state235 : begin
            if (((1'b1 == ap_CS_fsm_state235) & ((1'd1 == exitcond_i_fu_1203_p2) | ((1'd1 == tmp_257_reg_1522) & (1'd1 == tmp_252_reg_1503) & (1'd1 == tmp_247_reg_1484))))) begin
                ap_NS_fsm = ap_ST_fsm_state251;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state236;
            end
        end
        ap_ST_fsm_state236 : begin
            ap_NS_fsm = ap_ST_fsm_state237;
        end
        ap_ST_fsm_state237 : begin
            ap_NS_fsm = ap_ST_fsm_state238;
        end
        ap_ST_fsm_state238 : begin
            ap_NS_fsm = ap_ST_fsm_state239;
        end
        ap_ST_fsm_state239 : begin
            ap_NS_fsm = ap_ST_fsm_state240;
        end
        ap_ST_fsm_state240 : begin
            ap_NS_fsm = ap_ST_fsm_state241;
        end
        ap_ST_fsm_state241 : begin
            ap_NS_fsm = ap_ST_fsm_state242;
        end
        ap_ST_fsm_state242 : begin
            ap_NS_fsm = ap_ST_fsm_state243;
        end
        ap_ST_fsm_state243 : begin
            ap_NS_fsm = ap_ST_fsm_state244;
        end
        ap_ST_fsm_state244 : begin
            ap_NS_fsm = ap_ST_fsm_state245;
        end
        ap_ST_fsm_state245 : begin
            ap_NS_fsm = ap_ST_fsm_state246;
        end
        ap_ST_fsm_state246 : begin
            ap_NS_fsm = ap_ST_fsm_state247;
        end
        ap_ST_fsm_state247 : begin
            ap_NS_fsm = ap_ST_fsm_state248;
        end
        ap_ST_fsm_state248 : begin
            ap_NS_fsm = ap_ST_fsm_state249;
        end
        ap_ST_fsm_state249 : begin
            ap_NS_fsm = ap_ST_fsm_state250;
        end
        ap_ST_fsm_state250 : begin
            ap_NS_fsm = ap_ST_fsm_state235;
        end
        ap_ST_fsm_state251 : begin
            if (((1'd1 == exitcond_i2_fu_1330_p2) & (1'b1 == ap_CS_fsm_state251))) begin
                ap_NS_fsm = ap_ST_fsm_state267;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state252;
            end
        end
        ap_ST_fsm_state252 : begin
            ap_NS_fsm = ap_ST_fsm_state253;
        end
        ap_ST_fsm_state253 : begin
            ap_NS_fsm = ap_ST_fsm_state254;
        end
        ap_ST_fsm_state254 : begin
            ap_NS_fsm = ap_ST_fsm_state255;
        end
        ap_ST_fsm_state255 : begin
            ap_NS_fsm = ap_ST_fsm_state256;
        end
        ap_ST_fsm_state256 : begin
            ap_NS_fsm = ap_ST_fsm_state257;
        end
        ap_ST_fsm_state257 : begin
            ap_NS_fsm = ap_ST_fsm_state258;
        end
        ap_ST_fsm_state258 : begin
            ap_NS_fsm = ap_ST_fsm_state259;
        end
        ap_ST_fsm_state259 : begin
            ap_NS_fsm = ap_ST_fsm_state260;
        end
        ap_ST_fsm_state260 : begin
            ap_NS_fsm = ap_ST_fsm_state261;
        end
        ap_ST_fsm_state261 : begin
            ap_NS_fsm = ap_ST_fsm_state262;
        end
        ap_ST_fsm_state262 : begin
            ap_NS_fsm = ap_ST_fsm_state263;
        end
        ap_ST_fsm_state263 : begin
            ap_NS_fsm = ap_ST_fsm_state264;
        end
        ap_ST_fsm_state264 : begin
            ap_NS_fsm = ap_ST_fsm_state265;
        end
        ap_ST_fsm_state265 : begin
            ap_NS_fsm = ap_ST_fsm_state266;
        end
        ap_ST_fsm_state266 : begin
            ap_NS_fsm = ap_ST_fsm_state251;
        end
        ap_ST_fsm_state267 : begin
            if (((ap_block_state267_on_subcall_done == 1'b0) & (1'b1 == ap_CS_fsm_state267))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state267;
            end
        end
        ap_ST_fsm_state268 : begin
            if (((1'b1 == ap_CS_fsm_state268) & (grp_MadgwickAHRSupdateIM_fu_382_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state267;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state268;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_addr_5_reg_1469 = 64'd1;

assign a_load_6_to_int_fu_1036_p1 = reg_675;

assign a_load_7_to_int_fu_1076_p1 = reg_675;

assign a_load_to_int_fu_996_p1 = reg_675;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state118 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state119 = ap_CS_fsm[32'd118];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state122 = ap_CS_fsm[32'd121];

assign ap_CS_fsm_state123 = ap_CS_fsm[32'd122];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd126];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd127];

assign ap_CS_fsm_state129 = ap_CS_fsm[32'd128];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state130 = ap_CS_fsm[32'd129];

assign ap_CS_fsm_state131 = ap_CS_fsm[32'd130];

assign ap_CS_fsm_state132 = ap_CS_fsm[32'd131];

assign ap_CS_fsm_state133 = ap_CS_fsm[32'd132];

assign ap_CS_fsm_state134 = ap_CS_fsm[32'd133];

assign ap_CS_fsm_state135 = ap_CS_fsm[32'd134];

assign ap_CS_fsm_state136 = ap_CS_fsm[32'd135];

assign ap_CS_fsm_state137 = ap_CS_fsm[32'd136];

assign ap_CS_fsm_state138 = ap_CS_fsm[32'd137];

assign ap_CS_fsm_state139 = ap_CS_fsm[32'd138];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state140 = ap_CS_fsm[32'd139];

assign ap_CS_fsm_state141 = ap_CS_fsm[32'd140];

assign ap_CS_fsm_state142 = ap_CS_fsm[32'd141];

assign ap_CS_fsm_state143 = ap_CS_fsm[32'd142];

assign ap_CS_fsm_state144 = ap_CS_fsm[32'd143];

assign ap_CS_fsm_state145 = ap_CS_fsm[32'd144];

assign ap_CS_fsm_state146 = ap_CS_fsm[32'd145];

assign ap_CS_fsm_state147 = ap_CS_fsm[32'd146];

assign ap_CS_fsm_state148 = ap_CS_fsm[32'd147];

assign ap_CS_fsm_state149 = ap_CS_fsm[32'd148];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state150 = ap_CS_fsm[32'd149];

assign ap_CS_fsm_state151 = ap_CS_fsm[32'd150];

assign ap_CS_fsm_state152 = ap_CS_fsm[32'd151];

assign ap_CS_fsm_state153 = ap_CS_fsm[32'd152];

assign ap_CS_fsm_state154 = ap_CS_fsm[32'd153];

assign ap_CS_fsm_state155 = ap_CS_fsm[32'd154];

assign ap_CS_fsm_state156 = ap_CS_fsm[32'd155];

assign ap_CS_fsm_state157 = ap_CS_fsm[32'd156];

assign ap_CS_fsm_state158 = ap_CS_fsm[32'd157];

assign ap_CS_fsm_state159 = ap_CS_fsm[32'd158];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state160 = ap_CS_fsm[32'd159];

assign ap_CS_fsm_state161 = ap_CS_fsm[32'd160];

assign ap_CS_fsm_state162 = ap_CS_fsm[32'd161];

assign ap_CS_fsm_state163 = ap_CS_fsm[32'd162];

assign ap_CS_fsm_state164 = ap_CS_fsm[32'd163];

assign ap_CS_fsm_state165 = ap_CS_fsm[32'd164];

assign ap_CS_fsm_state166 = ap_CS_fsm[32'd165];

assign ap_CS_fsm_state167 = ap_CS_fsm[32'd166];

assign ap_CS_fsm_state168 = ap_CS_fsm[32'd167];

assign ap_CS_fsm_state169 = ap_CS_fsm[32'd168];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state170 = ap_CS_fsm[32'd169];

assign ap_CS_fsm_state171 = ap_CS_fsm[32'd170];

assign ap_CS_fsm_state172 = ap_CS_fsm[32'd171];

assign ap_CS_fsm_state173 = ap_CS_fsm[32'd172];

assign ap_CS_fsm_state174 = ap_CS_fsm[32'd173];

assign ap_CS_fsm_state175 = ap_CS_fsm[32'd174];

assign ap_CS_fsm_state176 = ap_CS_fsm[32'd175];

assign ap_CS_fsm_state177 = ap_CS_fsm[32'd176];

assign ap_CS_fsm_state178 = ap_CS_fsm[32'd177];

assign ap_CS_fsm_state179 = ap_CS_fsm[32'd178];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state180 = ap_CS_fsm[32'd179];

assign ap_CS_fsm_state181 = ap_CS_fsm[32'd180];

assign ap_CS_fsm_state182 = ap_CS_fsm[32'd181];

assign ap_CS_fsm_state183 = ap_CS_fsm[32'd182];

assign ap_CS_fsm_state184 = ap_CS_fsm[32'd183];

assign ap_CS_fsm_state185 = ap_CS_fsm[32'd184];

assign ap_CS_fsm_state186 = ap_CS_fsm[32'd185];

assign ap_CS_fsm_state187 = ap_CS_fsm[32'd186];

assign ap_CS_fsm_state188 = ap_CS_fsm[32'd187];

assign ap_CS_fsm_state189 = ap_CS_fsm[32'd188];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state190 = ap_CS_fsm[32'd189];

assign ap_CS_fsm_state191 = ap_CS_fsm[32'd190];

assign ap_CS_fsm_state192 = ap_CS_fsm[32'd191];

assign ap_CS_fsm_state193 = ap_CS_fsm[32'd192];

assign ap_CS_fsm_state194 = ap_CS_fsm[32'd193];

assign ap_CS_fsm_state195 = ap_CS_fsm[32'd194];

assign ap_CS_fsm_state196 = ap_CS_fsm[32'd195];

assign ap_CS_fsm_state197 = ap_CS_fsm[32'd196];

assign ap_CS_fsm_state198 = ap_CS_fsm[32'd197];

assign ap_CS_fsm_state199 = ap_CS_fsm[32'd198];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state200 = ap_CS_fsm[32'd199];

assign ap_CS_fsm_state201 = ap_CS_fsm[32'd200];

assign ap_CS_fsm_state202 = ap_CS_fsm[32'd201];

assign ap_CS_fsm_state203 = ap_CS_fsm[32'd202];

assign ap_CS_fsm_state204 = ap_CS_fsm[32'd203];

assign ap_CS_fsm_state205 = ap_CS_fsm[32'd204];

assign ap_CS_fsm_state206 = ap_CS_fsm[32'd205];

assign ap_CS_fsm_state207 = ap_CS_fsm[32'd206];

assign ap_CS_fsm_state208 = ap_CS_fsm[32'd207];

assign ap_CS_fsm_state209 = ap_CS_fsm[32'd208];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state210 = ap_CS_fsm[32'd209];

assign ap_CS_fsm_state211 = ap_CS_fsm[32'd210];

assign ap_CS_fsm_state212 = ap_CS_fsm[32'd211];

assign ap_CS_fsm_state213 = ap_CS_fsm[32'd212];

assign ap_CS_fsm_state214 = ap_CS_fsm[32'd213];

assign ap_CS_fsm_state215 = ap_CS_fsm[32'd214];

assign ap_CS_fsm_state216 = ap_CS_fsm[32'd215];

assign ap_CS_fsm_state217 = ap_CS_fsm[32'd216];

assign ap_CS_fsm_state218 = ap_CS_fsm[32'd217];

assign ap_CS_fsm_state219 = ap_CS_fsm[32'd218];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state220 = ap_CS_fsm[32'd219];

assign ap_CS_fsm_state221 = ap_CS_fsm[32'd220];

assign ap_CS_fsm_state222 = ap_CS_fsm[32'd221];

assign ap_CS_fsm_state223 = ap_CS_fsm[32'd222];

assign ap_CS_fsm_state224 = ap_CS_fsm[32'd223];

assign ap_CS_fsm_state225 = ap_CS_fsm[32'd224];

assign ap_CS_fsm_state226 = ap_CS_fsm[32'd225];

assign ap_CS_fsm_state227 = ap_CS_fsm[32'd226];

assign ap_CS_fsm_state228 = ap_CS_fsm[32'd227];

assign ap_CS_fsm_state229 = ap_CS_fsm[32'd228];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state230 = ap_CS_fsm[32'd229];

assign ap_CS_fsm_state231 = ap_CS_fsm[32'd230];

assign ap_CS_fsm_state232 = ap_CS_fsm[32'd231];

assign ap_CS_fsm_state233 = ap_CS_fsm[32'd232];

assign ap_CS_fsm_state234 = ap_CS_fsm[32'd233];

assign ap_CS_fsm_state235 = ap_CS_fsm[32'd234];

assign ap_CS_fsm_state236 = ap_CS_fsm[32'd235];

assign ap_CS_fsm_state237 = ap_CS_fsm[32'd236];

assign ap_CS_fsm_state238 = ap_CS_fsm[32'd237];

assign ap_CS_fsm_state239 = ap_CS_fsm[32'd238];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state240 = ap_CS_fsm[32'd239];

assign ap_CS_fsm_state241 = ap_CS_fsm[32'd240];

assign ap_CS_fsm_state242 = ap_CS_fsm[32'd241];

assign ap_CS_fsm_state243 = ap_CS_fsm[32'd242];

assign ap_CS_fsm_state244 = ap_CS_fsm[32'd243];

assign ap_CS_fsm_state245 = ap_CS_fsm[32'd244];

assign ap_CS_fsm_state246 = ap_CS_fsm[32'd245];

assign ap_CS_fsm_state247 = ap_CS_fsm[32'd246];

assign ap_CS_fsm_state248 = ap_CS_fsm[32'd247];

assign ap_CS_fsm_state249 = ap_CS_fsm[32'd248];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state250 = ap_CS_fsm[32'd249];

assign ap_CS_fsm_state251 = ap_CS_fsm[32'd250];

assign ap_CS_fsm_state252 = ap_CS_fsm[32'd251];

assign ap_CS_fsm_state253 = ap_CS_fsm[32'd252];

assign ap_CS_fsm_state254 = ap_CS_fsm[32'd253];

assign ap_CS_fsm_state255 = ap_CS_fsm[32'd254];

assign ap_CS_fsm_state256 = ap_CS_fsm[32'd255];

assign ap_CS_fsm_state257 = ap_CS_fsm[32'd256];

assign ap_CS_fsm_state258 = ap_CS_fsm[32'd257];

assign ap_CS_fsm_state259 = ap_CS_fsm[32'd258];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state260 = ap_CS_fsm[32'd259];

assign ap_CS_fsm_state261 = ap_CS_fsm[32'd260];

assign ap_CS_fsm_state262 = ap_CS_fsm[32'd261];

assign ap_CS_fsm_state263 = ap_CS_fsm[32'd262];

assign ap_CS_fsm_state264 = ap_CS_fsm[32'd263];

assign ap_CS_fsm_state265 = ap_CS_fsm[32'd264];

assign ap_CS_fsm_state266 = ap_CS_fsm[32'd265];

assign ap_CS_fsm_state267 = ap_CS_fsm[32'd266];

assign ap_CS_fsm_state268 = ap_CS_fsm[32'd267];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

always @ (*) begin
    ap_block_state267_on_subcall_done = ((1'b0 == grp_normalise_fu_402_ap_done) & (1'b1 == ap_predicate_op1816_call_state267));
end

always @ (*) begin
    ap_predicate_op1816_call_state267 = ((tmp_242_reg_1418 == 1'd0) | (tmp_237_reg_1399 == 1'd0) | (tmp_232_reg_1380 == 1'd0));
end

assign exitcond_i2_fu_1330_p2 = ((i_i2_reg_371 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond_i_fu_1203_p2 = ((i_i_reg_316 == 3'd4) ? 1'b1 : 1'b0);

assign g_d0 = 32'd0;

assign grp_MadgwickAHRSupdateIM_fu_382_ap_start = ap_reg_grp_MadgwickAHRSupdateIM_fu_382_ap_start;

assign grp_fu_491_p1 = tmp_180_neg_reg_1657;

assign grp_normalise_1_fu_394_ap_start = ap_reg_grp_normalise_1_fu_394_ap_start;

assign grp_normalise_fu_402_ap_start = ap_reg_grp_normalise_fu_402_ap_start;

assign i_4_fu_1336_p2 = (i_i2_reg_371 + 3'd1);

assign i_fu_1209_p2 = (i_i_reg_316 + 3'd1);

assign m_addr_1_reg_1365 = 64'd1;

assign m_addr_4_gep_fu_228_p3 = 64'd2;

assign m_load_1_to_int_fu_902_p1 = reg_506;

assign m_load_2_to_int_fu_942_p1 = reg_506;

assign m_load_to_int_fu_862_p1 = reg_506;

assign notlhs3_fu_920_p2 = ((tmp_233_fu_906_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs4_fu_960_p2 = ((tmp_238_fu_946_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs5_fu_1014_p2 = ((tmp_243_fu_1000_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs6_fu_1054_p2 = ((tmp_248_fu_1040_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs7_fu_1094_p2 = ((tmp_253_fu_1080_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs_fu_880_p2 = ((tmp_fu_866_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notrhs3_fu_926_p2 = ((tmp_234_fu_916_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs4_fu_966_p2 = ((tmp_239_fu_956_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs5_fu_1020_p2 = ((tmp_244_fu_1010_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs6_fu_1060_p2 = ((tmp_249_fu_1050_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs7_fu_1100_p2 = ((tmp_254_fu_1090_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs_fu_886_p2 = ((tmp_86_fu_876_p1 == 23'd0) ? 1'b1 : 1'b0);

assign qDot_3_10_fu_1290_p3 = ((sel_tmp_fu_1256_p2[0:0] === 1'b1) ? qDot_2_3_reg_296 : qDot_3_9_fu_1282_p3);

assign qDot_3_11_fu_1298_p3 = ((sel_tmp7_fu_1243_p2[0:0] === 1'b1) ? qDot_2_3_reg_296 : qDot_3_10_fu_1290_p3);

assign qDot_3_12_fu_1306_p3 = ((sel_tmp9_fu_1277_p2[0:0] === 1'b1) ? qDot_3_reg_306 : reg_618);

assign qDot_3_13_fu_1314_p3 = ((sel_tmp_fu_1256_p2[0:0] === 1'b1) ? qDot_3_reg_306 : qDot_3_12_fu_1306_p3);

assign qDot_3_1_fu_1322_p3 = ((sel_tmp7_fu_1243_p2[0:0] === 1'b1) ? qDot_3_reg_306 : qDot_3_13_fu_1314_p3);

assign qDot_3_6_fu_1248_p3 = ((sel_tmp7_fu_1243_p2[0:0] === 1'b1) ? reg_618 : qDot_3_3_reg_276);

assign qDot_3_7_fu_1261_p3 = ((sel_tmp_fu_1256_p2[0:0] === 1'b1) ? reg_618 : qDot_3_4_reg_286);

assign qDot_3_8_fu_1269_p3 = ((sel_tmp7_fu_1243_p2[0:0] === 1'b1) ? qDot_3_4_reg_286 : qDot_3_7_fu_1261_p3);

assign qDot_3_9_fu_1282_p3 = ((sel_tmp9_fu_1277_p2[0:0] === 1'b1) ? reg_618 : qDot_2_3_reg_296);

assign sel_tmp7_fu_1243_p2 = ((tmp_261_reg_1716 == 2'd0) ? 1'b1 : 1'b0);

assign sel_tmp9_fu_1277_p2 = ((tmp_261_reg_1716 == 2'd2) ? 1'b1 : 1'b0);

assign sel_tmp_fu_1256_p2 = ((tmp_261_reg_1716 == 2'd1) ? 1'b1 : 1'b0);

assign tmp_121_fu_1126_p1 = tmp_144_neg_reg_1551;

assign tmp_137_fu_1150_p1 = tmp_160_neg_reg_1616;

assign tmp_144_neg_fu_1120_p2 = (tmp_144_to_int_fu_1116_p1 ^ 32'd2147483648);

assign tmp_144_to_int_fu_1116_p1 = reg_692;

assign tmp_157_fu_1182_p1 = tmp_180_neg_reg_1657;

assign tmp_160_neg_fu_1134_p2 = (tmp_160_to_int_fu_1130_p1 ^ 32'd2147483648);

assign tmp_160_to_int_fu_1130_p1 = reg_767;

assign tmp_180_neg_fu_1176_p2 = (tmp_180_to_int_fu_1173_p1 ^ 32'd2147483648);

assign tmp_180_to_int_fu_1173_p1 = p_2bx_reg_1593;

assign tmp_200_fu_1154_p1 = tmp_225_neg_reg_1621;

assign tmp_207_fu_1168_p1 = tmp_232_neg_reg_1636;

assign tmp_225_neg_fu_1144_p2 = (tmp_225_to_int_fu_1140_p1 ^ 32'd2147483648);

assign tmp_225_to_int_fu_1140_p1 = reg_683;

assign tmp_232_fu_896_p2 = (tmp_87_fu_892_p2 & grp_fu_496_p2);

assign tmp_232_neg_fu_1162_p2 = (tmp_232_to_int_fu_1158_p1 ^ 32'd2147483648);

assign tmp_232_to_int_fu_1158_p1 = reg_752;

assign tmp_233_fu_906_p4 = {{m_load_1_to_int_fu_902_p1[30:23]}};

assign tmp_234_fu_916_p1 = m_load_1_to_int_fu_902_p1[22:0];

assign tmp_235_fu_932_p2 = (notrhs3_reg_1394 | notlhs3_reg_1389);

assign tmp_237_fu_936_p2 = (tmp_235_fu_932_p2 & grp_fu_496_p2);

assign tmp_238_fu_946_p4 = {{m_load_2_to_int_fu_942_p1[30:23]}};

assign tmp_239_fu_956_p1 = m_load_2_to_int_fu_942_p1[22:0];

assign tmp_240_fu_972_p2 = (notrhs4_reg_1413 | notlhs4_reg_1408);

assign tmp_242_fu_976_p2 = (tmp_240_fu_972_p2 & grp_fu_496_p2);

assign tmp_243_fu_1000_p4 = {{a_load_to_int_fu_996_p1[30:23]}};

assign tmp_244_fu_1010_p1 = a_load_to_int_fu_996_p1[22:0];

assign tmp_245_fu_1026_p2 = (notrhs5_reg_1479 | notlhs5_reg_1474);

assign tmp_247_fu_1030_p2 = (tmp_245_fu_1026_p2 & grp_fu_496_p2);

assign tmp_248_fu_1040_p4 = {{a_load_6_to_int_fu_1036_p1[30:23]}};

assign tmp_249_fu_1050_p1 = a_load_6_to_int_fu_1036_p1[22:0];

assign tmp_250_fu_1066_p2 = (notrhs6_reg_1498 | notlhs6_reg_1493);

assign tmp_252_fu_1070_p2 = (tmp_250_fu_1066_p2 & grp_fu_496_p2);

assign tmp_253_fu_1080_p4 = {{a_load_7_to_int_fu_1076_p1[30:23]}};

assign tmp_254_fu_1090_p1 = a_load_7_to_int_fu_1076_p1[22:0];

assign tmp_255_fu_1106_p2 = (notrhs7_reg_1517 | notlhs7_reg_1512);

assign tmp_257_fu_1110_p2 = (tmp_255_fu_1106_p2 & grp_fu_496_p2);

assign tmp_258_fu_1219_p5 = i_i_reg_316[1:0];

assign tmp_260_fu_1351_p5 = i_i2_reg_371[1:0];

assign tmp_261_fu_1215_p1 = i_i_reg_316[1:0];

assign tmp_82_neg_fu_986_p2 = (tmp_82_to_int_fu_982_p1 ^ 32'd2147483648);

assign tmp_82_to_int_fu_982_p1 = reg_515;

assign tmp_86_fu_876_p1 = m_load_to_int_fu_862_p1[22:0];

assign tmp_87_fu_892_p2 = (notrhs_reg_1375 | notlhs_reg_1370);

assign tmp_fu_866_p4 = {{m_load_to_int_fu_862_p1[30:23]}};

assign tmp_i2_fu_1342_p1 = i_i2_reg_371;

assign tmp_s_fu_992_p1 = tmp_82_neg_reg_1444;

endmodule //MadgwickAHRSupdate
