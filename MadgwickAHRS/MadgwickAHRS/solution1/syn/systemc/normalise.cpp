// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.3.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "normalise.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic normalise::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic normalise::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<77> normalise::ap_ST_fsm_state1 = "1";
const sc_lv<77> normalise::ap_ST_fsm_state2 = "10";
const sc_lv<77> normalise::ap_ST_fsm_state3 = "100";
const sc_lv<77> normalise::ap_ST_fsm_state4 = "1000";
const sc_lv<77> normalise::ap_ST_fsm_state5 = "10000";
const sc_lv<77> normalise::ap_ST_fsm_state6 = "100000";
const sc_lv<77> normalise::ap_ST_fsm_state7 = "1000000";
const sc_lv<77> normalise::ap_ST_fsm_state8 = "10000000";
const sc_lv<77> normalise::ap_ST_fsm_state9 = "100000000";
const sc_lv<77> normalise::ap_ST_fsm_state10 = "1000000000";
const sc_lv<77> normalise::ap_ST_fsm_state11 = "10000000000";
const sc_lv<77> normalise::ap_ST_fsm_state12 = "100000000000";
const sc_lv<77> normalise::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state53 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state54 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state55 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state56 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state57 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state58 = "1000000000000000000000000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state59 = "10000000000000000000000000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state60 = "100000000000000000000000000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state61 = "1000000000000000000000000000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state62 = "10000000000000000000000000000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state63 = "100000000000000000000000000000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state64 = "1000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state65 = "10000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state66 = "100000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state67 = "1000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state68 = "10000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state69 = "100000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state70 = "1000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state71 = "10000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state72 = "100000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state73 = "1000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state74 = "10000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state75 = "100000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state76 = "1000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<77> normalise::ap_ST_fsm_state77 = "10000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> normalise::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> normalise::ap_const_lv32_2 = "10";
const sc_lv<32> normalise::ap_const_lv32_11 = "10001";
const sc_lv<32> normalise::ap_const_lv32_3F = "111111";
const sc_lv<32> normalise::ap_const_lv32_46 = "1000110";
const sc_lv<32> normalise::ap_const_lv32_7 = "111";
const sc_lv<32> normalise::ap_const_lv32_16 = "10110";
const sc_lv<32> normalise::ap_const_lv32_25 = "100101";
const sc_lv<32> normalise::ap_const_lv32_2A = "101010";
const sc_lv<32> normalise::ap_const_lv32_2F = "101111";
const sc_lv<32> normalise::ap_const_lv32_3D = "111101";
const sc_lv<32> normalise::ap_const_lv32_4B = "1001011";
const sc_lv<32> normalise::ap_const_lv32_10 = "10000";
const sc_lv<32> normalise::ap_const_lv32_1F = "11111";
const sc_lv<32> normalise::ap_const_lv32_38 = "111000";
const sc_lv<32> normalise::ap_const_lv32_1 = "1";
const sc_lv<1> normalise::ap_const_lv1_0 = "0";
const sc_lv<32> normalise::ap_const_lv32_12 = "10010";
const sc_lv<32> normalise::ap_const_lv32_15 = "10101";
const sc_lv<32> normalise::ap_const_lv32_20 = "100000";
const sc_lv<32> normalise::ap_const_lv32_21 = "100001";
const sc_lv<32> normalise::ap_const_lv32_26 = "100110";
const sc_lv<32> normalise::ap_const_lv32_3E = "111110";
const sc_lv<32> normalise::ap_const_lv32_44 = "1000100";
const sc_lv<32> normalise::ap_const_lv32_47 = "1000111";
const sc_lv<32> normalise::ap_const_lv32_4A = "1001010";
const sc_lv<3> normalise::ap_const_lv3_1 = "1";
const sc_lv<2> normalise::ap_const_lv2_1 = "1";
const sc_lv<32> normalise::ap_const_lv32_45 = "1000101";
const sc_lv<64> normalise::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<1> normalise::ap_const_lv1_1 = "1";
const sc_lv<32> normalise::ap_const_lv32_4C = "1001100";
const sc_lv<32> normalise::ap_const_lv32_3FC00000 = "111111110000000000000000000000";
const sc_lv<32> normalise::ap_const_lv32_8 = "1000";
const sc_lv<32> normalise::ap_const_lv32_17 = "10111";
const sc_lv<32> normalise::ap_const_lv32_30 = "110000";
const sc_lv<32> normalise::ap_const_lv32_3F000000 = "111111000000000000000000000000";
const sc_lv<32> normalise::ap_const_lv32_3 = "11";
const sc_lv<32> normalise::ap_const_lv32_2B = "101011";
const sc_lv<32> normalise::ap_const_lv32_39 = "111001";
const sc_lv<32> normalise::ap_const_lv32_40 = "1000000";
const sc_lv<3> normalise::ap_const_lv3_4 = "100";
const sc_lv<32> normalise::ap_const_lv32_1E = "11110";
const sc_lv<8> normalise::ap_const_lv8_FF = "11111111";
const sc_lv<23> normalise::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<32> normalise::ap_const_lv32_5F3759DF = "1011111001101110101100111011111";
const sc_lv<2> normalise::ap_const_lv2_3 = "11";
const sc_lv<2> normalise::ap_const_lv2_0 = "00";
const sc_lv<5> normalise::ap_const_lv5_1 = "1";
const bool normalise::ap_const_boolean_1 = true;

normalise::normalise(sc_module_name name) : sc_module(name), mVcdFile(0) {
    MadgwickAHRSupdatbkb_U1 = new MadgwickAHRSupdatbkb<1,9,32,32,32>("MadgwickAHRSupdatbkb_U1");
    MadgwickAHRSupdatbkb_U1->clk(ap_clk);
    MadgwickAHRSupdatbkb_U1->reset(ap_rst);
    MadgwickAHRSupdatbkb_U1->din0(grp_fu_110_p0);
    MadgwickAHRSupdatbkb_U1->din1(reg_133);
    MadgwickAHRSupdatbkb_U1->opcode(grp_fu_110_opcode);
    MadgwickAHRSupdatbkb_U1->ce(ap_var_for_const0);
    MadgwickAHRSupdatbkb_U1->dout(grp_fu_110_p2);
    MadgwickAHRSupdatcud_U2 = new MadgwickAHRSupdatcud<1,5,32,32,32>("MadgwickAHRSupdatcud_U2");
    MadgwickAHRSupdatcud_U2->clk(ap_clk);
    MadgwickAHRSupdatcud_U2->reset(ap_rst);
    MadgwickAHRSupdatcud_U2->din0(grp_fu_116_p0);
    MadgwickAHRSupdatcud_U2->din1(grp_fu_116_p1);
    MadgwickAHRSupdatcud_U2->ce(ap_var_for_const0);
    MadgwickAHRSupdatcud_U2->dout(grp_fu_116_p2);
    MadgwickAHRSupdatdEe_U3 = new MadgwickAHRSupdatdEe<1,4,32,32,1>("MadgwickAHRSupdatdEe_U3");
    MadgwickAHRSupdatdEe_U3->clk(ap_clk);
    MadgwickAHRSupdatdEe_U3->reset(ap_rst);
    MadgwickAHRSupdatdEe_U3->din0(reg_126);
    MadgwickAHRSupdatdEe_U3->din1(ap_var_for_const1);
    MadgwickAHRSupdatdEe_U3->ce(ap_var_for_const0);
    MadgwickAHRSupdatdEe_U3->opcode(ap_var_for_const2);
    MadgwickAHRSupdatdEe_U3->dout(grp_fu_121_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_SumOfSquare_4_fu_202_p3);
    sensitive << ( reg_140 );
    sensitive << ( SumOfSquare_reg_87 );
    sensitive << ( tmp_7_fu_197_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state48);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state49);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state57);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state58);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state62);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state63);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state64);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state65);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state69);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state70);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state71);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state72);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state75);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state76);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state77);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state77 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state77 );

    SC_METHOD(thread_exitcond1_fu_146_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_76 );

    SC_METHOD(thread_exitcond_fu_236_p2);
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( i1_reg_99 );

    SC_METHOD(thread_grp_fu_110_opcode);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state49 );

    SC_METHOD(thread_grp_fu_110_p0);
    sensitive << ( SumOfSquare_reg_87 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state49 );

    SC_METHOD(thread_grp_fu_116_p0);
    sensitive << ( reg_126 );
    sensitive << ( reg_133 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( SumOfSquare_4_reg_334 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( tmp_i_6_reg_350 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state65 );

    SC_METHOD(thread_grp_fu_116_p1);
    sensitive << ( reg_126 );
    sensitive << ( reg_133 );
    sensitive << ( reg_140 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( tmp_i_6_fu_232_p1 );
    sensitive << ( tmp_i_6_reg_350 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state65 );

    SC_METHOD(thread_i_1_fu_157_p2);
    sensitive << ( i_reg_76 );

    SC_METHOD(thread_i_2_fu_247_p2);
    sensitive << ( i1_reg_99 );

    SC_METHOD(thread_in_load_2_to_int_fu_253_p1);
    sensitive << ( reg_126 );

    SC_METHOD(thread_in_load_to_int_fu_163_p1);
    sensitive << ( reg_126 );

    SC_METHOD(thread_in_r_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_146_p2 );
    sensitive << ( in_addr_2_reg_359 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( exitcond_fu_236_p2 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( tmp_1_fu_152_p1 );
    sensitive << ( tmp_9_fu_242_p1 );
    sensitive << ( ap_CS_fsm_state77 );

    SC_METHOD(thread_in_r_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_146_p2 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( exitcond_fu_236_p2 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state77 );

    SC_METHOD(thread_in_r_d0);
    sensitive << ( tmp_s_reg_369 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state77 );
    sensitive << ( storemerge_fu_292_p3 );

    SC_METHOD(thread_in_r_we0);
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state77 );

    SC_METHOD(thread_notlhs5_fu_271_p2);
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( tmp_10_fu_257_p4 );

    SC_METHOD(thread_notlhs_fu_181_p2);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( tmp_fu_167_p4 );

    SC_METHOD(thread_notrhs6_fu_277_p2);
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( tmp_16_fu_267_p1 );

    SC_METHOD(thread_notrhs_fu_187_p2);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( tmp_12_fu_177_p1 );

    SC_METHOD(thread_storemerge_fu_292_p3);
    sensitive << ( reg_133 );
    sensitive << ( tmp_14_fu_287_p2 );

    SC_METHOD(thread_tmp_10_fu_257_p4);
    sensitive << ( in_load_2_to_int_fu_253_p1 );

    SC_METHOD(thread_tmp_11_fu_283_p2);
    sensitive << ( notlhs5_reg_374 );
    sensitive << ( notrhs6_reg_379 );

    SC_METHOD(thread_tmp_12_fu_177_p1);
    sensitive << ( in_load_to_int_fu_163_p1 );

    SC_METHOD(thread_tmp_14_fu_287_p2);
    sensitive << ( tmp_13_reg_384 );
    sensitive << ( tmp_11_fu_283_p2 );

    SC_METHOD(thread_tmp_16_fu_267_p1);
    sensitive << ( in_load_2_to_int_fu_253_p1 );

    SC_METHOD(thread_tmp_1_fu_152_p1);
    sensitive << ( i_reg_76 );

    SC_METHOD(thread_tmp_4_fu_193_p2);
    sensitive << ( notlhs_reg_319 );
    sensitive << ( notrhs_reg_324 );

    SC_METHOD(thread_tmp_7_fu_197_p2);
    sensitive << ( tmp_6_reg_329 );
    sensitive << ( tmp_4_fu_193_p2 );

    SC_METHOD(thread_tmp_8_fu_223_p1);
    sensitive << ( tmp_i_reg_340 );

    SC_METHOD(thread_tmp_9_fu_242_p1);
    sensitive << ( i1_reg_99 );

    SC_METHOD(thread_tmp_fu_167_p4);
    sensitive << ( in_load_to_int_fu_163_p1 );

    SC_METHOD(thread_tmp_i_6_fu_232_p1);
    sensitive << ( y_2_reg_345 );

    SC_METHOD(thread_y_2_fu_226_p2);
    sensitive << ( tmp_8_fu_223_p1 );

    SC_METHOD(thread_y_fu_210_p1);
    sensitive << ( SumOfSquare_4_reg_334 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_146_p2 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( exitcond_fu_236_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    ap_CS_fsm = "00000000000000000000000000000000000000000000000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "normalise_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_r_address0, "(port)in_r_address0");
    sc_trace(mVcdFile, in_r_ce0, "(port)in_r_ce0");
    sc_trace(mVcdFile, in_r_we0, "(port)in_r_we0");
    sc_trace(mVcdFile, in_r_d0, "(port)in_r_d0");
    sc_trace(mVcdFile, in_r_q0, "(port)in_r_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_126, "reg_126");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state64, "ap_CS_fsm_state64");
    sc_trace(mVcdFile, ap_CS_fsm_state71, "ap_CS_fsm_state71");
    sc_trace(mVcdFile, grp_fu_116_p2, "grp_fu_116_p2");
    sc_trace(mVcdFile, reg_133, "reg_133");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, ap_CS_fsm_state43, "ap_CS_fsm_state43");
    sc_trace(mVcdFile, ap_CS_fsm_state48, "ap_CS_fsm_state48");
    sc_trace(mVcdFile, ap_CS_fsm_state62, "ap_CS_fsm_state62");
    sc_trace(mVcdFile, ap_CS_fsm_state76, "ap_CS_fsm_state76");
    sc_trace(mVcdFile, grp_fu_110_p2, "grp_fu_110_p2");
    sc_trace(mVcdFile, reg_140, "reg_140");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, ap_CS_fsm_state57, "ap_CS_fsm_state57");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, exitcond1_fu_146_p2, "exitcond1_fu_146_p2");
    sc_trace(mVcdFile, i_1_fu_157_p2, "i_1_fu_157_p2");
    sc_trace(mVcdFile, i_1_reg_314, "i_1_reg_314");
    sc_trace(mVcdFile, notlhs_fu_181_p2, "notlhs_fu_181_p2");
    sc_trace(mVcdFile, notlhs_reg_319, "notlhs_reg_319");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, notrhs_fu_187_p2, "notrhs_fu_187_p2");
    sc_trace(mVcdFile, notrhs_reg_324, "notrhs_reg_324");
    sc_trace(mVcdFile, grp_fu_121_p2, "grp_fu_121_p2");
    sc_trace(mVcdFile, tmp_6_reg_329, "tmp_6_reg_329");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, SumOfSquare_4_fu_202_p3, "SumOfSquare_4_fu_202_p3");
    sc_trace(mVcdFile, SumOfSquare_4_reg_334, "SumOfSquare_4_reg_334");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, tmp_i_reg_340, "tmp_i_reg_340");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, y_2_fu_226_p2, "y_2_fu_226_p2");
    sc_trace(mVcdFile, y_2_reg_345, "y_2_reg_345");
    sc_trace(mVcdFile, tmp_i_6_fu_232_p1, "tmp_i_6_fu_232_p1");
    sc_trace(mVcdFile, tmp_i_6_reg_350, "tmp_i_6_reg_350");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, in_addr_2_reg_359, "in_addr_2_reg_359");
    sc_trace(mVcdFile, ap_CS_fsm_state63, "ap_CS_fsm_state63");
    sc_trace(mVcdFile, exitcond_fu_236_p2, "exitcond_fu_236_p2");
    sc_trace(mVcdFile, i_2_fu_247_p2, "i_2_fu_247_p2");
    sc_trace(mVcdFile, i_2_reg_364, "i_2_reg_364");
    sc_trace(mVcdFile, tmp_s_reg_369, "tmp_s_reg_369");
    sc_trace(mVcdFile, ap_CS_fsm_state69, "ap_CS_fsm_state69");
    sc_trace(mVcdFile, notlhs5_fu_271_p2, "notlhs5_fu_271_p2");
    sc_trace(mVcdFile, notlhs5_reg_374, "notlhs5_reg_374");
    sc_trace(mVcdFile, ap_CS_fsm_state72, "ap_CS_fsm_state72");
    sc_trace(mVcdFile, notrhs6_fu_277_p2, "notrhs6_fu_277_p2");
    sc_trace(mVcdFile, notrhs6_reg_379, "notrhs6_reg_379");
    sc_trace(mVcdFile, tmp_13_reg_384, "tmp_13_reg_384");
    sc_trace(mVcdFile, ap_CS_fsm_state75, "ap_CS_fsm_state75");
    sc_trace(mVcdFile, i_reg_76, "i_reg_76");
    sc_trace(mVcdFile, SumOfSquare_reg_87, "SumOfSquare_reg_87");
    sc_trace(mVcdFile, i1_reg_99, "i1_reg_99");
    sc_trace(mVcdFile, ap_CS_fsm_state70, "ap_CS_fsm_state70");
    sc_trace(mVcdFile, tmp_1_fu_152_p1, "tmp_1_fu_152_p1");
    sc_trace(mVcdFile, tmp_9_fu_242_p1, "tmp_9_fu_242_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state77, "ap_CS_fsm_state77");
    sc_trace(mVcdFile, storemerge_fu_292_p3, "storemerge_fu_292_p3");
    sc_trace(mVcdFile, grp_fu_110_p0, "grp_fu_110_p0");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, ap_CS_fsm_state49, "ap_CS_fsm_state49");
    sc_trace(mVcdFile, grp_fu_116_p0, "grp_fu_116_p0");
    sc_trace(mVcdFile, grp_fu_116_p1, "grp_fu_116_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state44, "ap_CS_fsm_state44");
    sc_trace(mVcdFile, ap_CS_fsm_state58, "ap_CS_fsm_state58");
    sc_trace(mVcdFile, ap_CS_fsm_state65, "ap_CS_fsm_state65");
    sc_trace(mVcdFile, in_load_to_int_fu_163_p1, "in_load_to_int_fu_163_p1");
    sc_trace(mVcdFile, tmp_fu_167_p4, "tmp_fu_167_p4");
    sc_trace(mVcdFile, tmp_12_fu_177_p1, "tmp_12_fu_177_p1");
    sc_trace(mVcdFile, tmp_4_fu_193_p2, "tmp_4_fu_193_p2");
    sc_trace(mVcdFile, tmp_7_fu_197_p2, "tmp_7_fu_197_p2");
    sc_trace(mVcdFile, y_fu_210_p1, "y_fu_210_p1");
    sc_trace(mVcdFile, tmp_8_fu_223_p1, "tmp_8_fu_223_p1");
    sc_trace(mVcdFile, in_load_2_to_int_fu_253_p1, "in_load_2_to_int_fu_253_p1");
    sc_trace(mVcdFile, tmp_10_fu_257_p4, "tmp_10_fu_257_p4");
    sc_trace(mVcdFile, tmp_16_fu_267_p1, "tmp_16_fu_267_p1");
    sc_trace(mVcdFile, tmp_11_fu_283_p2, "tmp_11_fu_283_p2");
    sc_trace(mVcdFile, tmp_14_fu_287_p2, "tmp_14_fu_287_p2");
    sc_trace(mVcdFile, grp_fu_110_opcode, "grp_fu_110_opcode");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

normalise::~normalise() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete MadgwickAHRSupdatbkb_U1;
    delete MadgwickAHRSupdatcud_U2;
    delete MadgwickAHRSupdatdEe_U3;
}

void normalise::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void normalise::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_0;
}

void normalise::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv5_1;
}

void normalise::thread_ap_clk_no_reset_() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        SumOfSquare_reg_87 = grp_fu_110_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        SumOfSquare_reg_87 = ap_const_lv32_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read())) {
        i1_reg_99 = i_2_reg_364.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read())) {
        i1_reg_99 = ap_const_lv2_1;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        i_reg_76 = i_1_reg_314.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_76 = ap_const_lv3_1;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        SumOfSquare_4_reg_334 = SumOfSquare_4_fu_202_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_fu_146_p2.read(), ap_const_lv1_0))) {
        i_1_reg_314 = i_1_fu_157_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_236_p2.read()))) {
        i_2_reg_364 = i_2_fu_247_p2.read();
        in_addr_2_reg_359 =  (sc_lv<2>) (tmp_9_fu_242_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read())) {
        notlhs5_reg_374 = notlhs5_fu_271_p2.read();
        notrhs6_reg_379 = notrhs6_fu_277_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        notlhs_reg_319 = notlhs_fu_181_p2.read();
        notrhs_reg_324 = notrhs_fu_187_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()))) {
        reg_126 = in_r_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()))) {
        reg_133 = grp_fu_116_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()))) {
        reg_140 = grp_fu_110_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read())) {
        tmp_13_reg_384 = grp_fu_121_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        tmp_6_reg_329 = grp_fu_121_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        tmp_i_6_reg_350 = tmp_i_6_fu_232_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        tmp_i_reg_340 = y_fu_210_p1.read().range(31, 1);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read())) {
        tmp_s_reg_369 = grp_fu_116_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        y_2_reg_345 = y_2_fu_226_p2.read();
    }
}

void normalise::thread_SumOfSquare_4_fu_202_p3() {
    SumOfSquare_4_fu_202_p3 = (!tmp_7_fu_197_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_7_fu_197_p2.read()[0].to_bool())? SumOfSquare_reg_87.read(): reg_140.read());
}

void normalise::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void normalise::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void normalise::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void normalise::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void normalise::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void normalise::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void normalise::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void normalise::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void normalise::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void normalise::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void normalise::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[32];
}

void normalise::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void normalise::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[37];
}

void normalise::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void normalise::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void normalise::thread_ap_CS_fsm_state43() {
    ap_CS_fsm_state43 = ap_CS_fsm.read()[42];
}

void normalise::thread_ap_CS_fsm_state44() {
    ap_CS_fsm_state44 = ap_CS_fsm.read()[43];
}

void normalise::thread_ap_CS_fsm_state48() {
    ap_CS_fsm_state48 = ap_CS_fsm.read()[47];
}

void normalise::thread_ap_CS_fsm_state49() {
    ap_CS_fsm_state49 = ap_CS_fsm.read()[48];
}

void normalise::thread_ap_CS_fsm_state57() {
    ap_CS_fsm_state57 = ap_CS_fsm.read()[56];
}

void normalise::thread_ap_CS_fsm_state58() {
    ap_CS_fsm_state58 = ap_CS_fsm.read()[57];
}

void normalise::thread_ap_CS_fsm_state62() {
    ap_CS_fsm_state62 = ap_CS_fsm.read()[61];
}

void normalise::thread_ap_CS_fsm_state63() {
    ap_CS_fsm_state63 = ap_CS_fsm.read()[62];
}

void normalise::thread_ap_CS_fsm_state64() {
    ap_CS_fsm_state64 = ap_CS_fsm.read()[63];
}

void normalise::thread_ap_CS_fsm_state65() {
    ap_CS_fsm_state65 = ap_CS_fsm.read()[64];
}

void normalise::thread_ap_CS_fsm_state69() {
    ap_CS_fsm_state69 = ap_CS_fsm.read()[68];
}

void normalise::thread_ap_CS_fsm_state70() {
    ap_CS_fsm_state70 = ap_CS_fsm.read()[69];
}

void normalise::thread_ap_CS_fsm_state71() {
    ap_CS_fsm_state71 = ap_CS_fsm.read()[70];
}

void normalise::thread_ap_CS_fsm_state72() {
    ap_CS_fsm_state72 = ap_CS_fsm.read()[71];
}

void normalise::thread_ap_CS_fsm_state75() {
    ap_CS_fsm_state75 = ap_CS_fsm.read()[74];
}

void normalise::thread_ap_CS_fsm_state76() {
    ap_CS_fsm_state76 = ap_CS_fsm.read()[75];
}

void normalise::thread_ap_CS_fsm_state77() {
    ap_CS_fsm_state77 = ap_CS_fsm.read()[76];
}

void normalise::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void normalise::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void normalise::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void normalise::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void normalise::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void normalise::thread_exitcond1_fu_146_p2() {
    exitcond1_fu_146_p2 = (!i_reg_76.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_76.read() == ap_const_lv3_4);
}

void normalise::thread_exitcond_fu_236_p2() {
    exitcond_fu_236_p2 = (!i1_reg_99.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(i1_reg_99.read() == ap_const_lv2_3);
}

void normalise::thread_grp_fu_110_opcode() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        grp_fu_110_opcode = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()))) {
        grp_fu_110_opcode = ap_const_lv2_0;
    } else {
        grp_fu_110_opcode = "XX";
    }
}

void normalise::thread_grp_fu_110_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        grp_fu_110_p0 = ap_const_lv32_3FC00000;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()))) {
        grp_fu_110_p0 = SumOfSquare_reg_87.read();
    } else {
        grp_fu_110_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void normalise::thread_grp_fu_116_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read())) {
        grp_fu_116_p0 = tmp_i_6_reg_350.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()))) {
        grp_fu_116_p0 = reg_133.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        grp_fu_116_p0 = SumOfSquare_4_reg_334.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()))) {
        grp_fu_116_p0 = reg_126.read();
    } else {
        grp_fu_116_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void normalise::thread_grp_fu_116_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()))) {
        grp_fu_116_p1 = reg_133.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read())) {
        grp_fu_116_p1 = reg_140.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        grp_fu_116_p1 = tmp_i_6_reg_350.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        grp_fu_116_p1 = tmp_i_6_fu_232_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        grp_fu_116_p1 = ap_const_lv32_3F000000;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        grp_fu_116_p1 = reg_126.read();
    } else {
        grp_fu_116_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void normalise::thread_i_1_fu_157_p2() {
    i_1_fu_157_p2 = (!i_reg_76.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_reg_76.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void normalise::thread_i_2_fu_247_p2() {
    i_2_fu_247_p2 = (!i1_reg_99.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i1_reg_99.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void normalise::thread_in_load_2_to_int_fu_253_p1() {
    in_load_2_to_int_fu_253_p1 = reg_126.read();
}

void normalise::thread_in_load_to_int_fu_163_p1() {
    in_load_to_int_fu_163_p1 = reg_126.read();
}

void normalise::thread_in_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read())) {
        in_r_address0 = in_addr_2_reg_359.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_236_p2.read()))) {
        in_r_address0 =  (sc_lv<2>) (tmp_9_fu_242_p1.read());
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                 esl_seteq<1,1,1>(exitcond1_fu_146_p2.read(), ap_const_lv1_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) && 
                 esl_seteq<1,1,1>(exitcond_fu_236_p2.read(), ap_const_lv1_1)) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read()))) {
        in_r_address0 =  (sc_lv<2>) (ap_const_lv64_0);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond1_fu_146_p2.read(), ap_const_lv1_0))) {
        in_r_address0 =  (sc_lv<2>) (tmp_1_fu_152_p1.read());
    } else {
        in_r_address0 = "XX";
    }
}

void normalise::thread_in_r_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond1_fu_146_p2.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_236_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond1_fu_146_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) && 
          esl_seteq<1,1,1>(exitcond_fu_236_p2.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read()))) {
        in_r_ce0 = ap_const_logic_1;
    } else {
        in_r_ce0 = ap_const_logic_0;
    }
}

void normalise::thread_in_r_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read())) {
        in_r_d0 = storemerge_fu_292_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read())) {
        in_r_d0 = tmp_s_reg_369.read();
    } else {
        in_r_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void normalise::thread_in_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read()))) {
        in_r_we0 = ap_const_logic_1;
    } else {
        in_r_we0 = ap_const_logic_0;
    }
}

void normalise::thread_notlhs5_fu_271_p2() {
    notlhs5_fu_271_p2 = (!tmp_10_fu_257_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_10_fu_257_p4.read() != ap_const_lv8_FF);
}

void normalise::thread_notlhs_fu_181_p2() {
    notlhs_fu_181_p2 = (!tmp_fu_167_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_fu_167_p4.read() != ap_const_lv8_FF);
}

void normalise::thread_notrhs6_fu_277_p2() {
    notrhs6_fu_277_p2 = (!tmp_16_fu_267_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_16_fu_267_p1.read() == ap_const_lv23_0);
}

void normalise::thread_notrhs_fu_187_p2() {
    notrhs_fu_187_p2 = (!tmp_12_fu_177_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_12_fu_177_p1.read() == ap_const_lv23_0);
}

void normalise::thread_storemerge_fu_292_p3() {
    storemerge_fu_292_p3 = (!tmp_14_fu_287_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_14_fu_287_p2.read()[0].to_bool())? ap_const_lv32_0: reg_133.read());
}

void normalise::thread_tmp_10_fu_257_p4() {
    tmp_10_fu_257_p4 = in_load_2_to_int_fu_253_p1.read().range(30, 23);
}

void normalise::thread_tmp_11_fu_283_p2() {
    tmp_11_fu_283_p2 = (notrhs6_reg_379.read() | notlhs5_reg_374.read());
}

void normalise::thread_tmp_12_fu_177_p1() {
    tmp_12_fu_177_p1 = in_load_to_int_fu_163_p1.read().range(23-1, 0);
}

void normalise::thread_tmp_14_fu_287_p2() {
    tmp_14_fu_287_p2 = (tmp_11_fu_283_p2.read() & tmp_13_reg_384.read());
}

void normalise::thread_tmp_16_fu_267_p1() {
    tmp_16_fu_267_p1 = in_load_2_to_int_fu_253_p1.read().range(23-1, 0);
}

void normalise::thread_tmp_1_fu_152_p1() {
    tmp_1_fu_152_p1 = esl_zext<64,3>(i_reg_76.read());
}

void normalise::thread_tmp_4_fu_193_p2() {
    tmp_4_fu_193_p2 = (notrhs_reg_324.read() | notlhs_reg_319.read());
}

void normalise::thread_tmp_7_fu_197_p2() {
    tmp_7_fu_197_p2 = (tmp_4_fu_193_p2.read() & tmp_6_reg_329.read());
}

void normalise::thread_tmp_8_fu_223_p1() {
    tmp_8_fu_223_p1 = esl_zext<32,31>(tmp_i_reg_340.read());
}

void normalise::thread_tmp_9_fu_242_p1() {
    tmp_9_fu_242_p1 = esl_zext<64,2>(i1_reg_99.read());
}

void normalise::thread_tmp_fu_167_p4() {
    tmp_fu_167_p4 = in_load_to_int_fu_163_p1.read().range(30, 23);
}

void normalise::thread_tmp_i_6_fu_232_p1() {
    tmp_i_6_fu_232_p1 = y_2_reg_345.read();
}

void normalise::thread_y_2_fu_226_p2() {
    y_2_fu_226_p2 = (!ap_const_lv32_5F3759DF.is_01() || !tmp_8_fu_223_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_5F3759DF) - sc_biguint<32>(tmp_8_fu_223_p1.read()));
}

void normalise::thread_y_fu_210_p1() {
    y_fu_210_p1 = SumOfSquare_4_reg_334.read();
}

void normalise::thread_ap_NS_fsm() {
    if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state1))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state1;
        }
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state2))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_fu_146_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state18;
        } else {
            ap_NS_fsm = ap_ST_fsm_state3;
        }
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state3))
    {
        ap_NS_fsm = ap_ST_fsm_state4;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state4))
    {
        ap_NS_fsm = ap_ST_fsm_state5;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state5))
    {
        ap_NS_fsm = ap_ST_fsm_state6;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state6))
    {
        ap_NS_fsm = ap_ST_fsm_state7;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state7))
    {
        ap_NS_fsm = ap_ST_fsm_state8;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state8))
    {
        ap_NS_fsm = ap_ST_fsm_state9;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state9))
    {
        ap_NS_fsm = ap_ST_fsm_state10;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state10))
    {
        ap_NS_fsm = ap_ST_fsm_state11;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state11))
    {
        ap_NS_fsm = ap_ST_fsm_state12;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state12))
    {
        ap_NS_fsm = ap_ST_fsm_state13;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state13))
    {
        ap_NS_fsm = ap_ST_fsm_state14;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state14))
    {
        ap_NS_fsm = ap_ST_fsm_state15;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state15))
    {
        ap_NS_fsm = ap_ST_fsm_state16;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state16))
    {
        ap_NS_fsm = ap_ST_fsm_state17;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state17))
    {
        ap_NS_fsm = ap_ST_fsm_state2;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state18))
    {
        ap_NS_fsm = ap_ST_fsm_state19;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state19))
    {
        ap_NS_fsm = ap_ST_fsm_state20;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state20))
    {
        ap_NS_fsm = ap_ST_fsm_state21;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state21))
    {
        ap_NS_fsm = ap_ST_fsm_state22;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state22))
    {
        ap_NS_fsm = ap_ST_fsm_state23;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state23))
    {
        ap_NS_fsm = ap_ST_fsm_state24;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state24))
    {
        ap_NS_fsm = ap_ST_fsm_state25;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state25))
    {
        ap_NS_fsm = ap_ST_fsm_state26;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state26))
    {
        ap_NS_fsm = ap_ST_fsm_state27;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state27))
    {
        ap_NS_fsm = ap_ST_fsm_state28;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state28))
    {
        ap_NS_fsm = ap_ST_fsm_state29;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state29))
    {
        ap_NS_fsm = ap_ST_fsm_state30;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state30))
    {
        ap_NS_fsm = ap_ST_fsm_state31;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state31))
    {
        ap_NS_fsm = ap_ST_fsm_state32;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state32))
    {
        ap_NS_fsm = ap_ST_fsm_state33;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state33))
    {
        ap_NS_fsm = ap_ST_fsm_state34;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state34))
    {
        ap_NS_fsm = ap_ST_fsm_state35;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state35))
    {
        ap_NS_fsm = ap_ST_fsm_state36;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state36))
    {
        ap_NS_fsm = ap_ST_fsm_state37;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state37))
    {
        ap_NS_fsm = ap_ST_fsm_state38;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state38))
    {
        ap_NS_fsm = ap_ST_fsm_state39;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state39))
    {
        ap_NS_fsm = ap_ST_fsm_state40;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state40))
    {
        ap_NS_fsm = ap_ST_fsm_state41;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state41))
    {
        ap_NS_fsm = ap_ST_fsm_state42;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state42))
    {
        ap_NS_fsm = ap_ST_fsm_state43;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state43))
    {
        ap_NS_fsm = ap_ST_fsm_state44;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state44))
    {
        ap_NS_fsm = ap_ST_fsm_state45;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state45))
    {
        ap_NS_fsm = ap_ST_fsm_state46;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state46))
    {
        ap_NS_fsm = ap_ST_fsm_state47;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state47))
    {
        ap_NS_fsm = ap_ST_fsm_state48;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state48))
    {
        ap_NS_fsm = ap_ST_fsm_state49;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state49))
    {
        ap_NS_fsm = ap_ST_fsm_state50;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state50))
    {
        ap_NS_fsm = ap_ST_fsm_state51;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state51))
    {
        ap_NS_fsm = ap_ST_fsm_state52;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state52))
    {
        ap_NS_fsm = ap_ST_fsm_state53;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state53))
    {
        ap_NS_fsm = ap_ST_fsm_state54;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state54))
    {
        ap_NS_fsm = ap_ST_fsm_state55;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state55))
    {
        ap_NS_fsm = ap_ST_fsm_state56;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state56))
    {
        ap_NS_fsm = ap_ST_fsm_state57;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state57))
    {
        ap_NS_fsm = ap_ST_fsm_state58;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state58))
    {
        ap_NS_fsm = ap_ST_fsm_state59;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state59))
    {
        ap_NS_fsm = ap_ST_fsm_state60;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state60))
    {
        ap_NS_fsm = ap_ST_fsm_state61;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state61))
    {
        ap_NS_fsm = ap_ST_fsm_state62;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state62))
    {
        ap_NS_fsm = ap_ST_fsm_state63;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state63))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) && esl_seteq<1,1,1>(exitcond_fu_236_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state71;
        } else {
            ap_NS_fsm = ap_ST_fsm_state64;
        }
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state64))
    {
        ap_NS_fsm = ap_ST_fsm_state65;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state65))
    {
        ap_NS_fsm = ap_ST_fsm_state66;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state66))
    {
        ap_NS_fsm = ap_ST_fsm_state67;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state67))
    {
        ap_NS_fsm = ap_ST_fsm_state68;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state68))
    {
        ap_NS_fsm = ap_ST_fsm_state69;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state69))
    {
        ap_NS_fsm = ap_ST_fsm_state70;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state70))
    {
        ap_NS_fsm = ap_ST_fsm_state63;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state71))
    {
        ap_NS_fsm = ap_ST_fsm_state72;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state72))
    {
        ap_NS_fsm = ap_ST_fsm_state73;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state73))
    {
        ap_NS_fsm = ap_ST_fsm_state74;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state74))
    {
        ap_NS_fsm = ap_ST_fsm_state75;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state75))
    {
        ap_NS_fsm = ap_ST_fsm_state76;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state76))
    {
        ap_NS_fsm = ap_ST_fsm_state77;
    }
    else if (esl_seteq<1,77,77>(ap_CS_fsm.read(), ap_ST_fsm_state77))
    {
        ap_NS_fsm = ap_ST_fsm_state1;
    }
    else
    {
        ap_NS_fsm =  (sc_lv<77>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}
}

