// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.3.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "normalise_1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic normalise_1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic normalise_1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<75> normalise_1::ap_ST_fsm_state1 = "1";
const sc_lv<75> normalise_1::ap_ST_fsm_state2 = "10";
const sc_lv<75> normalise_1::ap_ST_fsm_state3 = "100";
const sc_lv<75> normalise_1::ap_ST_fsm_state4 = "1000";
const sc_lv<75> normalise_1::ap_ST_fsm_state5 = "10000";
const sc_lv<75> normalise_1::ap_ST_fsm_state6 = "100000";
const sc_lv<75> normalise_1::ap_ST_fsm_state7 = "1000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state8 = "10000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state9 = "100000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state10 = "1000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state11 = "10000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state12 = "100000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state53 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state54 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state55 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state56 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state57 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state58 = "1000000000000000000000000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state59 = "10000000000000000000000000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state60 = "100000000000000000000000000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state61 = "1000000000000000000000000000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state62 = "10000000000000000000000000000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state63 = "100000000000000000000000000000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state64 = "1000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state65 = "10000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state66 = "100000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state67 = "1000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state68 = "10000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state69 = "100000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state70 = "1000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state71 = "10000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state72 = "100000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state73 = "1000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state74 = "10000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<75> normalise_1::ap_ST_fsm_state75 = "100000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> normalise_1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> normalise_1::ap_const_lv32_6 = "110";
const sc_lv<32> normalise_1::ap_const_lv32_17 = "10111";
const sc_lv<1> normalise_1::ap_const_lv1_0 = "0";
const sc_lv<32> normalise_1::ap_const_lv32_26 = "100110";
const sc_lv<32> normalise_1::ap_const_lv32_2B = "101011";
const sc_lv<32> normalise_1::ap_const_lv32_30 = "110000";
const sc_lv<32> normalise_1::ap_const_lv32_3E = "111110";
const sc_lv<32> normalise_1::ap_const_lv32_49 = "1001001";
const sc_lv<32> normalise_1::ap_const_lv32_F = "1111";
const sc_lv<32> normalise_1::ap_const_lv32_20 = "100000";
const sc_lv<32> normalise_1::ap_const_lv32_39 = "111001";
const sc_lv<32> normalise_1::ap_const_lv32_1 = "1";
const sc_lv<32> normalise_1::ap_const_lv32_12 = "10010";
const sc_lv<32> normalise_1::ap_const_lv32_21 = "100001";
const sc_lv<32> normalise_1::ap_const_lv32_22 = "100010";
const sc_lv<32> normalise_1::ap_const_lv32_27 = "100111";
const sc_lv<32> normalise_1::ap_const_lv32_3F = "111111";
const sc_lv<32> normalise_1::ap_const_lv32_44 = "1000100";
const sc_lv<32> normalise_1::ap_const_lv32_45 = "1000101";
const sc_lv<3> normalise_1::ap_const_lv3_1 = "1";
const sc_lv<2> normalise_1::ap_const_lv2_1 = "1";
const sc_lv<32> normalise_1::ap_const_lv32_3FC00000 = "111111110000000000000000000000";
const sc_lv<32> normalise_1::ap_const_lv32_7 = "111";
const sc_lv<32> normalise_1::ap_const_lv32_18 = "11000";
const sc_lv<32> normalise_1::ap_const_lv32_31 = "110001";
const sc_lv<32> normalise_1::ap_const_lv32_3F000000 = "111111000000000000000000000000";
const sc_lv<32> normalise_1::ap_const_lv32_2 = "10";
const sc_lv<32> normalise_1::ap_const_lv32_13 = "10011";
const sc_lv<32> normalise_1::ap_const_lv32_2C = "101100";
const sc_lv<32> normalise_1::ap_const_lv32_3A = "111010";
const sc_lv<32> normalise_1::ap_const_lv32_40 = "1000000";
const sc_lv<3> normalise_1::ap_const_lv3_4 = "100";
const sc_lv<2> normalise_1::ap_const_lv2_2 = "10";
const sc_lv<32> normalise_1::ap_const_lv32_1E = "11110";
const sc_lv<8> normalise_1::ap_const_lv8_FF = "11111111";
const sc_lv<23> normalise_1::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<32> normalise_1::ap_const_lv32_1F = "11111";
const sc_lv<32> normalise_1::ap_const_lv32_5F3759DF = "1011111001101110101100111011111";
const sc_lv<2> normalise_1::ap_const_lv2_3 = "11";
const sc_lv<32> normalise_1::ap_const_lv32_4A = "1001010";
const sc_lv<2> normalise_1::ap_const_lv2_0 = "00";
const sc_lv<5> normalise_1::ap_const_lv5_1 = "1";
const sc_lv<1> normalise_1::ap_const_lv1_1 = "1";
const bool normalise_1::ap_const_boolean_1 = true;

normalise_1::normalise_1(sc_module_name name) : sc_module(name), mVcdFile(0) {
    MadgwickAHRSupdatbkb_U8 = new MadgwickAHRSupdatbkb<1,9,32,32,32>("MadgwickAHRSupdatbkb_U8");
    MadgwickAHRSupdatbkb_U8->clk(ap_clk);
    MadgwickAHRSupdatbkb_U8->reset(ap_rst);
    MadgwickAHRSupdatbkb_U8->din0(grp_fu_136_p0);
    MadgwickAHRSupdatbkb_U8->din1(reg_152);
    MadgwickAHRSupdatbkb_U8->opcode(grp_fu_136_opcode);
    MadgwickAHRSupdatbkb_U8->ce(ap_var_for_const0);
    MadgwickAHRSupdatbkb_U8->dout(grp_fu_136_p2);
    MadgwickAHRSupdatcud_U9 = new MadgwickAHRSupdatcud<1,5,32,32,32>("MadgwickAHRSupdatcud_U9");
    MadgwickAHRSupdatcud_U9->clk(ap_clk);
    MadgwickAHRSupdatcud_U9->reset(ap_rst);
    MadgwickAHRSupdatcud_U9->din0(grp_fu_142_p0);
    MadgwickAHRSupdatcud_U9->din1(grp_fu_142_p1);
    MadgwickAHRSupdatcud_U9->ce(ap_var_for_const0);
    MadgwickAHRSupdatcud_U9->dout(grp_fu_142_p2);
    MadgwickAHRSupdatdEe_U10 = new MadgwickAHRSupdatdEe<1,4,32,32,1>("MadgwickAHRSupdatdEe_U10");
    MadgwickAHRSupdatdEe_U10->clk(ap_clk);
    MadgwickAHRSupdatdEe_U10->reset(ap_rst);
    MadgwickAHRSupdatdEe_U10->din0(in_0_read);
    MadgwickAHRSupdatdEe_U10->din1(ap_var_for_const1);
    MadgwickAHRSupdatdEe_U10->ce(ap_var_for_const0);
    MadgwickAHRSupdatdEe_U10->opcode(ap_var_for_const2);
    MadgwickAHRSupdatdEe_U10->dout(grp_fu_147_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_SumOfSquare_3_fu_247_p3);
    sensitive << ( tmp_7_reg_382 );
    sensitive << ( reg_159 );
    sensitive << ( SumOfSquare_reg_93 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state49);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state50);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state58);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state59);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state63);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state64);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state65);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state69);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state70);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state74);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state75);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state75 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state75 );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( in_reg_115 );
    sensitive << ( ap_CS_fsm_state75 );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( in2_reg_105 );
    sensitive << ( ap_CS_fsm_state75 );

    SC_METHOD(thread_ap_return_2);
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( in_0_write_assign_fu_318_p3 );

    SC_METHOD(thread_cond_fu_286_p2);
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( exitcond_fu_280_p2 );
    sensitive << ( i1_reg_125 );

    SC_METHOD(thread_exitcond1_fu_165_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_82 );

    SC_METHOD(thread_exitcond_fu_280_p2);
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( i1_reg_125 );

    SC_METHOD(thread_grp_fu_136_opcode);
    sensitive << ( tmp_7_reg_382 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state50 );

    SC_METHOD(thread_grp_fu_136_p0);
    sensitive << ( SumOfSquare_reg_93 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state50 );

    SC_METHOD(thread_grp_fu_142_p0);
    sensitive << ( in_0_read );
    sensitive << ( reg_152 );
    sensitive << ( in_load_1_phi_reg_371 );
    sensitive << ( SumOfSquare_3_reg_388 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( tmp_i_4_reg_404 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( in_load_3_phi_reg_419 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state65 );

    SC_METHOD(thread_grp_fu_142_p1);
    sensitive << ( in_0_read );
    sensitive << ( reg_152 );
    sensitive << ( reg_159 );
    sensitive << ( in_load_1_phi_reg_371 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( tmp_i_4_fu_276_p1 );
    sensitive << ( tmp_i_4_reg_404 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state65 );

    SC_METHOD(thread_i_1_fu_200_p2);
    sensitive << ( i_reg_82 );

    SC_METHOD(thread_i_2_fu_300_p2);
    sensitive << ( i1_reg_125 );

    SC_METHOD(thread_in12_1_fu_312_p3);
    sensitive << ( cond_reg_413 );
    sensitive << ( tmp_s_reg_429 );
    sensitive << ( in_reg_115 );

    SC_METHOD(thread_in2_1_fu_306_p3);
    sensitive << ( cond_reg_413 );
    sensitive << ( tmp_s_reg_429 );
    sensitive << ( in2_reg_105 );

    SC_METHOD(thread_in_0_read_to_int_fu_206_p1);
    sensitive << ( in_0_read );

    SC_METHOD(thread_in_0_write_assign_fu_318_p3);
    sensitive << ( reg_152 );
    sensitive << ( tmp_7_reg_382 );

    SC_METHOD(thread_in_load_1_phi_fu_193_p3);
    sensitive << ( in_1_read );
    sensitive << ( sel_tmp2_fu_187_p2 );
    sensitive << ( sel_tmp1_fu_181_p3 );

    SC_METHOD(thread_in_load_3_phi_fu_292_p3);
    sensitive << ( cond_fu_286_p2 );
    sensitive << ( in2_reg_105 );
    sensitive << ( in_reg_115 );

    SC_METHOD(thread_notlhs_fu_223_p2);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( tmp_fu_209_p4 );

    SC_METHOD(thread_notrhs_fu_229_p2);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( tmp_1_fu_219_p1 );

    SC_METHOD(thread_sel_tmp1_fu_181_p3);
    sensitive << ( in_2_read );
    sensitive << ( in_3_read );
    sensitive << ( sel_tmp_fu_175_p2 );

    SC_METHOD(thread_sel_tmp2_fu_187_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_165_p2 );
    sensitive << ( tmp_9_fu_171_p1 );

    SC_METHOD(thread_sel_tmp_fu_175_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_165_p2 );
    sensitive << ( tmp_9_fu_171_p1 );

    SC_METHOD(thread_tmp_1_fu_219_p1);
    sensitive << ( in_0_read_to_int_fu_206_p1 );

    SC_METHOD(thread_tmp_4_fu_235_p2);
    sensitive << ( notrhs_fu_229_p2 );
    sensitive << ( notlhs_fu_223_p2 );

    SC_METHOD(thread_tmp_7_fu_241_p2);
    sensitive << ( tmp_4_fu_235_p2 );
    sensitive << ( grp_fu_147_p2 );

    SC_METHOD(thread_tmp_8_fu_267_p1);
    sensitive << ( tmp_i_reg_394 );

    SC_METHOD(thread_tmp_9_fu_171_p1);
    sensitive << ( i_reg_82 );

    SC_METHOD(thread_tmp_fu_209_p4);
    sensitive << ( in_0_read_to_int_fu_206_p1 );

    SC_METHOD(thread_tmp_i_4_fu_276_p1);
    sensitive << ( y_1_reg_399 );

    SC_METHOD(thread_y_1_fu_270_p2);
    sensitive << ( tmp_8_fu_267_p1 );

    SC_METHOD(thread_y_fu_254_p1);
    sensitive << ( SumOfSquare_3_reg_388 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_165_p2 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( exitcond_fu_280_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    ap_CS_fsm = "000000000000000000000000000000000000000000000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "normalise_1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_0_read, "(port)in_0_read");
    sc_trace(mVcdFile, in_1_read, "(port)in_1_read");
    sc_trace(mVcdFile, in_2_read, "(port)in_2_read");
    sc_trace(mVcdFile, in_3_read, "(port)in_3_read");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
    sc_trace(mVcdFile, ap_return_2, "(port)ap_return_2");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, grp_fu_142_p2, "grp_fu_142_p2");
    sc_trace(mVcdFile, reg_152, "reg_152");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, tmp_7_reg_382, "tmp_7_reg_382");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, ap_CS_fsm_state44, "ap_CS_fsm_state44");
    sc_trace(mVcdFile, ap_CS_fsm_state49, "ap_CS_fsm_state49");
    sc_trace(mVcdFile, ap_CS_fsm_state63, "ap_CS_fsm_state63");
    sc_trace(mVcdFile, ap_CS_fsm_state74, "ap_CS_fsm_state74");
    sc_trace(mVcdFile, grp_fu_136_p2, "grp_fu_136_p2");
    sc_trace(mVcdFile, reg_159, "reg_159");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, ap_CS_fsm_state58, "ap_CS_fsm_state58");
    sc_trace(mVcdFile, in_load_1_phi_fu_193_p3, "in_load_1_phi_fu_193_p3");
    sc_trace(mVcdFile, in_load_1_phi_reg_371, "in_load_1_phi_reg_371");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, exitcond1_fu_165_p2, "exitcond1_fu_165_p2");
    sc_trace(mVcdFile, i_1_fu_200_p2, "i_1_fu_200_p2");
    sc_trace(mVcdFile, i_1_reg_377, "i_1_reg_377");
    sc_trace(mVcdFile, tmp_7_fu_241_p2, "tmp_7_fu_241_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, SumOfSquare_3_fu_247_p3, "SumOfSquare_3_fu_247_p3");
    sc_trace(mVcdFile, SumOfSquare_3_reg_388, "SumOfSquare_3_reg_388");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, tmp_i_reg_394, "tmp_i_reg_394");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, y_1_fu_270_p2, "y_1_fu_270_p2");
    sc_trace(mVcdFile, y_1_reg_399, "y_1_reg_399");
    sc_trace(mVcdFile, tmp_i_4_fu_276_p1, "tmp_i_4_fu_276_p1");
    sc_trace(mVcdFile, tmp_i_4_reg_404, "tmp_i_4_reg_404");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, cond_fu_286_p2, "cond_fu_286_p2");
    sc_trace(mVcdFile, cond_reg_413, "cond_reg_413");
    sc_trace(mVcdFile, ap_CS_fsm_state64, "ap_CS_fsm_state64");
    sc_trace(mVcdFile, exitcond_fu_280_p2, "exitcond_fu_280_p2");
    sc_trace(mVcdFile, in_load_3_phi_fu_292_p3, "in_load_3_phi_fu_292_p3");
    sc_trace(mVcdFile, in_load_3_phi_reg_419, "in_load_3_phi_reg_419");
    sc_trace(mVcdFile, i_2_fu_300_p2, "i_2_fu_300_p2");
    sc_trace(mVcdFile, i_2_reg_424, "i_2_reg_424");
    sc_trace(mVcdFile, tmp_s_reg_429, "tmp_s_reg_429");
    sc_trace(mVcdFile, ap_CS_fsm_state69, "ap_CS_fsm_state69");
    sc_trace(mVcdFile, in2_1_fu_306_p3, "in2_1_fu_306_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state70, "ap_CS_fsm_state70");
    sc_trace(mVcdFile, in12_1_fu_312_p3, "in12_1_fu_312_p3");
    sc_trace(mVcdFile, i_reg_82, "i_reg_82");
    sc_trace(mVcdFile, SumOfSquare_reg_93, "SumOfSquare_reg_93");
    sc_trace(mVcdFile, in2_reg_105, "in2_reg_105");
    sc_trace(mVcdFile, in_reg_115, "in_reg_115");
    sc_trace(mVcdFile, i1_reg_125, "i1_reg_125");
    sc_trace(mVcdFile, grp_fu_136_p0, "grp_fu_136_p0");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, ap_CS_fsm_state50, "ap_CS_fsm_state50");
    sc_trace(mVcdFile, grp_fu_142_p0, "grp_fu_142_p0");
    sc_trace(mVcdFile, grp_fu_142_p1, "grp_fu_142_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, ap_CS_fsm_state59, "ap_CS_fsm_state59");
    sc_trace(mVcdFile, ap_CS_fsm_state65, "ap_CS_fsm_state65");
    sc_trace(mVcdFile, tmp_9_fu_171_p1, "tmp_9_fu_171_p1");
    sc_trace(mVcdFile, sel_tmp_fu_175_p2, "sel_tmp_fu_175_p2");
    sc_trace(mVcdFile, sel_tmp2_fu_187_p2, "sel_tmp2_fu_187_p2");
    sc_trace(mVcdFile, sel_tmp1_fu_181_p3, "sel_tmp1_fu_181_p3");
    sc_trace(mVcdFile, in_0_read_to_int_fu_206_p1, "in_0_read_to_int_fu_206_p1");
    sc_trace(mVcdFile, tmp_fu_209_p4, "tmp_fu_209_p4");
    sc_trace(mVcdFile, tmp_1_fu_219_p1, "tmp_1_fu_219_p1");
    sc_trace(mVcdFile, notrhs_fu_229_p2, "notrhs_fu_229_p2");
    sc_trace(mVcdFile, notlhs_fu_223_p2, "notlhs_fu_223_p2");
    sc_trace(mVcdFile, tmp_4_fu_235_p2, "tmp_4_fu_235_p2");
    sc_trace(mVcdFile, grp_fu_147_p2, "grp_fu_147_p2");
    sc_trace(mVcdFile, y_fu_254_p1, "y_fu_254_p1");
    sc_trace(mVcdFile, tmp_8_fu_267_p1, "tmp_8_fu_267_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state75, "ap_CS_fsm_state75");
    sc_trace(mVcdFile, in_0_write_assign_fu_318_p3, "in_0_write_assign_fu_318_p3");
    sc_trace(mVcdFile, grp_fu_136_opcode, "grp_fu_136_opcode");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

normalise_1::~normalise_1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete MadgwickAHRSupdatbkb_U8;
    delete MadgwickAHRSupdatcud_U9;
    delete MadgwickAHRSupdatdEe_U10;
}

void normalise_1::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void normalise_1::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_0;
}

void normalise_1::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv5_1;
}

void normalise_1::thread_ap_clk_no_reset_() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        SumOfSquare_reg_93 = grp_fu_136_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        SumOfSquare_reg_93 = ap_const_lv32_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read())) {
        i1_reg_125 = i_2_reg_424.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read())) {
        i1_reg_125 = ap_const_lv2_1;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        i_reg_82 = i_1_reg_377.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_82 = ap_const_lv3_1;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read())) {
        in2_reg_105 = in2_1_fu_306_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read())) {
        in2_reg_105 = in_2_read.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read())) {
        in_reg_115 = in12_1_fu_312_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read())) {
        in_reg_115 = in_1_read.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        SumOfSquare_3_reg_388 = SumOfSquare_3_fu_247_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_280_p2.read()))) {
        cond_reg_413 = cond_fu_286_p2.read();
        i_2_reg_424 = i_2_fu_300_p2.read();
        in_load_3_phi_reg_419 = in_load_3_phi_fu_292_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_165_p2.read()))) {
        i_1_reg_377 = i_1_fu_200_p2.read();
        in_load_1_phi_reg_371 = in_load_1_phi_fu_193_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
  esl_seteq<1,1,1>(tmp_7_reg_382.read(), ap_const_lv1_0)) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || (esl_seteq<1,1,1>(tmp_7_reg_382.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read())))) {
        reg_152 = grp_fu_142_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || (esl_seteq<1,1,1>(tmp_7_reg_382.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()))) {
        reg_159 = grp_fu_136_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        tmp_7_reg_382 = tmp_7_fu_241_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        tmp_i_4_reg_404 = tmp_i_4_fu_276_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        tmp_i_reg_394 = y_fu_254_p1.read().range(31, 1);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read())) {
        tmp_s_reg_429 = grp_fu_142_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        y_1_reg_399 = y_1_fu_270_p2.read();
    }
}

void normalise_1::thread_SumOfSquare_3_fu_247_p3() {
    SumOfSquare_3_fu_247_p3 = (!tmp_7_reg_382.read()[0].is_01())? sc_lv<32>(): ((tmp_7_reg_382.read()[0].to_bool())? SumOfSquare_reg_93.read(): reg_159.read());
}

void normalise_1::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void normalise_1::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void normalise_1::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void normalise_1::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void normalise_1::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void normalise_1::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void normalise_1::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void normalise_1::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void normalise_1::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[32];
}

void normalise_1::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void normalise_1::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void normalise_1::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void normalise_1::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[39];
}

void normalise_1::thread_ap_CS_fsm_state44() {
    ap_CS_fsm_state44 = ap_CS_fsm.read()[43];
}

void normalise_1::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read()[44];
}

void normalise_1::thread_ap_CS_fsm_state49() {
    ap_CS_fsm_state49 = ap_CS_fsm.read()[48];
}

void normalise_1::thread_ap_CS_fsm_state50() {
    ap_CS_fsm_state50 = ap_CS_fsm.read()[49];
}

void normalise_1::thread_ap_CS_fsm_state58() {
    ap_CS_fsm_state58 = ap_CS_fsm.read()[57];
}

void normalise_1::thread_ap_CS_fsm_state59() {
    ap_CS_fsm_state59 = ap_CS_fsm.read()[58];
}

void normalise_1::thread_ap_CS_fsm_state63() {
    ap_CS_fsm_state63 = ap_CS_fsm.read()[62];
}

void normalise_1::thread_ap_CS_fsm_state64() {
    ap_CS_fsm_state64 = ap_CS_fsm.read()[63];
}

void normalise_1::thread_ap_CS_fsm_state65() {
    ap_CS_fsm_state65 = ap_CS_fsm.read()[64];
}

void normalise_1::thread_ap_CS_fsm_state69() {
    ap_CS_fsm_state69 = ap_CS_fsm.read()[68];
}

void normalise_1::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void normalise_1::thread_ap_CS_fsm_state70() {
    ap_CS_fsm_state70 = ap_CS_fsm.read()[69];
}

void normalise_1::thread_ap_CS_fsm_state74() {
    ap_CS_fsm_state74 = ap_CS_fsm.read()[73];
}

void normalise_1::thread_ap_CS_fsm_state75() {
    ap_CS_fsm_state75 = ap_CS_fsm.read()[74];
}

void normalise_1::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void normalise_1::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void normalise_1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void normalise_1::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void normalise_1::thread_ap_return_0() {
    ap_return_0 = in_reg_115.read();
}

void normalise_1::thread_ap_return_1() {
    ap_return_1 = in2_reg_105.read();
}

void normalise_1::thread_ap_return_2() {
    ap_return_2 = in_0_write_assign_fu_318_p3.read();
}

void normalise_1::thread_cond_fu_286_p2() {
    cond_fu_286_p2 = (!i1_reg_125.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(i1_reg_125.read() == ap_const_lv2_1);
}

void normalise_1::thread_exitcond1_fu_165_p2() {
    exitcond1_fu_165_p2 = (!i_reg_82.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_82.read() == ap_const_lv3_4);
}

void normalise_1::thread_exitcond_fu_280_p2() {
    exitcond_fu_280_p2 = (!i1_reg_125.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(i1_reg_125.read() == ap_const_lv2_3);
}

void normalise_1::thread_grp_fu_136_opcode() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read())) {
        grp_fu_136_opcode = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                (esl_seteq<1,1,1>(tmp_7_reg_382.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())))) {
        grp_fu_136_opcode = ap_const_lv2_0;
    } else {
        grp_fu_136_opcode = "XX";
    }
}

void normalise_1::thread_grp_fu_136_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read())) {
        grp_fu_136_p0 = ap_const_lv32_3FC00000;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        grp_fu_136_p0 = SumOfSquare_reg_93.read();
    } else {
        grp_fu_136_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void normalise_1::thread_grp_fu_142_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read())) {
        grp_fu_142_p0 = in_load_3_phi_reg_419.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read())) {
        grp_fu_142_p0 = tmp_i_4_reg_404.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()))) {
        grp_fu_142_p0 = reg_152.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        grp_fu_142_p0 = SumOfSquare_3_reg_388.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        grp_fu_142_p0 = in_0_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_142_p0 = in_load_1_phi_reg_371.read();
    } else {
        grp_fu_142_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void normalise_1::thread_grp_fu_142_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read())) {
        grp_fu_142_p1 = reg_152.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read())) {
        grp_fu_142_p1 = reg_159.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        grp_fu_142_p1 = tmp_i_4_reg_404.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        grp_fu_142_p1 = tmp_i_4_fu_276_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        grp_fu_142_p1 = ap_const_lv32_3F000000;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        grp_fu_142_p1 = in_0_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_142_p1 = in_load_1_phi_reg_371.read();
    } else {
        grp_fu_142_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void normalise_1::thread_i_1_fu_200_p2() {
    i_1_fu_200_p2 = (!ap_const_lv3_1.is_01() || !i_reg_82.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_1) + sc_biguint<3>(i_reg_82.read()));
}

void normalise_1::thread_i_2_fu_300_p2() {
    i_2_fu_300_p2 = (!i1_reg_125.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i1_reg_125.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void normalise_1::thread_in12_1_fu_312_p3() {
    in12_1_fu_312_p3 = (!cond_reg_413.read()[0].is_01())? sc_lv<32>(): ((cond_reg_413.read()[0].to_bool())? tmp_s_reg_429.read(): in_reg_115.read());
}

void normalise_1::thread_in2_1_fu_306_p3() {
    in2_1_fu_306_p3 = (!cond_reg_413.read()[0].is_01())? sc_lv<32>(): ((cond_reg_413.read()[0].to_bool())? in2_reg_105.read(): tmp_s_reg_429.read());
}

void normalise_1::thread_in_0_read_to_int_fu_206_p1() {
    in_0_read_to_int_fu_206_p1 = in_0_read.read();
}

void normalise_1::thread_in_0_write_assign_fu_318_p3() {
    in_0_write_assign_fu_318_p3 = (!tmp_7_reg_382.read()[0].is_01())? sc_lv<32>(): ((tmp_7_reg_382.read()[0].to_bool())? ap_const_lv32_0: reg_152.read());
}

void normalise_1::thread_in_load_1_phi_fu_193_p3() {
    in_load_1_phi_fu_193_p3 = (!sel_tmp2_fu_187_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp2_fu_187_p2.read()[0].to_bool())? in_1_read.read(): sel_tmp1_fu_181_p3.read());
}

void normalise_1::thread_in_load_3_phi_fu_292_p3() {
    in_load_3_phi_fu_292_p3 = (!cond_fu_286_p2.read()[0].is_01())? sc_lv<32>(): ((cond_fu_286_p2.read()[0].to_bool())? in_reg_115.read(): in2_reg_105.read());
}

void normalise_1::thread_notlhs_fu_223_p2() {
    notlhs_fu_223_p2 = (!tmp_fu_209_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_fu_209_p4.read() != ap_const_lv8_FF);
}

void normalise_1::thread_notrhs_fu_229_p2() {
    notrhs_fu_229_p2 = (!tmp_1_fu_219_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_1_fu_219_p1.read() == ap_const_lv23_0);
}

void normalise_1::thread_sel_tmp1_fu_181_p3() {
    sel_tmp1_fu_181_p3 = (!sel_tmp_fu_175_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp_fu_175_p2.read()[0].to_bool())? in_2_read.read(): in_3_read.read());
}

void normalise_1::thread_sel_tmp2_fu_187_p2() {
    sel_tmp2_fu_187_p2 = (!tmp_9_fu_171_p1.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(tmp_9_fu_171_p1.read() == ap_const_lv2_1);
}

void normalise_1::thread_sel_tmp_fu_175_p2() {
    sel_tmp_fu_175_p2 = (!tmp_9_fu_171_p1.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(tmp_9_fu_171_p1.read() == ap_const_lv2_2);
}

void normalise_1::thread_tmp_1_fu_219_p1() {
    tmp_1_fu_219_p1 = in_0_read_to_int_fu_206_p1.read().range(23-1, 0);
}

void normalise_1::thread_tmp_4_fu_235_p2() {
    tmp_4_fu_235_p2 = (notrhs_fu_229_p2.read() | notlhs_fu_223_p2.read());
}

void normalise_1::thread_tmp_7_fu_241_p2() {
    tmp_7_fu_241_p2 = (tmp_4_fu_235_p2.read() & grp_fu_147_p2.read());
}

void normalise_1::thread_tmp_8_fu_267_p1() {
    tmp_8_fu_267_p1 = esl_zext<32,31>(tmp_i_reg_394.read());
}

void normalise_1::thread_tmp_9_fu_171_p1() {
    tmp_9_fu_171_p1 = i_reg_82.read().range(2-1, 0);
}

void normalise_1::thread_tmp_fu_209_p4() {
    tmp_fu_209_p4 = in_0_read_to_int_fu_206_p1.read().range(30, 23);
}

void normalise_1::thread_tmp_i_4_fu_276_p1() {
    tmp_i_4_fu_276_p1 = y_1_reg_399.read();
}

void normalise_1::thread_y_1_fu_270_p2() {
    y_1_fu_270_p2 = (!ap_const_lv32_5F3759DF.is_01() || !tmp_8_fu_267_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_5F3759DF) - sc_biguint<32>(tmp_8_fu_267_p1.read()));
}

void normalise_1::thread_y_fu_254_p1() {
    y_fu_254_p1 = SumOfSquare_3_reg_388.read();
}

void normalise_1::thread_ap_NS_fsm() {
    if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state1))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state1;
        }
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state2))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_fu_165_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state17;
        } else {
            ap_NS_fsm = ap_ST_fsm_state3;
        }
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state3))
    {
        ap_NS_fsm = ap_ST_fsm_state4;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state4))
    {
        ap_NS_fsm = ap_ST_fsm_state5;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state5))
    {
        ap_NS_fsm = ap_ST_fsm_state6;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state6))
    {
        ap_NS_fsm = ap_ST_fsm_state7;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state7))
    {
        ap_NS_fsm = ap_ST_fsm_state8;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state8))
    {
        ap_NS_fsm = ap_ST_fsm_state9;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state9))
    {
        ap_NS_fsm = ap_ST_fsm_state10;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state10))
    {
        ap_NS_fsm = ap_ST_fsm_state11;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state11))
    {
        ap_NS_fsm = ap_ST_fsm_state12;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state12))
    {
        ap_NS_fsm = ap_ST_fsm_state13;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state13))
    {
        ap_NS_fsm = ap_ST_fsm_state14;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state14))
    {
        ap_NS_fsm = ap_ST_fsm_state15;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state15))
    {
        ap_NS_fsm = ap_ST_fsm_state16;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state16))
    {
        ap_NS_fsm = ap_ST_fsm_state2;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state17))
    {
        ap_NS_fsm = ap_ST_fsm_state18;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state18))
    {
        ap_NS_fsm = ap_ST_fsm_state19;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state19))
    {
        ap_NS_fsm = ap_ST_fsm_state20;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state20))
    {
        ap_NS_fsm = ap_ST_fsm_state21;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state21))
    {
        ap_NS_fsm = ap_ST_fsm_state22;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state22))
    {
        ap_NS_fsm = ap_ST_fsm_state23;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state23))
    {
        ap_NS_fsm = ap_ST_fsm_state24;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state24))
    {
        ap_NS_fsm = ap_ST_fsm_state25;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state25))
    {
        ap_NS_fsm = ap_ST_fsm_state26;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state26))
    {
        ap_NS_fsm = ap_ST_fsm_state27;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state27))
    {
        ap_NS_fsm = ap_ST_fsm_state28;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state28))
    {
        ap_NS_fsm = ap_ST_fsm_state29;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state29))
    {
        ap_NS_fsm = ap_ST_fsm_state30;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state30))
    {
        ap_NS_fsm = ap_ST_fsm_state31;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state31))
    {
        ap_NS_fsm = ap_ST_fsm_state32;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state32))
    {
        ap_NS_fsm = ap_ST_fsm_state33;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state33))
    {
        ap_NS_fsm = ap_ST_fsm_state34;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state34))
    {
        ap_NS_fsm = ap_ST_fsm_state35;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state35))
    {
        ap_NS_fsm = ap_ST_fsm_state36;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state36))
    {
        ap_NS_fsm = ap_ST_fsm_state37;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state37))
    {
        ap_NS_fsm = ap_ST_fsm_state38;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state38))
    {
        ap_NS_fsm = ap_ST_fsm_state39;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state39))
    {
        ap_NS_fsm = ap_ST_fsm_state40;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state40))
    {
        ap_NS_fsm = ap_ST_fsm_state41;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state41))
    {
        ap_NS_fsm = ap_ST_fsm_state42;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state42))
    {
        ap_NS_fsm = ap_ST_fsm_state43;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state43))
    {
        ap_NS_fsm = ap_ST_fsm_state44;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state44))
    {
        ap_NS_fsm = ap_ST_fsm_state45;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state45))
    {
        ap_NS_fsm = ap_ST_fsm_state46;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state46))
    {
        ap_NS_fsm = ap_ST_fsm_state47;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state47))
    {
        ap_NS_fsm = ap_ST_fsm_state48;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state48))
    {
        ap_NS_fsm = ap_ST_fsm_state49;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state49))
    {
        ap_NS_fsm = ap_ST_fsm_state50;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state50))
    {
        ap_NS_fsm = ap_ST_fsm_state51;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state51))
    {
        ap_NS_fsm = ap_ST_fsm_state52;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state52))
    {
        ap_NS_fsm = ap_ST_fsm_state53;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state53))
    {
        ap_NS_fsm = ap_ST_fsm_state54;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state54))
    {
        ap_NS_fsm = ap_ST_fsm_state55;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state55))
    {
        ap_NS_fsm = ap_ST_fsm_state56;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state56))
    {
        ap_NS_fsm = ap_ST_fsm_state57;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state57))
    {
        ap_NS_fsm = ap_ST_fsm_state58;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state58))
    {
        ap_NS_fsm = ap_ST_fsm_state59;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state59))
    {
        ap_NS_fsm = ap_ST_fsm_state60;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state60))
    {
        ap_NS_fsm = ap_ST_fsm_state61;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state61))
    {
        ap_NS_fsm = ap_ST_fsm_state62;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state62))
    {
        ap_NS_fsm = ap_ST_fsm_state63;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state63))
    {
        ap_NS_fsm = ap_ST_fsm_state64;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state64))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) && esl_seteq<1,1,1>(exitcond_fu_280_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state71;
        } else {
            ap_NS_fsm = ap_ST_fsm_state65;
        }
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state65))
    {
        ap_NS_fsm = ap_ST_fsm_state66;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state66))
    {
        ap_NS_fsm = ap_ST_fsm_state67;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state67))
    {
        ap_NS_fsm = ap_ST_fsm_state68;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state68))
    {
        ap_NS_fsm = ap_ST_fsm_state69;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state69))
    {
        ap_NS_fsm = ap_ST_fsm_state70;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state70))
    {
        ap_NS_fsm = ap_ST_fsm_state64;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state71))
    {
        ap_NS_fsm = ap_ST_fsm_state72;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state72))
    {
        ap_NS_fsm = ap_ST_fsm_state73;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state73))
    {
        ap_NS_fsm = ap_ST_fsm_state74;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state74))
    {
        ap_NS_fsm = ap_ST_fsm_state75;
    }
    else if (esl_seteq<1,75,75>(ap_CS_fsm.read(), ap_ST_fsm_state75))
    {
        ap_NS_fsm = ap_ST_fsm_state1;
    }
    else
    {
        ap_NS_fsm =  (sc_lv<75>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}
}

